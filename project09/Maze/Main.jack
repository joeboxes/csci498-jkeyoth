//Main
class Main{
	function void main(){
		/*----------------- DECLARE VARS ----------------*/
		var boolean b0, b1, b2;
		var int i, j, k, addr, x, y, col, start, stop, arrLen;
		var Array arr;
		var Float A, B, C, rot, pos;
		var V3D u, v, w;
		var M4D global;
		var Cam3D cam;
		var Point p;
		var Display disp;
		/*----------------- INIT CLASSES ----------------*/
		do Display.init();
		do Float.init();
		do V3D.init();
		do M4D.init();
		do Cam3D.init();
		do Point.init();
		/*----------------- PROGRAM START ----------------*/
		let A = Float.new(Float.getPos(),0,0);
		let B = Float.new(Float.getPos(),0,0);
		let C = Float.new(Float.getPos(),0,0);
		let u = V3D.new(A, B, C);
		let v = V3D.new(A, B, C);
		let w = V3D.new(A, B, C);
		// temporary square array = 4 points * x,y = 8
		let arrLen = 8;
		let arr = Array.new(arrLen);
		// global matrix
		let global = M4D.new();
		//let disp = Display.new(512/2,256/2,150,100);
		let disp = Display.new(512/2,256/2,250,150);
		//
		let rot = Float.new(Float.getPos(),1,-1);//increment rotation
		let pos = Float.new(Float.getPos(),2,-1);//increment position
		let p = Point.new(0,0);// temp screen point
		//CAMERA:
		let cam = Cam3D.new();
		do A.set(Float.getPos(),0,0);
		do B.set(Float.getPos(),5,0);
		do C.set(Float.getPos(),0,0);
		do cam.setPosZ(A);
		do cam.setPosY(B);
		do cam.setPosZ(C);
		
		//MAIN LOOP:------------
		let b0 = true;
		while(b0){
			// USER INPUT:
			let i = Keyboard.keyPressed();
			//do Output.printString("w: ");
			//do Output.printInt(i);
			if(i=131){//up
				do Float.add(A,cam.getPosY(),pos);
				do cam.setPosY(A);
				//do Output.printString("cam.posY: ");
				//do fl0.print();
				//do Output.println();
			}
			if(i=133){//down
				do Float.sub(A,cam.getPosY(),pos);
				do cam.setPosY(A);
				//do Output.printString("cam.posY: ");
				//do fl0.print();
				//do Output.println();
			}
			if(i=132){//right
				do Float.add(A,cam.getRotY(),rot);
				do Float.radianAlias(A,A);
				do cam.setRotY(A);
				//do Output.printString("cam.rotY: ");
				//do fl0.print();
				//do Output.println();
			}
			if(i=130){//left
				do Float.sub(A,cam.getRotY(),rot);
				do Float.radianAlias(A,A);
				do cam.setRotY(A);
				//do Output.printString("cam.rotY: ");
				//do fl0.print();
				//do Output.println();
			}
			if(~(i=0)){
			//if(i=128){//enter - render
				//do Output.printString("RENDER");
				//do Output.println();
				// ROTATE / TRANSLATE MATRIX TO CAMERA POSITION
				do M4D.identity(global);
				do Float.negate(A,cam.getRotY());
				do M4D.rotateY(global,global,A);
				do Float.negate(A,cam.getPosX());
				do Float.negate(B,cam.getPosY());
				do Float.negate(C,cam.getPosZ());
				do M4D.translate(global,global,A,B,C);
				// INIT SCREEN FOR DRAWLING
				do Screen.clearScreen();
				do disp.drawBounding();
				
				// RENDER BOX:
				// 1
				do A.set(Float.getNeg(),1,1);
				do B.set(Float.getPos(),0,0);
				do C.set(Float.getPos(),9,0);
				do u.set(A, B, C);
				do M4D.mulV3D(v,global,u);
				do Display.V3Dto2D(v, global, v, cam);
				do disp.getRender2DPoint(p, v, cam);
					let arr[0] = p.getX();
					let arr[1] = p.getY();
				//do Screen.drawCircle(p.getX(),p.getY(), 2);
				// 2
				do A.set(Float.getNeg(),1,1);
				do B.set(Float.getPos(),2,1);
				do C.set(Float.getPos(),9,0);
				do u.set(A, B, C);
				do M4D.mulV3D(v,global,u);
				do Display.V3Dto2D(v, global, v, cam);
				do disp.getRender2DPoint(p, v, cam);
					let arr[2] = p.getX();
					let arr[3] = p.getY();
				//do Screen.drawCircle(p.getX(),p.getY(), 2);
				// 3
				do A.set(Float.getPos(),1,1);
				do B.set(Float.getPos(),2,1);
				do C.set(Float.getPos(),9,0);
				do u.set(A, B, C);
				do M4D.mulV3D(v,global,u);
				do Display.V3Dto2D(v, global, v, cam);
				do disp.getRender2DPoint(p, v, cam);
					let arr[4] = p.getX();
					let arr[5] = p.getY();
				//do Screen.drawCircle(p.getX(),p.getY(), 2);
				// 4
				do A.set(Float.getPos(),1,1);
				do B.set(Float.getPos(),0,0);
				do C.set(Float.getPos(),9,0);
				do u.set(A, B, C);
				do M4D.mulV3D(v,global,u);
				do Display.V3Dto2D(v, global, v, cam);
				do disp.getRender2DPoint(p, v, cam);
				//do Screen.drawCircle(p.getX(),p.getY(), 2);
					let arr[6] = p.getX();
					let arr[7] = p.getY();
				
				//DRAW SQUARE:
				do Screen.drawLine(arr[0],arr[1], arr[2],arr[3]);
				do Screen.drawLine(arr[2],arr[3], arr[4],arr[5]);
				do Screen.drawLine(arr[4],arr[5], arr[6],arr[7]);
				do Screen.drawLine(arr[6],arr[7], arr[0],arr[1]);
				
				// 5
				do A.set(Float.getNeg(),1,1);
				do B.set(Float.getPos(),0,0);
				do C.set(Float.getNeg(),9,0);
				do u.set(A, B, C);
				do M4D.mulV3D(v,global,u);
				do Display.V3Dto2D(v, global, v, cam);
				do disp.getRender2DPoint(p, v, cam);
				//do Screen.drawCircle(p.getX(),p.getY(), 2);
					let arr[0] = p.getX();
					let arr[1] = p.getY();
				// 6
				do A.set(Float.getNeg(),1,1);
				do B.set(Float.getPos(),2,1);
				do C.set(Float.getNeg(),9,0);
				do u.set(A, B, C);
				do M4D.mulV3D(v,global,u);
				do Display.V3Dto2D(v, global, v, cam);
				do disp.getRender2DPoint(p, v, cam);
				//do Screen.drawCircle(p.getX(),p.getY(), 2);
					let arr[2] = p.getX();
					let arr[3] = p.getY();
				// 7
				do A.set(Float.getPos(),1,1);
				do B.set(Float.getPos(),2,1);
				do C.set(Float.getNeg(),9,0);
				do u.set(A, B, C);
				do M4D.mulV3D(v,global,u);
				do Display.V3Dto2D(v, global, v, cam);
				do disp.getRender2DPoint(p, v, cam);
				//do Screen.drawCircle(p.getX(),p.getY(), 2);
					let arr[4] = p.getX();
					let arr[5] = p.getY();
				// 8
				do A.set(Float.getPos(),1,1);
				do B.set(Float.getPos(),0,0);
				do C.set(Float.getNeg(),9,0);
				do u.set(A, B, C);
				do M4D.mulV3D(v,global,u);
				do Display.V3Dto2D(v, global, v, cam);
				do disp.getRender2DPoint(p, v, cam);
				//do Screen.drawCircle(p.getX(),p.getY(), 2);
					let arr[6] = p.getX();
					let arr[7] = p.getY();
				
				//DRAW SQUARE:
				do Screen.drawLine(arr[0],arr[1], arr[2],arr[3]);
				do Screen.drawLine(arr[2],arr[3], arr[4],arr[5]);
				do Screen.drawLine(arr[4],arr[5], arr[6],arr[7]);
				do Screen.drawLine(arr[6],arr[7], arr[0],arr[1]);
			}
		}
/*
KEYS LIST:
LEFT: 130
UP: 131
DOWN: 133
RIGHT: 132
SPACE: 32 
ENTER: 128
*/
		
		do A.dispose();
		do B.dispose();
		do C.dispose();
		do rot.dispose();
		do pos.dispose();
		//
		do arr.dispose();
		//
		do u.dispose();
		do v.dispose();
		do w.dispose();
		//
		do global.dispose();
		do cam.dispose();
		do p.dispose();
		do disp.dispose();
		do Output.printString(" done ");
		do Output.println();
		return;
	}
}



