function LineBuffer.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
push constant 4
call Math.multiply 2
pop this 1
push this 1
call Array.new 1
pop this 0
push pointer 0
call LineBuffer.begin 1
pop temp 0
push pointer 0
return
function LineBuffer.begin 0
push argument 0
pop pointer 0
push constant 0
pop this 2
push constant 0
not
pop this 3
push constant 0
return
function LineBuffer.addLine 0
push argument 0
pop pointer 0
push this 2
push this 1
lt
push this 3
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push this 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 2
push constant 1
add
push this 0
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 2
push constant 2
add
push this 0
add
push argument 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 2
push constant 3
add
push this 0
add
push argument 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 2
push constant 4
add
pop this 2
label IF_FALSE0
push constant 0
return
function LineBuffer.drawLines 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push argument 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push local 0
push constant 1
add
push this 0
add
pop pointer 1
push that 0
push local 0
push constant 2
add
push this 0
add
pop pointer 1
push that 0
push local 0
push constant 3
add
push this 0
add
pop pointer 1
push that 0
call Screen.drawLine 4
pop temp 0
push local 0
push constant 4
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
goto IF_END0
label IF_FALSE0
label WHILE_EXP1
push local 0
push this 2
lt
not
if-goto WHILE_END1
push local 0
push this 0
add
pop pointer 1
push that 0
push local 0
push constant 1
add
push this 0
add
pop pointer 1
push that 0
push local 0
push constant 2
add
push this 0
add
pop pointer 1
push that 0
push local 0
push constant 3
add
push this 0
add
pop pointer 1
push that 0
push constant 0
call Display.singleLine 5
pop temp 0
push local 0
push constant 4
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
label IF_END0
push constant 0
return
function LineBuffer.end 0
push argument 0
pop pointer 0
push this 2
push this 1
lt
push this 3
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push this 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push constant 0
pop this 3
push constant 0
return
function LineBuffer.dispose 0
push argument 0
pop pointer 0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function LineBuffer.init 0
push constant 0
return
