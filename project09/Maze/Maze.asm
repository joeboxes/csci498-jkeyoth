@256
D=A
@SP
M=D
@5
D=A
@SP
M=M+D
@SYS.INIT
0;JMP
//end of bootstrap

//Function CAM3D.NEW
(CAM3D.NEW)
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.ALLOC 1
@CAM3D.NEWRetAddr0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.ALLOC//call goto
0;JMP
(CAM3D.NEWRetAddr0)
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//Call FLOAT.GETPOS 0
@CAM3D.NEWRetAddr2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(CAM3D.NEWRetAddr2)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@CAM3D.NEWRetAddr4
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(CAM3D.NEWRetAddr4)
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call FLOAT.GETPOS 0
@CAM3D.NEWRetAddr6
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(CAM3D.NEWRetAddr6)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@CAM3D.NEWRetAddr8
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(CAM3D.NEWRetAddr8)
//POP THIS 1
@THIS
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call FLOAT.GETPOS 0
@CAM3D.NEWRetAddr10
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(CAM3D.NEWRetAddr10)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@CAM3D.NEWRetAddr12
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(CAM3D.NEWRetAddr12)
//POP THIS 2
@THIS
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call FLOAT.GETPOS 0
@CAM3D.NEWRetAddr14
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(CAM3D.NEWRetAddr14)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@CAM3D.NEWRetAddr16
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(CAM3D.NEWRetAddr16)
//POP THIS 3
@THIS
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call FLOAT.GETPOS 0
@CAM3D.NEWRetAddr18
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(CAM3D.NEWRetAddr18)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@CAM3D.NEWRetAddr20
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(CAM3D.NEWRetAddr20)
//POP THIS 5
@THIS
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call FLOAT.GETPOS 0
@CAM3D.NEWRetAddr22
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(CAM3D.NEWRetAddr22)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@CAM3D.NEWRetAddr24
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(CAM3D.NEWRetAddr24)
//POP THIS 4
@THIS
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call FLOAT.GETNEG 0
@CAM3D.NEWRetAddr26
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETNEG//call goto
0;JMP
(CAM3D.NEWRetAddr26)
//PUSH CONSTANT 20
@20
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@CAM3D.NEWRetAddr28
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(CAM3D.NEWRetAddr28)
//POP THIS 6
@THIS
A=M
D=A
@6
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.SET
(CAM3D.SET)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@CAM3D.SETRetAddr36
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(CAM3D.SETRetAddr36)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@CAM3D.SETRetAddr38
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(CAM3D.SETRetAddr38)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@CAM3D.SETRetAddr40
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(CAM3D.SETRetAddr40)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 4
@ARG
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@CAM3D.SETRetAddr42
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(CAM3D.SETRetAddr42)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 5
@ARG
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@CAM3D.SETRetAddr44
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(CAM3D.SETRetAddr44)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 6
@ARG
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@CAM3D.SETRetAddr46
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(CAM3D.SETRetAddr46)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 6
@THIS
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 7
@ARG
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@CAM3D.SETRetAddr48
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(CAM3D.SETRetAddr48)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.GETNORM
(CAM3D.GETNORM)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//Call FLOAT.GETPOS 0
@CAM3D.GETNORMRetAddr56
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(CAM3D.GETNORMRetAddr56)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@CAM3D.GETNORMRetAddr58
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(CAM3D.GETNORMRetAddr58)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.SETY 2
@CAM3D.GETNORMRetAddr60
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.SETY//call goto
0;JMP
(CAM3D.GETNORMRetAddr60)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SIN 2
@CAM3D.GETNORMRetAddr62
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SIN//call goto
0;JMP
(CAM3D.GETNORMRetAddr62)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.SETX 2
@CAM3D.GETNORMRetAddr64
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.SETX//call goto
0;JMP
(CAM3D.GETNORMRetAddr64)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COS 2
@CAM3D.GETNORMRetAddr66
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COS//call goto
0;JMP
(CAM3D.GETNORMRetAddr66)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.SETZ 2
@CAM3D.GETNORMRetAddr68
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.SETZ//call goto
0;JMP
(CAM3D.GETNORMRetAddr68)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@CAM3D.GETNORMRetAddr70
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(CAM3D.GETNORMRetAddr70)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.GETPOSXINT
(CAM3D.GETPOSXINT)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call FLOAT.TOINT 2
@CAM3D.GETPOSXINTRetAddr79
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOINT//call goto
0;JMP
(CAM3D.GETPOSXINTRetAddr79)
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.GETPOSYINT
(CAM3D.GETPOSYINT)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call FLOAT.TOINT 2
@CAM3D.GETPOSYINTRetAddr88
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOINT//call goto
0;JMP
(CAM3D.GETPOSYINTRetAddr88)
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.GETPOSZINT
(CAM3D.GETPOSZINT)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call FLOAT.TOINT 2
@CAM3D.GETPOSZINTRetAddr97
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOINT//call goto
0;JMP
(CAM3D.GETPOSZINTRetAddr97)
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.GETPOSX
(CAM3D.GETPOSX)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.GETPOSY
(CAM3D.GETPOSY)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.GETPOSZ
(CAM3D.GETPOSZ)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.GETROTY
(CAM3D.GETROTY)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.GETSCALE
(CAM3D.GETSCALE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.GETLENS
(CAM3D.GETLENS)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.GETCUT
(CAM3D.GETCUT)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 6
@THIS
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.SETPOSX
(CAM3D.SETPOSX)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@CAM3D.SETPOSXRetAddr147
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(CAM3D.SETPOSXRetAddr147)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.SETPOSY
(CAM3D.SETPOSY)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@CAM3D.SETPOSYRetAddr155
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(CAM3D.SETPOSYRetAddr155)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.SETPOSZ
(CAM3D.SETPOSZ)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@CAM3D.SETPOSZRetAddr163
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(CAM3D.SETPOSZRetAddr163)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.SETROTY
(CAM3D.SETROTY)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@CAM3D.SETROTYRetAddr171
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(CAM3D.SETROTYRetAddr171)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.SETLENS
(CAM3D.SETLENS)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@CAM3D.SETLENSRetAddr179
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(CAM3D.SETLENSRetAddr179)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.SETSCALE
(CAM3D.SETSCALE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@CAM3D.SETSCALERetAddr187
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(CAM3D.SETSCALERetAddr187)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.SETCUT
(CAM3D.SETCUT)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 6
@THIS
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@CAM3D.SETCUTRetAddr195
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(CAM3D.SETCUTRetAddr195)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.DISPOSE
(CAM3D.DISPOSE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@CAM3D.DISPOSERetAddr203
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(CAM3D.DISPOSERetAddr203)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@CAM3D.DISPOSERetAddr205
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(CAM3D.DISPOSERetAddr205)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@CAM3D.DISPOSERetAddr207
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(CAM3D.DISPOSERetAddr207)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@CAM3D.DISPOSERetAddr209
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(CAM3D.DISPOSERetAddr209)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@CAM3D.DISPOSERetAddr211
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(CAM3D.DISPOSERetAddr211)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@CAM3D.DISPOSERetAddr213
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(CAM3D.DISPOSERetAddr213)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 6
@THIS
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@CAM3D.DISPOSERetAddr215
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(CAM3D.DISPOSERetAddr215)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.DEALLOC 1
@CAM3D.DISPOSERetAddr217
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.DEALLOC//call goto
0;JMP
(CAM3D.DISPOSERetAddr217)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function CAM3D.INIT
(CAM3D.INIT)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.NEW
(FLOAT.NEW)
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.ALLOC 1
@FLOAT.NEWRetAddr231
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.ALLOC//call goto
0;JMP
(FLOAT.NEWRetAddr231)
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@FLOAT.NEWRetAddr233
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(FLOAT.NEWRetAddr233)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.SET
(FLOAT.SET)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 1
@THIS
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 2
@THIS
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SETTOHIGHESTMANT 2
@FLOAT.SETRetAddr241
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETTOHIGHESTMANT//call goto
0;JMP
(FLOAT.SETRetAddr241)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.GETSIGN
(FLOAT.GETSIGN)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.GETMANT
(FLOAT.GETMANT)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.GETEXPO
(FLOAT.GETEXPO)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.SETSIGN
(FLOAT.SETSIGN)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.SETMANT
(FLOAT.SETMANT)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 1
@THIS
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.SETEXPO
(FLOAT.SETEXPO)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 2
@THIS
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.PRINT
(FLOAT.PRINT)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.PRINTF 1
@FLOAT.PRINTRetAddr285
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.PRINTF//call goto
0;JMP
(FLOAT.PRINTRetAddr285)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.DISPOSE
(FLOAT.DISPOSE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.DEALLOC 1
@FLOAT.DISPOSERetAddr293
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.DEALLOC//call goto
0;JMP
(FLOAT.DISPOSERetAddr293)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.INIT
(FLOAT.INIT)
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 0
@SP
AM=M-1
D=M
@Float.0
M=D
//PUSH CONSTANT 9999
@9999
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 1
@SP
AM=M-1
D=M
@Float.1
M=D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 2
@SP
AM=M-1
D=M
@Float.2
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 3
@SP
AM=M-1
D=M
@Float.3
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.GETPOS
(FLOAT.GETPOS)
//PUSH STATIC 3
@Float.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.GETNEG
(FLOAT.GETNEG)
//PUSH STATIC 2
@Float.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.GETMAXINT
(FLOAT.GETMAXINT)
//PUSH STATIC 1
@Float.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.GETSIGDIG
(FLOAT.GETSIGDIG)
//PUSH STATIC 0
@Float.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.GETPI
(FLOAT.GETPI)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.GETPIRetAddr331
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.GETPIRetAddr331)
//PUSH CONSTANT 3141
@3141
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@FLOAT.GETPIRetAddr333
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(FLOAT.GETPIRetAddr333)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.GET2PI
(FLOAT.GET2PI)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.GET2PIRetAddr341
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.GET2PIRetAddr341)
//PUSH CONSTANT 6283
@6283
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@FLOAT.GET2PIRetAddr343
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(FLOAT.GET2PIRetAddr343)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.GETONE
(FLOAT.GETONE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.GETONERetAddr351
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.GETONERetAddr351)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@FLOAT.GETONERetAddr353
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(FLOAT.GETONERetAddr353)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.GETZERO
(FLOAT.GETZERO)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.GETZERORetAddr361
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.GETZERORetAddr361)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@FLOAT.GETZERORetAddr363
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(FLOAT.GETZERORetAddr363)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.SIN
(FLOAT.SIN)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.SINRetAddr371
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.SINRetAddr371)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.SINRetAddr373
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.SINRetAddr373)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.SINRetAddr375
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.SINRetAddr375)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.SINRetAddr377
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.SINRetAddr377)
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.SINRetAddr379
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.SINRetAddr379)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.SINRetAddr381
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.SINRetAddr381)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@FLOAT.SINRetAddr383
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(FLOAT.SINRetAddr383)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@FLOAT.SINRetAddr385
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(FLOAT.SINRetAddr385)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@FLOAT.SINRetAddr387
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(FLOAT.SINRetAddr387)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@FLOAT.SINRetAddr389
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(FLOAT.SINRetAddr389)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@FLOAT.SINRetAddr391
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(FLOAT.SINRetAddr391)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@FLOAT.SINRetAddr393
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(FLOAT.SINRetAddr393)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.SINRetAddr395
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.SINRetAddr395)
//PUSH CONSTANT 6000
@6000
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@FLOAT.SINRetAddr397
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(FLOAT.SINRetAddr397)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@FLOAT.SINRetAddr399
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(FLOAT.SINRetAddr399)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@FLOAT.SINRetAddr401
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(FLOAT.SINRetAddr401)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.SINRetAddr403
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.SINRetAddr403)
//PUSH CONSTANT 1200
@1200
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@FLOAT.SINRetAddr405
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(FLOAT.SINRetAddr405)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@FLOAT.SINRetAddr407
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(FLOAT.SINRetAddr407)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@FLOAT.SINRetAddr409
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(FLOAT.SINRetAddr409)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.SINRetAddr411
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.SINRetAddr411)
//PUSH CONSTANT 5040
@5040
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@FLOAT.SINRetAddr413
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(FLOAT.SINRetAddr413)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@FLOAT.SINRetAddr415
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(FLOAT.SINRetAddr415)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@FLOAT.SINRetAddr417
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(FLOAT.SINRetAddr417)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.SINRetAddr419
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.SINRetAddr419)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.SINRetAddr421
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.SINRetAddr421)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.SINRetAddr423
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.SINRetAddr423)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.SINRetAddr425
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.SINRetAddr425)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.SINRetAddr427
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.SINRetAddr427)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.SINRetAddr429
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.SINRetAddr429)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.COS
(FLOAT.COS)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.COSRetAddr437
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.COSRetAddr437)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.COSRetAddr439
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.COSRetAddr439)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.COSRetAddr441
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.COSRetAddr441)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.COSRetAddr443
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.COSRetAddr443)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.COSRetAddr445
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.COSRetAddr445)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.COSRetAddr447
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.COSRetAddr447)
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@FLOAT.COSRetAddr449
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(FLOAT.COSRetAddr449)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@FLOAT.COSRetAddr451
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(FLOAT.COSRetAddr451)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@FLOAT.COSRetAddr453
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(FLOAT.COSRetAddr453)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.COSRetAddr455
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.COSRetAddr455)
//PUSH CONSTANT 2000
@2000
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@FLOAT.COSRetAddr457
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(FLOAT.COSRetAddr457)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@FLOAT.COSRetAddr459
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(FLOAT.COSRetAddr459)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@FLOAT.COSRetAddr461
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(FLOAT.COSRetAddr461)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.COSRetAddr463
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.COSRetAddr463)
//PUSH CONSTANT 2400
@2400
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@FLOAT.COSRetAddr465
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(FLOAT.COSRetAddr465)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@FLOAT.COSRetAddr467
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(FLOAT.COSRetAddr467)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@FLOAT.COSRetAddr469
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(FLOAT.COSRetAddr469)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.COSRetAddr471
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.COSRetAddr471)
//PUSH CONSTANT 720
@720
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@FLOAT.COSRetAddr473
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(FLOAT.COSRetAddr473)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@FLOAT.COSRetAddr475
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(FLOAT.COSRetAddr475)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@FLOAT.COSRetAddr477
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(FLOAT.COSRetAddr477)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.COSRetAddr479
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.COSRetAddr479)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.COSRetAddr481
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.COSRetAddr481)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.COSRetAddr483
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.COSRetAddr483)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.COSRetAddr485
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.COSRetAddr485)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.COSRetAddr487
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.COSRetAddr487)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.COSRetAddr489
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.COSRetAddr489)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.TAN
(FLOAT.TAN)
//PUSH CONSTANT 19
@19
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@FLOAT.TANRetAddr497
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(FLOAT.TANRetAddr497)
//PUSH CONSTANT 116
@116
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr499
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr499)
//PUSH CONSTANT 97
@97
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr501
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr501)
//PUSH CONSTANT 110
@110
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr503
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr503)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr505
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr505)
//PUSH CONSTANT 110
@110
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr507
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr507)
//PUSH CONSTANT 111
@111
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr509
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr509)
//PUSH CONSTANT 116
@116
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr511
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr511)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr513
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr513)
//PUSH CONSTANT 105
@105
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr515
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr515)
//PUSH CONSTANT 109
@109
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr517
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr517)
//PUSH CONSTANT 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr519
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr519)
//PUSH CONSTANT 108
@108
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr521
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr521)
//PUSH CONSTANT 101
@101
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr523
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr523)
//PUSH CONSTANT 109
@109
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr525
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr525)
//PUSH CONSTANT 101
@101
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr527
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr527)
//PUSH CONSTANT 110
@110
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr529
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr529)
//PUSH CONSTANT 116
@116
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr531
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr531)
//PUSH CONSTANT 101
@101
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr533
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr533)
//PUSH CONSTANT 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.TANRetAddr535
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.TANRetAddr535)
//Call OUTPUT.PRINTSTRING 1
@FLOAT.TANRetAddr537
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(FLOAT.TANRetAddr537)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@FLOAT.TANRetAddr539
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(FLOAT.TANRetAddr539)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.RADIANALIAS
(FLOAT.RADIANALIAS)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.RADIANALIASRetAddr547
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr547)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.RADIANALIASRetAddr549
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr549)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.RADIANALIASRetAddr551
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr551)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.RADIANALIASRetAddr553
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr553)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPI 1
@FLOAT.RADIANALIASRetAddr555
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPI//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr555)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GET2PI 1
@FLOAT.RADIANALIASRetAddr557
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GET2PI//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr557)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEGATE 2
@FLOAT.RADIANALIASRetAddr559
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEGATE//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr559)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.RADIANALIASRetAddr561
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr561)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.RADIANALIAS$WHILE_EXP0)
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GT 2
@FLOAT.RADIANALIASRetAddr563
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GT//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr563)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@FLOAT.RADIANALIAS$WHILE_END0
D;JNE
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@FLOAT.RADIANALIASRetAddr566
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr566)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO WHILE_EXP0
@FLOAT.RADIANALIAS$WHILE_EXP0
0;JMP
(FLOAT.RADIANALIAS$WHILE_END0)
(FLOAT.RADIANALIAS$WHILE_EXP1)
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.LT 2
@FLOAT.RADIANALIASRetAddr568
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.LT//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr568)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END1
@SP
AM=M-1
D=M
@FLOAT.RADIANALIAS$WHILE_END1
D;JNE
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@FLOAT.RADIANALIASRetAddr571
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr571)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO WHILE_EXP1
@FLOAT.RADIANALIAS$WHILE_EXP1
0;JMP
(FLOAT.RADIANALIAS$WHILE_END1)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.RADIANALIASRetAddr573
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr573)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.RADIANALIASRetAddr575
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr575)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.RADIANALIASRetAddr577
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr577)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.RADIANALIASRetAddr579
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr579)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.RADIANALIASRetAddr581
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.RADIANALIASRetAddr581)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.SQRT
(FLOAT.SQRT)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.SQRTRetAddr589
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.SQRTRetAddr589)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.SQRTRetAddr591
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.SQRTRetAddr591)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.SQRTRetAddr593
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.SQRTRetAddr593)
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call FLOAT.GETPOS 0
@FLOAT.SQRTRetAddr595
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.SQRTRetAddr595)
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//Call FLOAT.NEW 3
@FLOAT.SQRTRetAddr598
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.SQRTRetAddr598)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.SQRTRetAddr600
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.SQRTRetAddr600)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.SQRTRetAddr602
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.SQRTRetAddr602)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.SQRTRetAddr604
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.SQRTRetAddr604)
//Call FLOAT.SET 4
@FLOAT.SQRTRetAddr606
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(FLOAT.SQRTRetAddr606)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.SQRTRetAddr608
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.SQRTRetAddr608)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@FLOAT.SQRTRetAddr610
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(FLOAT.SQRTRetAddr610)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(FLOAT.SQRT$WHILE_EXP0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER612
D;JGT
@GT_NOTGREATER612
D;JLE
(GT_GREATER612)
@SP
A=M-1
M=-1
@GT_END612
0;JMP
(GT_NOTGREATER612)
@SP
A=M-1
M=0
@GT_END612
0;JMP
(GT_END612)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@FLOAT.SQRT$WHILE_END0
D;JNE
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@FLOAT.SQRTRetAddr614
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(FLOAT.SQRTRetAddr614)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@FLOAT.SQRTRetAddr616
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(FLOAT.SQRTRetAddr616)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@FLOAT.SQRTRetAddr618
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(FLOAT.SQRTRetAddr618)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@FLOAT.SQRT$WHILE_EXP0
0;JMP
(FLOAT.SQRT$WHILE_END0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.SQRTRetAddr621
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.SQRTRetAddr621)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.SQRTRetAddr623
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.SQRTRetAddr623)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.SQRTRetAddr625
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.SQRTRetAddr625)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.SQRTRetAddr627
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.SQRTRetAddr627)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.SQRTRetAddr629
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.SQRTRetAddr629)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.POW
(FLOAT.POW)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.POWRetAddr637
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.POWRetAddr637)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.POWRetAddr639
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.POWRetAddr639)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOINT 2
@FLOAT.POWRetAddr641
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOINT//call goto
0;JMP
(FLOAT.POWRetAddr641)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(FLOAT.POW$WHILE_EXP0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER643
D;JGT
@GT_NOTGREATER643
D;JLE
(GT_GREATER643)
@SP
A=M-1
M=-1
@GT_END643
0;JMP
(GT_NOTGREATER643)
@SP
A=M-1
M=0
@GT_END643
0;JMP
(GT_END643)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@FLOAT.POW$WHILE_END0
D;JNE
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@FLOAT.POWRetAddr645
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(FLOAT.POWRetAddr645)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@FLOAT.POW$WHILE_EXP0
0;JMP
(FLOAT.POW$WHILE_END0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.POWRetAddr648
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.POWRetAddr648)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.POWRetAddr650
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.POWRetAddr650)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.EXC
(FLOAT.EXC)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.EXCRetAddr658
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.EXCRetAddr658)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.EXCRetAddr660
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.EXCRetAddr660)
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call FLOAT.GETPOS 0
@FLOAT.EXCRetAddr662
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.EXCRetAddr662)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.EXCRetAddr664
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.EXCRetAddr664)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.EXCRetAddr666
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.EXCRetAddr666)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GT 2
@FLOAT.EXCRetAddr668
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GT//call goto
0;JMP
(FLOAT.EXCRetAddr668)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@FLOAT.EXC$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@FLOAT.EXC$IF_FALSE0
0;JMP
(FLOAT.EXC$IF_TRUE0)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.EXCRetAddr670
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.EXCRetAddr670)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call FLOAT.TOINT 2
@FLOAT.EXCRetAddr673
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOINT//call goto
0;JMP
(FLOAT.EXCRetAddr673)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(FLOAT.EXC$WHILE_EXP0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER675
D;JGT
@GT_NOTGREATER675
D;JLE
(GT_GREATER675)
@SP
A=M-1
M=-1
@GT_END675
0;JMP
(GT_NOTGREATER675)
@SP
A=M-1
M=0
@GT_END675
0;JMP
(GT_END675)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@FLOAT.EXC$WHILE_END0
D;JNE
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@FLOAT.EXCRetAddr677
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(FLOAT.EXCRetAddr677)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@FLOAT.EXCRetAddr679
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(FLOAT.EXCRetAddr679)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@FLOAT.EXC$WHILE_EXP0
0;JMP
(FLOAT.EXC$WHILE_END0)
(FLOAT.EXC$IF_FALSE0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.EXCRetAddr682
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.EXCRetAddr682)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.EXCRetAddr684
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.EXCRetAddr684)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.EXCRetAddr686
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.EXCRetAddr686)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.EXCRetAddr688
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.EXCRetAddr688)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.EXCRetAddr690
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.EXCRetAddr690)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.MIN
(FLOAT.MIN)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GT 2
@FLOAT.MINRetAddr698
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GT//call goto
0;JMP
(FLOAT.MINRetAddr698)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@FLOAT.MIN$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@FLOAT.MIN$IF_FALSE0
0;JMP
(FLOAT.MIN$IF_TRUE0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.MINRetAddr700
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.MINRetAddr700)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END0
@FLOAT.MIN$IF_END0
0;JMP
(FLOAT.MIN$IF_FALSE0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.MINRetAddr702
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.MINRetAddr702)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.MIN$IF_END0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.MAX
(FLOAT.MAX)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GT 2
@FLOAT.MAXRetAddr710
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GT//call goto
0;JMP
(FLOAT.MAXRetAddr710)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@FLOAT.MAX$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@FLOAT.MAX$IF_FALSE0
0;JMP
(FLOAT.MAX$IF_TRUE0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.MAXRetAddr712
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.MAXRetAddr712)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END0
@FLOAT.MAX$IF_END0
0;JMP
(FLOAT.MAX$IF_FALSE0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.MAXRetAddr714
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.MAXRetAddr714)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.MAX$IF_END0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.GT
(FLOAT.GT)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.GTRetAddr722
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.GTRetAddr722)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.GTRetAddr724
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.GTRetAddr724)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS726
D;JEQ
@EQ_NOTEQUALS726
D;JNE
(EQ_EQUALS726)
@SP
A=M-1
M=-1
@EQ_END726
0;JMP
(EQ_NOTEQUALS726)
@SP
A=M-1
M=0
@EQ_END726
0;JMP
(EQ_END726)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@FLOAT.GT$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@FLOAT.GT$IF_FALSE0
0;JMP
(FLOAT.GT$IF_TRUE0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.GTRetAddr727
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.GTRetAddr727)
//Call FLOAT.GETPOS 0
@FLOAT.GTRetAddr729
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.GTRetAddr729)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS731
D;JEQ
@EQ_NOTEQUALS731
D;JNE
(EQ_EQUALS731)
@SP
A=M-1
M=-1
@EQ_END731
0;JMP
(EQ_NOTEQUALS731)
@SP
A=M-1
M=0
@EQ_END731
0;JMP
(EQ_END731)
//IF-GOTO IF_TRUE1
@SP
AM=M-1
D=M
@FLOAT.GT$IF_TRUE1
D;JNE
//GOTO IF_FALSE1
@FLOAT.GT$IF_FALSE1
0;JMP
(FLOAT.GT$IF_TRUE1)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.GTRetAddr732
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.GTRetAddr732)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS734
D;JEQ
@EQ_NOTEQUALS734
D;JNE
(EQ_EQUALS734)
@SP
A=M-1
M=-1
@EQ_END734
0;JMP
(EQ_NOTEQUALS734)
@SP
A=M-1
M=0
@EQ_END734
0;JMP
(EQ_END734)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.GTRetAddr735
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.GTRetAddr735)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS737
D;JEQ
@EQ_NOTEQUALS737
D;JNE
(EQ_EQUALS737)
@SP
A=M-1
M=-1
@EQ_END737
0;JMP
(EQ_NOTEQUALS737)
@SP
A=M-1
M=0
@EQ_END737
0;JMP
(EQ_END737)
//OR
@SP
AM=M-1
D=M
A=A-1
M=D|M
//IF-GOTO IF_TRUE2
@SP
AM=M-1
D=M
@FLOAT.GT$IF_TRUE2
D;JNE
//GOTO IF_FALSE2
@FLOAT.GT$IF_FALSE2
0;JMP
(FLOAT.GT$IF_TRUE2)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.GTRetAddr739
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.GTRetAddr739)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS741
D;JEQ
@EQ_NOTEQUALS741
D;JNE
(EQ_EQUALS741)
@SP
A=M-1
M=-1
@EQ_END741
0;JMP
(EQ_NOTEQUALS741)
@SP
A=M-1
M=0
@EQ_END741
0;JMP
(EQ_END741)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.GTRetAddr742
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.GTRetAddr742)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS744
D;JEQ
@EQ_NOTEQUALS744
D;JNE
(EQ_EQUALS744)
@SP
A=M-1
M=-1
@EQ_END744
0;JMP
(EQ_NOTEQUALS744)
@SP
A=M-1
M=0
@EQ_END744
0;JMP
(EQ_END744)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//IF-GOTO IF_TRUE3
@SP
AM=M-1
D=M
@FLOAT.GT$IF_TRUE3
D;JNE
//GOTO IF_FALSE3
@FLOAT.GT$IF_FALSE3
0;JMP
(FLOAT.GT$IF_TRUE3)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
(FLOAT.GT$IF_FALSE3)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.GTRetAddr752
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.GTRetAddr752)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS754
D;JEQ
@EQ_NOTEQUALS754
D;JNE
(EQ_EQUALS754)
@SP
A=M-1
M=-1
@EQ_END754
0;JMP
(EQ_NOTEQUALS754)
@SP
A=M-1
M=0
@EQ_END754
0;JMP
(EQ_END754)
//IF-GOTO IF_TRUE4
@SP
AM=M-1
D=M
@FLOAT.GT$IF_TRUE4
D;JNE
//GOTO IF_FALSE4
@FLOAT.GT$IF_FALSE4
0;JMP
(FLOAT.GT$IF_TRUE4)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//GOTO IF_END4
@FLOAT.GT$IF_END4
0;JMP
(FLOAT.GT$IF_FALSE4)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
(FLOAT.GT$IF_END4)
//GOTO IF_END2
@FLOAT.GT$IF_END2
0;JMP
(FLOAT.GT$IF_FALSE2)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.GTRetAddr768
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.GTRetAddr768)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.GTRetAddr770
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.GTRetAddr770)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS772
D;JEQ
@EQ_NOTEQUALS772
D;JNE
(EQ_EQUALS772)
@SP
A=M-1
M=-1
@EQ_END772
0;JMP
(EQ_NOTEQUALS772)
@SP
A=M-1
M=0
@EQ_END772
0;JMP
(EQ_END772)
//IF-GOTO IF_TRUE5
@SP
AM=M-1
D=M
@FLOAT.GT$IF_TRUE5
D;JNE
//GOTO IF_FALSE5
@FLOAT.GT$IF_FALSE5
0;JMP
(FLOAT.GT$IF_TRUE5)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.GTRetAddr773
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.GTRetAddr773)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.GTRetAddr775
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.GTRetAddr775)
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER777
D;JGT
@GT_NOTGREATER777
D;JLE
(GT_GREATER777)
@SP
A=M-1
M=-1
@GT_END777
0;JMP
(GT_NOTGREATER777)
@SP
A=M-1
M=0
@GT_END777
0;JMP
(GT_END777)
//IF-GOTO IF_TRUE6
@SP
AM=M-1
D=M
@FLOAT.GT$IF_TRUE6
D;JNE
//GOTO IF_FALSE6
@FLOAT.GT$IF_FALSE6
0;JMP
(FLOAT.GT$IF_TRUE6)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//GOTO IF_END6
@FLOAT.GT$IF_END6
0;JMP
(FLOAT.GT$IF_FALSE6)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
(FLOAT.GT$IF_END6)
//GOTO IF_END5
@FLOAT.GT$IF_END5
0;JMP
(FLOAT.GT$IF_FALSE5)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.GTRetAddr791
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.GTRetAddr791)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.GTRetAddr793
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.GTRetAddr793)
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER795
D;JGT
@GT_NOTGREATER795
D;JLE
(GT_GREATER795)
@SP
A=M-1
M=-1
@GT_END795
0;JMP
(GT_NOTGREATER795)
@SP
A=M-1
M=0
@GT_END795
0;JMP
(GT_END795)
//IF-GOTO IF_TRUE7
@SP
AM=M-1
D=M
@FLOAT.GT$IF_TRUE7
D;JNE
//GOTO IF_FALSE7
@FLOAT.GT$IF_FALSE7
0;JMP
(FLOAT.GT$IF_TRUE7)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//GOTO IF_END7
@FLOAT.GT$IF_END7
0;JMP
(FLOAT.GT$IF_FALSE7)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
(FLOAT.GT$IF_END7)
(FLOAT.GT$IF_END5)
(FLOAT.GT$IF_END2)
//GOTO IF_END1
@FLOAT.GT$IF_END1
0;JMP
(FLOAT.GT$IF_FALSE1)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.GTRetAddr809
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.GTRetAddr809)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.GTRetAddr811
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.GTRetAddr811)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS813
D;JEQ
@EQ_NOTEQUALS813
D;JNE
(EQ_EQUALS813)
@SP
A=M-1
M=-1
@EQ_END813
0;JMP
(EQ_NOTEQUALS813)
@SP
A=M-1
M=0
@EQ_END813
0;JMP
(EQ_END813)
//IF-GOTO IF_TRUE8
@SP
AM=M-1
D=M
@FLOAT.GT$IF_TRUE8
D;JNE
//GOTO IF_FALSE8
@FLOAT.GT$IF_FALSE8
0;JMP
(FLOAT.GT$IF_TRUE8)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.GTRetAddr814
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.GTRetAddr814)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.GTRetAddr816
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.GTRetAddr816)
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS818
D;JLT
@LT_NOTLESS818
D;JGE
(LT_LESS818)
@SP
A=M-1
M=-1
@LT_END818
0;JMP
(LT_NOTLESS818)
@SP
A=M-1
M=0
@LT_END818
0;JMP
(LT_END818)
//IF-GOTO IF_TRUE9
@SP
AM=M-1
D=M
@FLOAT.GT$IF_TRUE9
D;JNE
//GOTO IF_FALSE9
@FLOAT.GT$IF_FALSE9
0;JMP
(FLOAT.GT$IF_TRUE9)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//GOTO IF_END9
@FLOAT.GT$IF_END9
0;JMP
(FLOAT.GT$IF_FALSE9)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
(FLOAT.GT$IF_END9)
//GOTO IF_END8
@FLOAT.GT$IF_END8
0;JMP
(FLOAT.GT$IF_FALSE8)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.GTRetAddr832
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.GTRetAddr832)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.GTRetAddr834
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.GTRetAddr834)
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS836
D;JLT
@LT_NOTLESS836
D;JGE
(LT_LESS836)
@SP
A=M-1
M=-1
@LT_END836
0;JMP
(LT_NOTLESS836)
@SP
A=M-1
M=0
@LT_END836
0;JMP
(LT_END836)
//IF-GOTO IF_TRUE10
@SP
AM=M-1
D=M
@FLOAT.GT$IF_TRUE10
D;JNE
//GOTO IF_FALSE10
@FLOAT.GT$IF_FALSE10
0;JMP
(FLOAT.GT$IF_TRUE10)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//GOTO IF_END10
@FLOAT.GT$IF_END10
0;JMP
(FLOAT.GT$IF_FALSE10)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
(FLOAT.GT$IF_END10)
(FLOAT.GT$IF_END8)
(FLOAT.GT$IF_END1)
//GOTO IF_END0
@FLOAT.GT$IF_END0
0;JMP
(FLOAT.GT$IF_FALSE0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.GTRetAddr850
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.GTRetAddr850)
//Call FLOAT.GETPOS 0
@FLOAT.GTRetAddr852
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.GTRetAddr852)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS854
D;JEQ
@EQ_NOTEQUALS854
D;JNE
(EQ_EQUALS854)
@SP
A=M-1
M=-1
@EQ_END854
0;JMP
(EQ_NOTEQUALS854)
@SP
A=M-1
M=0
@EQ_END854
0;JMP
(EQ_END854)
//IF-GOTO IF_TRUE11
@SP
AM=M-1
D=M
@FLOAT.GT$IF_TRUE11
D;JNE
//GOTO IF_FALSE11
@FLOAT.GT$IF_FALSE11
0;JMP
(FLOAT.GT$IF_TRUE11)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//GOTO IF_END11
@FLOAT.GT$IF_END11
0;JMP
(FLOAT.GT$IF_FALSE11)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
(FLOAT.GT$IF_END11)
(FLOAT.GT$IF_END0)
//Function FLOAT.LT
(FLOAT.LT)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GT 2
@FLOAT.LTRetAddr868
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GT//call goto
0;JMP
(FLOAT.LTRetAddr868)
//NOT
@SP
A=M-1
M=!M
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.EQ 2
@FLOAT.LTRetAddr871
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.EQ//call goto
0;JMP
(FLOAT.LTRetAddr871)
//NOT
@SP
A=M-1
M=!M
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.EQ
(FLOAT.EQ)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.EQRetAddr881
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.EQRetAddr881)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.EQRetAddr883
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.EQRetAddr883)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS885
D;JEQ
@EQ_NOTEQUALS885
D;JNE
(EQ_EQUALS885)
@SP
A=M-1
M=-1
@EQ_END885
0;JMP
(EQ_NOTEQUALS885)
@SP
A=M-1
M=0
@EQ_END885
0;JMP
(EQ_END885)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.EQRetAddr886
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.EQRetAddr886)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.EQRetAddr888
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.EQRetAddr888)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS890
D;JEQ
@EQ_NOTEQUALS890
D;JNE
(EQ_EQUALS890)
@SP
A=M-1
M=-1
@EQ_END890
0;JMP
(EQ_NOTEQUALS890)
@SP
A=M-1
M=0
@EQ_END890
0;JMP
(EQ_END890)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.EQRetAddr892
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.EQRetAddr892)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.EQRetAddr894
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.EQRetAddr894)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS896
D;JEQ
@EQ_NOTEQUALS896
D;JNE
(EQ_EQUALS896)
@SP
A=M-1
M=-1
@EQ_END896
0;JMP
(EQ_NOTEQUALS896)
@SP
A=M-1
M=0
@EQ_END896
0;JMP
(EQ_END896)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@FLOAT.EQ$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@FLOAT.EQ$IF_FALSE0
0;JMP
(FLOAT.EQ$IF_TRUE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
(FLOAT.EQ$IF_FALSE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.GE
(FLOAT.GE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GT 2
@FLOAT.GERetAddr911
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GT//call goto
0;JMP
(FLOAT.GERetAddr911)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.EQ 2
@FLOAT.GERetAddr913
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.EQ//call goto
0;JMP
(FLOAT.GERetAddr913)
//OR
@SP
AM=M-1
D=M
A=A-1
M=D|M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.LE
(FLOAT.LE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GT 2
@FLOAT.LERetAddr922
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GT//call goto
0;JMP
(FLOAT.LERetAddr922)
//NOT
@SP
A=M-1
M=!M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.ABS
(FLOAT.ABS)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.ABSRetAddr931
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.ABSRetAddr931)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.ABSRetAddr933
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.ABSRetAddr933)
//Call FLOAT.SETSIGN 2
@FLOAT.ABSRetAddr935
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETSIGN//call goto
0;JMP
(FLOAT.ABSRetAddr935)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.NEGATE
(FLOAT.NEGATE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.NEGATERetAddr943
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.NEGATERetAddr943)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.NEGATERetAddr945
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.NEGATERetAddr945)
//Call FLOAT.GETPOS 0
@FLOAT.NEGATERetAddr947
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.NEGATERetAddr947)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS949
D;JEQ
@EQ_NOTEQUALS949
D;JNE
(EQ_EQUALS949)
@SP
A=M-1
M=-1
@EQ_END949
0;JMP
(EQ_NOTEQUALS949)
@SP
A=M-1
M=0
@EQ_END949
0;JMP
(EQ_END949)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@FLOAT.NEGATE$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@FLOAT.NEGATE$IF_FALSE0
0;JMP
(FLOAT.NEGATE$IF_TRUE0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETNEG 0
@FLOAT.NEGATERetAddr950
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETNEG//call goto
0;JMP
(FLOAT.NEGATERetAddr950)
//Call FLOAT.SETSIGN 2
@FLOAT.NEGATERetAddr952
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETSIGN//call goto
0;JMP
(FLOAT.NEGATERetAddr952)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END0
@FLOAT.NEGATE$IF_END0
0;JMP
(FLOAT.NEGATE$IF_FALSE0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.NEGATERetAddr954
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.NEGATERetAddr954)
//Call FLOAT.SETSIGN 2
@FLOAT.NEGATERetAddr956
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETSIGN//call goto
0;JMP
(FLOAT.NEGATERetAddr956)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.NEGATE$IF_END0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.COPY
(FLOAT.COPY)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.COPYRetAddr964
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.COPYRetAddr964)
//Call FLOAT.SETSIGN 2
@FLOAT.COPYRetAddr966
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETSIGN//call goto
0;JMP
(FLOAT.COPYRetAddr966)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.COPYRetAddr968
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.COPYRetAddr968)
//Call FLOAT.SETMANT 2
@FLOAT.COPYRetAddr970
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETMANT//call goto
0;JMP
(FLOAT.COPYRetAddr970)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.COPYRetAddr972
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.COPYRetAddr972)
//Call FLOAT.SETEXPO 2
@FLOAT.COPYRetAddr974
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETEXPO//call goto
0;JMP
(FLOAT.COPYRetAddr974)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.ADD
(FLOAT.ADD)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.ADDRetAddr982
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.ADDRetAddr982)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.ADDRetAddr984
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.ADDRetAddr984)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ABS 2
@FLOAT.ADDRetAddr986
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ABS//call goto
0;JMP
(FLOAT.ADDRetAddr986)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ABS 2
@FLOAT.ADDRetAddr988
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ABS//call goto
0;JMP
(FLOAT.ADDRetAddr988)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GT 2
@FLOAT.ADDRetAddr990
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GT//call goto
0;JMP
(FLOAT.ADDRetAddr990)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@FLOAT.ADD$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@FLOAT.ADD$IF_FALSE0
0;JMP
(FLOAT.ADD$IF_TRUE0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.ADDRetAddr992
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.ADDRetAddr992)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.ADDRetAddr994
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.ADDRetAddr994)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END0
@FLOAT.ADD$IF_END0
0;JMP
(FLOAT.ADD$IF_FALSE0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.ADDRetAddr996
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.ADDRetAddr996)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.ADDRetAddr998
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.ADDRetAddr998)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.ADD$IF_END0)
(FLOAT.ADD$WHILE_EXP0)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.ADDRetAddr1000
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.ADDRetAddr1000)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.ADDRetAddr1002
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.ADDRetAddr1002)
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS1004
D;JLT
@LT_NOTLESS1004
D;JGE
(LT_LESS1004)
@SP
A=M-1
M=-1
@LT_END1004
0;JMP
(LT_NOTLESS1004)
@SP
A=M-1
M=0
@LT_END1004
0;JMP
(LT_END1004)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.ADDRetAddr1005
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1005)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER1008
D;JGT
@GT_NOTGREATER1008
D;JLE
(GT_GREATER1008)
@SP
A=M-1
M=-1
@GT_END1008
0;JMP
(GT_NOTGREATER1008)
@SP
A=M-1
M=0
@GT_END1008
0;JMP
(GT_END1008)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@FLOAT.ADD$WHILE_END0
D;JNE
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.ADDRetAddr1010
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1010)
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@FLOAT.ADDRetAddr1012
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(FLOAT.ADDRetAddr1012)
//Call FLOAT.SETMANT 2
@FLOAT.ADDRetAddr1014
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1014)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.ADDRetAddr1016
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.ADDRetAddr1016)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//Call FLOAT.SETEXPO 2
@FLOAT.ADDRetAddr1019
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETEXPO//call goto
0;JMP
(FLOAT.ADDRetAddr1019)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO WHILE_EXP0
@FLOAT.ADD$WHILE_EXP0
0;JMP
(FLOAT.ADD$WHILE_END0)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.ADDRetAddr1021
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1021)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS1023
D;JEQ
@EQ_NOTEQUALS1023
D;JNE
(EQ_EQUALS1023)
@SP
A=M-1
M=-1
@EQ_END1023
0;JMP
(EQ_NOTEQUALS1023)
@SP
A=M-1
M=0
@EQ_END1023
0;JMP
(EQ_END1023)
//IF-GOTO IF_TRUE1
@SP
AM=M-1
D=M
@FLOAT.ADD$IF_TRUE1
D;JNE
//GOTO IF_FALSE1
@FLOAT.ADD$IF_FALSE1
0;JMP
(FLOAT.ADD$IF_TRUE1)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.ADDRetAddr1024
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.ADDRetAddr1024)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.ADDRetAddr1026
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1026)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.ADDRetAddr1028
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.ADDRetAddr1028)
//Call FLOAT.SET 4
@FLOAT.ADDRetAddr1030
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(FLOAT.ADDRetAddr1030)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END1
@FLOAT.ADD$IF_END1
0;JMP
(FLOAT.ADD$IF_FALSE1)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.ADDRetAddr1032
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.ADDRetAddr1032)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.ADDRetAddr1034
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.ADDRetAddr1034)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS1036
D;JEQ
@EQ_NOTEQUALS1036
D;JNE
(EQ_EQUALS1036)
@SP
A=M-1
M=-1
@EQ_END1036
0;JMP
(EQ_NOTEQUALS1036)
@SP
A=M-1
M=0
@EQ_END1036
0;JMP
(EQ_END1036)
//IF-GOTO IF_TRUE2
@SP
AM=M-1
D=M
@FLOAT.ADD$IF_TRUE2
D;JNE
//GOTO IF_FALSE2
@FLOAT.ADD$IF_FALSE2
0;JMP
(FLOAT.ADD$IF_TRUE2)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.ADDRetAddr1037
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1037)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.ADDRetAddr1039
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1039)
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.ADDRetAddr1042
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1042)
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS1044
D;JLT
@LT_NOTLESS1044
D;JGE
(LT_LESS1044)
@SP
A=M-1
M=-1
@LT_END1044
0;JMP
(LT_NOTLESS1044)
@SP
A=M-1
M=0
@LT_END1044
0;JMP
(LT_END1044)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//OR
@SP
AM=M-1
D=M
A=A-1
M=D|M
//Call FLOAT.GETMAXINT 0
@FLOAT.ADDRetAddr1046
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMAXINT//call goto
0;JMP
(FLOAT.ADDRetAddr1046)
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER1048
D;JGT
@GT_NOTGREATER1048
D;JLE
(GT_GREATER1048)
@SP
A=M-1
M=-1
@GT_END1048
0;JMP
(GT_NOTGREATER1048)
@SP
A=M-1
M=0
@GT_END1048
0;JMP
(GT_END1048)
//IF-GOTO IF_TRUE3
@SP
AM=M-1
D=M
@FLOAT.ADD$IF_TRUE3
D;JNE
//GOTO IF_FALSE3
@FLOAT.ADD$IF_FALSE3
0;JMP
(FLOAT.ADD$IF_TRUE3)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.ADDRetAddr1049
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1049)
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@FLOAT.ADDRetAddr1051
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(FLOAT.ADDRetAddr1051)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.ADDRetAddr1053
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1053)
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@FLOAT.ADDRetAddr1055
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(FLOAT.ADDRetAddr1055)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.ADDRetAddr1058
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.ADDRetAddr1058)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//Call FLOAT.SETEXPO 2
@FLOAT.ADDRetAddr1061
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETEXPO//call goto
0;JMP
(FLOAT.ADDRetAddr1061)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.ADD$IF_FALSE3)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SETMANT 2
@FLOAT.ADDRetAddr1063
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1063)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END2
@FLOAT.ADD$IF_END2
0;JMP
(FLOAT.ADD$IF_FALSE2)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.ADDRetAddr1065
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.ADDRetAddr1065)
//Call FLOAT.GETNEG 0
@FLOAT.ADDRetAddr1067
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETNEG//call goto
0;JMP
(FLOAT.ADDRetAddr1067)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS1069
D;JEQ
@EQ_NOTEQUALS1069
D;JNE
(EQ_EQUALS1069)
@SP
A=M-1
M=-1
@EQ_END1069
0;JMP
(EQ_NOTEQUALS1069)
@SP
A=M-1
M=0
@EQ_END1069
0;JMP
(EQ_END1069)
//IF-GOTO IF_TRUE4
@SP
AM=M-1
D=M
@FLOAT.ADD$IF_TRUE4
D;JNE
//GOTO IF_FALSE4
@FLOAT.ADD$IF_FALSE4
0;JMP
(FLOAT.ADD$IF_TRUE4)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.ADDRetAddr1070
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1070)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.ADDRetAddr1072
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1072)
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//Call FLOAT.SETMANT 2
@FLOAT.ADDRetAddr1075
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1075)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END4
@FLOAT.ADD$IF_END4
0;JMP
(FLOAT.ADD$IF_FALSE4)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.ADDRetAddr1077
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1077)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.ADDRetAddr1079
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1079)
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//Call FLOAT.SETMANT 2
@FLOAT.ADDRetAddr1082
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1082)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.ADD$IF_END4)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.ADDRetAddr1084
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.ADDRetAddr1084)
//Call FLOAT.SETSIGN 2
@FLOAT.ADDRetAddr1086
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETSIGN//call goto
0;JMP
(FLOAT.ADDRetAddr1086)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.ADDRetAddr1088
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1088)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS1090
D;JLT
@LT_NOTLESS1090
D;JGE
(LT_LESS1090)
@SP
A=M-1
M=-1
@LT_END1090
0;JMP
(LT_NOTLESS1090)
@SP
A=M-1
M=0
@LT_END1090
0;JMP
(LT_END1090)
//IF-GOTO IF_TRUE5
@SP
AM=M-1
D=M
@FLOAT.ADD$IF_TRUE5
D;JNE
//GOTO IF_FALSE5
@FLOAT.ADD$IF_FALSE5
0;JMP
(FLOAT.ADD$IF_TRUE5)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.ADDRetAddr1091
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1091)
//Call MATH.ABS 1
@FLOAT.ADDRetAddr1093
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.ABS//call goto
0;JMP
(FLOAT.ADDRetAddr1093)
//Call FLOAT.SETMANT 2
@FLOAT.ADDRetAddr1095
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1095)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.ADD$IF_FALSE5)
(FLOAT.ADD$IF_END2)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call FLOAT.SETTOHIGHESTMANT 2
@FLOAT.ADDRetAddr1098
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETTOHIGHESTMANT//call goto
0;JMP
(FLOAT.ADDRetAddr1098)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.ADD$IF_END1)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.ADDRetAddr1100
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.ADDRetAddr1100)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.ADDRetAddr1102
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.ADDRetAddr1102)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.ADDRetAddr1104
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.ADDRetAddr1104)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.SUB
(FLOAT.SUB)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.SUBRetAddr1112
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.SUBRetAddr1112)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEGATE 2
@FLOAT.SUBRetAddr1114
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEGATE//call goto
0;JMP
(FLOAT.SUBRetAddr1114)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@FLOAT.SUBRetAddr1116
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(FLOAT.SUBRetAddr1116)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.SUBRetAddr1118
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.SUBRetAddr1118)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.MUL
(FLOAT.MUL)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.MULRetAddr1126
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.MULRetAddr1126)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.MULRetAddr1128
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.MULRetAddr1128)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.MULRetAddr1130
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.MULRetAddr1130)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS1132
D;JEQ
@EQ_NOTEQUALS1132
D;JNE
(EQ_EQUALS1132)
@SP
A=M-1
M=-1
@EQ_END1132
0;JMP
(EQ_NOTEQUALS1132)
@SP
A=M-1
M=0
@EQ_END1132
0;JMP
(EQ_END1132)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@FLOAT.MUL$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@FLOAT.MUL$IF_FALSE0
0;JMP
(FLOAT.MUL$IF_TRUE0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.MULRetAddr1133
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.MULRetAddr1133)
//Call FLOAT.SETSIGN 2
@FLOAT.MULRetAddr1135
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETSIGN//call goto
0;JMP
(FLOAT.MULRetAddr1135)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END0
@FLOAT.MUL$IF_END0
0;JMP
(FLOAT.MUL$IF_FALSE0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETNEG 0
@FLOAT.MULRetAddr1137
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETNEG//call goto
0;JMP
(FLOAT.MULRetAddr1137)
//Call FLOAT.SETSIGN 2
@FLOAT.MULRetAddr1139
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETSIGN//call goto
0;JMP
(FLOAT.MULRetAddr1139)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.MUL$IF_END0)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.MULRetAddr1141
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.MULRetAddr1141)
//PUSH CONSTANT 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@FLOAT.MULRetAddr1143
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(FLOAT.MULRetAddr1143)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.MULRetAddr1145
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.MULRetAddr1145)
//PUSH CONSTANT 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@FLOAT.MULRetAddr1147
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(FLOAT.MULRetAddr1147)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@FLOAT.MULRetAddr1149
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(FLOAT.MULRetAddr1149)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SETMANT 2
@FLOAT.MULRetAddr1151
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETMANT//call goto
0;JMP
(FLOAT.MULRetAddr1151)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.MULRetAddr1153
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.MULRetAddr1153)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.MULRetAddr1155
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.MULRetAddr1155)
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SETEXPO 2
@FLOAT.MULRetAddr1159
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETEXPO//call goto
0;JMP
(FLOAT.MULRetAddr1159)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call FLOAT.SETTOHIGHESTMANT 2
@FLOAT.MULRetAddr1162
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETTOHIGHESTMANT//call goto
0;JMP
(FLOAT.MULRetAddr1162)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.MULRetAddr1164
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.MULRetAddr1164)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.MULRetAddr1166
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.MULRetAddr1166)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.DIV
(FLOAT.DIV)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.DIVRetAddr1174
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.DIVRetAddr1174)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.DIVRetAddr1176
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.DIVRetAddr1176)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.DIVRetAddr1178
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.DIVRetAddr1178)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS1180
D;JEQ
@EQ_NOTEQUALS1180
D;JNE
(EQ_EQUALS1180)
@SP
A=M-1
M=-1
@EQ_END1180
0;JMP
(EQ_NOTEQUALS1180)
@SP
A=M-1
M=0
@EQ_END1180
0;JMP
(EQ_END1180)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@FLOAT.DIV$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@FLOAT.DIV$IF_FALSE0
0;JMP
(FLOAT.DIV$IF_TRUE0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.DIVRetAddr1181
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.DIVRetAddr1181)
//Call FLOAT.SETSIGN 2
@FLOAT.DIVRetAddr1183
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETSIGN//call goto
0;JMP
(FLOAT.DIVRetAddr1183)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END0
@FLOAT.DIV$IF_END0
0;JMP
(FLOAT.DIV$IF_FALSE0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETNEG 0
@FLOAT.DIVRetAddr1185
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETNEG//call goto
0;JMP
(FLOAT.DIVRetAddr1185)
//Call FLOAT.SETSIGN 2
@FLOAT.DIVRetAddr1187
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETSIGN//call goto
0;JMP
(FLOAT.DIVRetAddr1187)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.DIV$IF_END0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.DIVRetAddr1189
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.DIVRetAddr1189)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.DIVRetAddr1191
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.DIVRetAddr1191)
//PUSH CONSTANT 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@FLOAT.DIVRetAddr1193
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(FLOAT.DIVRetAddr1193)
//Call MATH.DIVIDE 2
@FLOAT.DIVRetAddr1195
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(FLOAT.DIVRetAddr1195)
//Call FLOAT.SETMANT 2
@FLOAT.DIVRetAddr1197
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETMANT//call goto
0;JMP
(FLOAT.DIVRetAddr1197)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.DIVRetAddr1199
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.DIVRetAddr1199)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.DIVRetAddr1201
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.DIVRetAddr1201)
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//Call FLOAT.SETEXPO 2
@FLOAT.DIVRetAddr1205
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETEXPO//call goto
0;JMP
(FLOAT.DIVRetAddr1205)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call FLOAT.SETTOHIGHESTMANT 2
@FLOAT.DIVRetAddr1208
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETTOHIGHESTMANT//call goto
0;JMP
(FLOAT.DIVRetAddr1208)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.DIVRetAddr1210
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.DIVRetAddr1210)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.DIVRetAddr1212
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.DIVRetAddr1212)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.TOFLOAT
(FLOAT.TOFLOAT)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS1220
D;JLT
@LT_NOTLESS1220
D;JGE
(LT_LESS1220)
@SP
A=M-1
M=-1
@LT_END1220
0;JMP
(LT_NOTLESS1220)
@SP
A=M-1
M=0
@LT_END1220
0;JMP
(LT_END1220)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@FLOAT.TOFLOAT$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@FLOAT.TOFLOAT$IF_FALSE0
0;JMP
(FLOAT.TOFLOAT$IF_TRUE0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETNEG 0
@FLOAT.TOFLOATRetAddr1221
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETNEG//call goto
0;JMP
(FLOAT.TOFLOATRetAddr1221)
//Call FLOAT.SETSIGN 2
@FLOAT.TOFLOATRetAddr1223
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETSIGN//call goto
0;JMP
(FLOAT.TOFLOATRetAddr1223)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO IF_END0
@FLOAT.TOFLOAT$IF_END0
0;JMP
(FLOAT.TOFLOAT$IF_FALSE0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.TOFLOATRetAddr1226
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.TOFLOATRetAddr1226)
//Call FLOAT.SETSIGN 2
@FLOAT.TOFLOATRetAddr1228
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETSIGN//call goto
0;JMP
(FLOAT.TOFLOATRetAddr1228)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.TOFLOAT$IF_END0)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(FLOAT.TOFLOAT$WHILE_EXP0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER1231
D;JGT
@GT_NOTGREATER1231
D;JLE
(GT_GREATER1231)
@SP
A=M-1
M=-1
@GT_END1231
0;JMP
(GT_NOTGREATER1231)
@SP
A=M-1
M=0
@GT_END1231
0;JMP
(GT_END1231)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@FLOAT.TOFLOAT$WHILE_END0
D;JNE
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@FLOAT.TOFLOATRetAddr1234
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(FLOAT.TOFLOATRetAddr1234)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@FLOAT.TOFLOAT$WHILE_EXP0
0;JMP
(FLOAT.TOFLOAT$WHILE_END0)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.ABS 1
@FLOAT.TOFLOATRetAddr1236
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.ABS//call goto
0;JMP
(FLOAT.TOFLOATRetAddr1236)
//POP ARGUMENT 1
@ARG
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMAXINT 0
@FLOAT.TOFLOATRetAddr1238
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMAXINT//call goto
0;JMP
(FLOAT.TOFLOATRetAddr1238)
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER1240
D;JGT
@GT_NOTGREATER1240
D;JLE
(GT_GREATER1240)
@SP
A=M-1
M=-1
@GT_END1240
0;JMP
(GT_NOTGREATER1240)
@SP
A=M-1
M=0
@GT_END1240
0;JMP
(GT_END1240)
//IF-GOTO IF_TRUE1
@SP
AM=M-1
D=M
@FLOAT.TOFLOAT$IF_TRUE1
D;JNE
//GOTO IF_FALSE1
@FLOAT.TOFLOAT$IF_FALSE1
0;JMP
(FLOAT.TOFLOAT$IF_TRUE1)
//Call FLOAT.GETMAXINT 0
@FLOAT.TOFLOATRetAddr1241
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMAXINT//call goto
0;JMP
(FLOAT.TOFLOATRetAddr1241)
//POP ARGUMENT 1
@ARG
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(FLOAT.TOFLOAT$IF_FALSE1)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SETMANT 2
@FLOAT.TOFLOATRetAddr1243
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETMANT//call goto
0;JMP
(FLOAT.TOFLOATRetAddr1243)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SETTOHIGHESTMANT 2
@FLOAT.TOFLOATRetAddr1245
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETTOHIGHESTMANT//call goto
0;JMP
(FLOAT.TOFLOATRetAddr1245)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SETEXPO 2
@FLOAT.TOFLOATRetAddr1247
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETEXPO//call goto
0;JMP
(FLOAT.TOFLOATRetAddr1247)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.TOINT
(FLOAT.TOINT)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@FLOAT.TOINTRetAddr1255
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.TOINTRetAddr1255)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@FLOAT.TOINT$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@FLOAT.TOINT$IF_FALSE0
0;JMP
(FLOAT.TOINT$IF_TRUE0)
//Call FLOAT.GETPOS 0
@FLOAT.TOINTRetAddr1257
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.TOINTRetAddr1257)
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//Call FLOAT.NEW 3
@FLOAT.TOINTRetAddr1260
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(FLOAT.TOINTRetAddr1260)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.TOINTRetAddr1262
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.TOINTRetAddr1262)
//Call FLOAT.GETPOS 0
@FLOAT.TOINTRetAddr1264
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.TOINTRetAddr1264)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS1266
D;JEQ
@EQ_NOTEQUALS1266
D;JNE
(EQ_EQUALS1266)
@SP
A=M-1
M=-1
@EQ_END1266
0;JMP
(EQ_NOTEQUALS1266)
@SP
A=M-1
M=0
@EQ_END1266
0;JMP
(EQ_END1266)
//IF-GOTO IF_TRUE1
@SP
AM=M-1
D=M
@FLOAT.TOINT$IF_TRUE1
D;JNE
//GOTO IF_FALSE1
@FLOAT.TOINT$IF_FALSE1
0;JMP
(FLOAT.TOINT$IF_TRUE1)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@FLOAT.TOINTRetAddr1267
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(FLOAT.TOINTRetAddr1267)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END1
@FLOAT.TOINT$IF_END1
0;JMP
(FLOAT.TOINT$IF_FALSE1)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@FLOAT.TOINTRetAddr1269
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(FLOAT.TOINTRetAddr1269)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.TOINT$IF_END1)
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.TOINTRetAddr1271
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.TOINTRetAddr1271)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END0
@FLOAT.TOINT$IF_END0
0;JMP
(FLOAT.TOINT$IF_FALSE0)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@FLOAT.TOINTRetAddr1273
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(FLOAT.TOINTRetAddr1273)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.TOINT$IF_END0)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.TOINTRetAddr1275
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.TOINTRetAddr1275)
//Call FLOAT.GETSIGDIG 0
@FLOAT.TOINTRetAddr1277
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGDIG//call goto
0;JMP
(FLOAT.TOINTRetAddr1277)
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER1279
D;JGT
@GT_NOTGREATER1279
D;JLE
(GT_GREATER1279)
@SP
A=M-1
M=-1
@GT_END1279
0;JMP
(GT_NOTGREATER1279)
@SP
A=M-1
M=0
@GT_END1279
0;JMP
(GT_END1279)
//IF-GOTO IF_TRUE2
@SP
AM=M-1
D=M
@FLOAT.TOINT$IF_TRUE2
D;JNE
//GOTO IF_FALSE2
@FLOAT.TOINT$IF_FALSE2
0;JMP
(FLOAT.TOINT$IF_TRUE2)
//Call FLOAT.GETMAXINT 0
@FLOAT.TOINTRetAddr1280
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMAXINT//call goto
0;JMP
(FLOAT.TOINTRetAddr1280)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO IF_END2
@FLOAT.TOINT$IF_END2
0;JMP
(FLOAT.TOINT$IF_FALSE2)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.TOINTRetAddr1282
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.TOINTRetAddr1282)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS1284
D;JLT
@LT_NOTLESS1284
D;JGE
(LT_LESS1284)
@SP
A=M-1
M=-1
@LT_END1284
0;JMP
(LT_NOTLESS1284)
@SP
A=M-1
M=0
@LT_END1284
0;JMP
(LT_END1284)
//IF-GOTO IF_TRUE3
@SP
AM=M-1
D=M
@FLOAT.TOINT$IF_TRUE3
D;JNE
//GOTO IF_FALSE3
@FLOAT.TOINT$IF_FALSE3
0;JMP
(FLOAT.TOINT$IF_TRUE3)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO IF_END3
@FLOAT.TOINT$IF_END3
0;JMP
(FLOAT.TOINT$IF_FALSE3)
//Call FLOAT.GETSIGDIG 0
@FLOAT.TOINTRetAddr1285
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGDIG//call goto
0;JMP
(FLOAT.TOINTRetAddr1285)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.TOINTRetAddr1287
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.TOINTRetAddr1287)
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(FLOAT.TOINT$WHILE_EXP0)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER1290
D;JGT
@GT_NOTGREATER1290
D;JLE
(GT_GREATER1290)
@SP
A=M-1
M=-1
@GT_END1290
0;JMP
(GT_NOTGREATER1290)
@SP
A=M-1
M=0
@GT_END1290
0;JMP
(GT_END1290)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@FLOAT.TOINT$WHILE_END0
D;JNE
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@FLOAT.TOINTRetAddr1293
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(FLOAT.TOINTRetAddr1293)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@FLOAT.TOINT$WHILE_EXP0
0;JMP
(FLOAT.TOINT$WHILE_END0)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.TOINTRetAddr1295
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.TOINTRetAddr1295)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@FLOAT.TOINTRetAddr1297
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(FLOAT.TOINTRetAddr1297)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.TOINTRetAddr1299
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.TOINTRetAddr1299)
//Call FLOAT.GETNEG 0
@FLOAT.TOINTRetAddr1301
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETNEG//call goto
0;JMP
(FLOAT.TOINTRetAddr1301)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS1303
D;JEQ
@EQ_NOTEQUALS1303
D;JNE
(EQ_EQUALS1303)
@SP
A=M-1
M=-1
@EQ_END1303
0;JMP
(EQ_NOTEQUALS1303)
@SP
A=M-1
M=0
@EQ_END1303
0;JMP
(EQ_END1303)
//IF-GOTO IF_TRUE4
@SP
AM=M-1
D=M
@FLOAT.TOINT$IF_TRUE4
D;JNE
//GOTO IF_FALSE4
@FLOAT.TOINT$IF_FALSE4
0;JMP
(FLOAT.TOINT$IF_TRUE4)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(FLOAT.TOINT$IF_FALSE4)
(FLOAT.TOINT$IF_END3)
(FLOAT.TOINT$IF_END2)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@FLOAT.TOINTRetAddr1305
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(FLOAT.TOINTRetAddr1305)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.SETTOHIGHESTMANT
(FLOAT.SETTOHIGHESTMANT)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.SETTOHIGHESTMANTRetAddr1313
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.SETTOHIGHESTMANTRetAddr1313)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS1315
D;JEQ
@EQ_NOTEQUALS1315
D;JNE
(EQ_EQUALS1315)
@SP
A=M-1
M=-1
@EQ_END1315
0;JMP
(EQ_NOTEQUALS1315)
@SP
A=M-1
M=0
@EQ_END1315
0;JMP
(EQ_END1315)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@FLOAT.SETTOHIGHESTMANT$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@FLOAT.SETTOHIGHESTMANT$IF_FALSE0
0;JMP
(FLOAT.SETTOHIGHESTMANT$IF_TRUE0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@FLOAT.SETTOHIGHESTMANTRetAddr1316
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(FLOAT.SETTOHIGHESTMANTRetAddr1316)
//Call FLOAT.SETSIGN 2
@FLOAT.SETTOHIGHESTMANTRetAddr1318
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETSIGN//call goto
0;JMP
(FLOAT.SETTOHIGHESTMANTRetAddr1318)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SETEXPO 2
@FLOAT.SETTOHIGHESTMANTRetAddr1320
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETEXPO//call goto
0;JMP
(FLOAT.SETTOHIGHESTMANTRetAddr1320)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
(FLOAT.SETTOHIGHESTMANT$IF_FALSE0)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@FLOAT.SETTOHIGHESTMANTRetAddr1328
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(FLOAT.SETTOHIGHESTMANTRetAddr1328)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@FLOAT.SETTOHIGHESTMANTRetAddr1330
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(FLOAT.SETTOHIGHESTMANTRetAddr1330)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(FLOAT.SETTOHIGHESTMANT$WHILE_EXP0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER1332
D;JGT
@GT_NOTGREATER1332
D;JLE
(GT_GREATER1332)
@SP
A=M-1
M=-1
@GT_END1332
0;JMP
(GT_NOTGREATER1332)
@SP
A=M-1
M=0
@GT_END1332
0;JMP
(GT_END1332)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMAXINT 0
@FLOAT.SETTOHIGHESTMANTRetAddr1333
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMAXINT//call goto
0;JMP
(FLOAT.SETTOHIGHESTMANTRetAddr1333)
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS1335
D;JLT
@LT_NOTLESS1335
D;JGE
(LT_LESS1335)
@SP
A=M-1
M=-1
@LT_END1335
0;JMP
(LT_NOTLESS1335)
@SP
A=M-1
M=0
@LT_END1335
0;JMP
(LT_END1335)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS1337
D;JEQ
@EQ_NOTEQUALS1337
D;JNE
(EQ_EQUALS1337)
@SP
A=M-1
M=-1
@EQ_END1337
0;JMP
(EQ_NOTEQUALS1337)
@SP
A=M-1
M=0
@EQ_END1337
0;JMP
(EQ_END1337)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@FLOAT.SETTOHIGHESTMANT$WHILE_END0
D;JNE
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SETMANT 2
@FLOAT.SETTOHIGHESTMANTRetAddr1340
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETMANT//call goto
0;JMP
(FLOAT.SETTOHIGHESTMANTRetAddr1340)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//IF-GOTO IF_TRUE1
@SP
AM=M-1
D=M
@FLOAT.SETTOHIGHESTMANT$IF_TRUE1
D;JNE
//GOTO IF_FALSE1
@FLOAT.SETTOHIGHESTMANT$IF_FALSE1
0;JMP
(FLOAT.SETTOHIGHESTMANT$IF_TRUE1)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.SETTOHIGHESTMANTRetAddr1342
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.SETTOHIGHESTMANTRetAddr1342)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//Call FLOAT.SETEXPO 2
@FLOAT.SETTOHIGHESTMANTRetAddr1345
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SETEXPO//call goto
0;JMP
(FLOAT.SETTOHIGHESTMANTRetAddr1345)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.SETTOHIGHESTMANT$IF_FALSE1)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@FLOAT.SETTOHIGHESTMANTRetAddr1347
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(FLOAT.SETTOHIGHESTMANTRetAddr1347)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@FLOAT.SETTOHIGHESTMANTRetAddr1349
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(FLOAT.SETTOHIGHESTMANTRetAddr1349)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@FLOAT.SETTOHIGHESTMANT$WHILE_EXP0
0;JMP
(FLOAT.SETTOHIGHESTMANT$WHILE_END0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function FLOAT.PRINTF
(FLOAT.PRINTF)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@FLOAT.PRINTFRetAddr1357
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(FLOAT.PRINTFRetAddr1357)
//PUSH STATIC 3
@Float.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS1359
D;JEQ
@EQ_NOTEQUALS1359
D;JNE
(EQ_EQUALS1359)
@SP
A=M-1
M=-1
@EQ_END1359
0;JMP
(EQ_NOTEQUALS1359)
@SP
A=M-1
M=0
@EQ_END1359
0;JMP
(EQ_END1359)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@FLOAT.PRINTF$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@FLOAT.PRINTF$IF_FALSE0
0;JMP
(FLOAT.PRINTF$IF_TRUE0)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@FLOAT.PRINTFRetAddr1360
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(FLOAT.PRINTFRetAddr1360)
//PUSH CONSTANT 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.PRINTFRetAddr1362
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.PRINTFRetAddr1362)
//Call OUTPUT.PRINTSTRING 1
@FLOAT.PRINTFRetAddr1364
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(FLOAT.PRINTFRetAddr1364)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END0
@FLOAT.PRINTF$IF_END0
0;JMP
(FLOAT.PRINTF$IF_FALSE0)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@FLOAT.PRINTFRetAddr1366
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(FLOAT.PRINTFRetAddr1366)
//PUSH CONSTANT 45
@45
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.PRINTFRetAddr1368
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.PRINTFRetAddr1368)
//Call OUTPUT.PRINTSTRING 1
@FLOAT.PRINTFRetAddr1370
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(FLOAT.PRINTFRetAddr1370)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.PRINTF$IF_END0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETMANT 1
@FLOAT.PRINTFRetAddr1372
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETMANT//call goto
0;JMP
(FLOAT.PRINTFRetAddr1372)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1000
@1000
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@FLOAT.PRINTFRetAddr1374
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(FLOAT.PRINTFRetAddr1374)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call OUTPUT.PRINTINT 1
@FLOAT.PRINTFRetAddr1376
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTINT//call goto
0;JMP
(FLOAT.PRINTFRetAddr1376)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@FLOAT.PRINTFRetAddr1378
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(FLOAT.PRINTFRetAddr1378)
//PUSH CONSTANT 46
@46
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.PRINTFRetAddr1380
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.PRINTFRetAddr1380)
//Call OUTPUT.PRINTSTRING 1
@FLOAT.PRINTFRetAddr1382
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(FLOAT.PRINTFRetAddr1382)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1000
@1000
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@FLOAT.PRINTFRetAddr1384
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(FLOAT.PRINTFRetAddr1384)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS1387
D;JLT
@LT_NOTLESS1387
D;JGE
(LT_LESS1387)
@SP
A=M-1
M=-1
@LT_END1387
0;JMP
(LT_NOTLESS1387)
@SP
A=M-1
M=0
@LT_END1387
0;JMP
(LT_END1387)
//IF-GOTO IF_TRUE1
@SP
AM=M-1
D=M
@FLOAT.PRINTF$IF_TRUE1
D;JNE
//GOTO IF_FALSE1
@FLOAT.PRINTF$IF_FALSE1
0;JMP
(FLOAT.PRINTF$IF_TRUE1)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@FLOAT.PRINTFRetAddr1388
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(FLOAT.PRINTFRetAddr1388)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.PRINTFRetAddr1390
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.PRINTFRetAddr1390)
//Call OUTPUT.PRINTSTRING 1
@FLOAT.PRINTFRetAddr1392
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(FLOAT.PRINTFRetAddr1392)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS1394
D;JLT
@LT_NOTLESS1394
D;JGE
(LT_LESS1394)
@SP
A=M-1
M=-1
@LT_END1394
0;JMP
(LT_NOTLESS1394)
@SP
A=M-1
M=0
@LT_END1394
0;JMP
(LT_END1394)
//IF-GOTO IF_TRUE2
@SP
AM=M-1
D=M
@FLOAT.PRINTF$IF_TRUE2
D;JNE
//GOTO IF_FALSE2
@FLOAT.PRINTF$IF_FALSE2
0;JMP
(FLOAT.PRINTF$IF_TRUE2)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@FLOAT.PRINTFRetAddr1395
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(FLOAT.PRINTFRetAddr1395)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.PRINTFRetAddr1397
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.PRINTFRetAddr1397)
//Call OUTPUT.PRINTSTRING 1
@FLOAT.PRINTFRetAddr1399
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(FLOAT.PRINTFRetAddr1399)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(FLOAT.PRINTF$IF_FALSE2)
(FLOAT.PRINTF$IF_FALSE1)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call OUTPUT.PRINTINT 1
@FLOAT.PRINTFRetAddr1401
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTINT//call goto
0;JMP
(FLOAT.PRINTFRetAddr1401)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@FLOAT.PRINTFRetAddr1403
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(FLOAT.PRINTFRetAddr1403)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@FLOAT.PRINTFRetAddr1405
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(FLOAT.PRINTFRetAddr1405)
//Call OUTPUT.PRINTSTRING 1
@FLOAT.PRINTFRetAddr1407
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(FLOAT.PRINTFRetAddr1407)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETEXPO 1
@FLOAT.PRINTFRetAddr1409
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETEXPO//call goto
0;JMP
(FLOAT.PRINTFRetAddr1409)
//Call OUTPUT.PRINTINT 1
@FLOAT.PRINTFRetAddr1411
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTINT//call goto
0;JMP
(FLOAT.PRINTFRetAddr1411)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V2D.EMPTY
(V2D.EMPTY)
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.ALLOC 1
@V2D.EMPTYRetAddr1419
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.ALLOC//call goto
0;JMP
(V2D.EMPTYRetAddr1419)
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 1
@THIS
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V2D.NEW
(V2D.NEW)
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.ALLOC 1
@V2D.NEWRetAddr1427
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.ALLOC//call goto
0;JMP
(V2D.NEWRetAddr1427)
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 1
@THIS
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V2D.GETX
(V2D.GETX)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V2D.GETY
(V2D.GETY)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V2D.SETX
(V2D.SETX)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V2D.SETY
(V2D.SETY)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 1
@THIS
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V2D.SET
(V2D.SET)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 1
@THIS
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V2D.ADD
(V2D.ADD)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.GETX 1
@V2D.ADDRetAddr1465
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.GETX//call goto
0;JMP
(V2D.ADDRetAddr1465)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.GETX 1
@V2D.ADDRetAddr1467
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.GETX//call goto
0;JMP
(V2D.ADDRetAddr1467)
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//Call V2D.SETX 2
@V2D.ADDRetAddr1470
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.SETX//call goto
0;JMP
(V2D.ADDRetAddr1470)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.GETY 1
@V2D.ADDRetAddr1472
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.GETY//call goto
0;JMP
(V2D.ADDRetAddr1472)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.GETY 1
@V2D.ADDRetAddr1474
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.GETY//call goto
0;JMP
(V2D.ADDRetAddr1474)
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//Call V2D.SETY 2
@V2D.ADDRetAddr1477
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.SETY//call goto
0;JMP
(V2D.ADDRetAddr1477)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V2D.EQUALS
(V2D.EQUALS)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.GETX 1
@V2D.EQUALSRetAddr1485
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.GETX//call goto
0;JMP
(V2D.EQUALSRetAddr1485)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.GETX 1
@V2D.EQUALSRetAddr1487
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.GETX//call goto
0;JMP
(V2D.EQUALSRetAddr1487)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS1489
D;JEQ
@EQ_NOTEQUALS1489
D;JNE
(EQ_EQUALS1489)
@SP
A=M-1
M=-1
@EQ_END1489
0;JMP
(EQ_NOTEQUALS1489)
@SP
A=M-1
M=0
@EQ_END1489
0;JMP
(EQ_END1489)
//NOT
@SP
A=M-1
M=!M
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.GETY 1
@V2D.EQUALSRetAddr1491
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.GETY//call goto
0;JMP
(V2D.EQUALSRetAddr1491)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.GETY 1
@V2D.EQUALSRetAddr1493
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.GETY//call goto
0;JMP
(V2D.EQUALSRetAddr1493)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS1495
D;JEQ
@EQ_NOTEQUALS1495
D;JNE
(EQ_EQUALS1495)
@SP
A=M-1
M=-1
@EQ_END1495
0;JMP
(EQ_NOTEQUALS1495)
@SP
A=M-1
M=0
@EQ_END1495
0;JMP
(EQ_END1495)
//NOT
@SP
A=M-1
M=!M
//OR
@SP
AM=M-1
D=M
A=A-1
M=D|M
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@V2D.EQUALS$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@V2D.EQUALS$IF_FALSE0
0;JMP
(V2D.EQUALS$IF_TRUE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
(V2D.EQUALS$IF_FALSE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V2D.COPY
(V2D.COPY)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.GETX 1
@V2D.COPYRetAddr1511
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.GETX//call goto
0;JMP
(V2D.COPYRetAddr1511)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.GETY 1
@V2D.COPYRetAddr1513
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.GETY//call goto
0;JMP
(V2D.COPYRetAddr1513)
//Call V2D.NEW 2
@V2D.COPYRetAddr1515
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.NEW//call goto
0;JMP
(V2D.COPYRetAddr1515)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V2D.DISPOSE
(V2D.DISPOSE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.DEALLOC 1
@V2D.DISPOSERetAddr1523
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.DEALLOC//call goto
0;JMP
(V2D.DISPOSERetAddr1523)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function MAIN.TOGGLECAM
(MAIN.TOGGLECAM)
//PUSH STATIC 50
@Main.50
D=M
@SP
A=M
M=D
@SP
M=M+1
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@MAIN.TOGGLECAM$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@MAIN.TOGGLECAM$IF_FALSE0
0;JMP
(MAIN.TOGGLECAM$IF_TRUE0)
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@MAIN.TOGGLECAMRetAddr1531
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1531)
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@MAIN.TOGGLECAMRetAddr1533
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1533)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.SETPOSY 2
@MAIN.TOGGLECAMRetAddr1535
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.SETPOSY//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1535)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@MAIN.TOGGLECAMRetAddr1537
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1537)
//PUSH CONSTANT 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@MAIN.TOGGLECAMRetAddr1539
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1539)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@MAIN.TOGGLECAMRetAddr1541
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1541)
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@MAIN.TOGGLECAMRetAddr1543
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1543)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.SETLENS 2
@MAIN.TOGGLECAMRetAddr1545
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.SETLENS//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1545)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.SETSCALE 2
@MAIN.TOGGLECAMRetAddr1547
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.SETSCALE//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1547)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call FLOAT.GETNEG 0
@MAIN.TOGGLECAMRetAddr1549
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETNEG//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1549)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//Call FLOAT.NEW 3
@MAIN.TOGGLECAMRetAddr1552
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1552)
//POP STATIC 26
@SP
AM=M-1
D=M
@Main.26
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 50
@SP
AM=M-1
D=M
@Main.50
M=D
//GOTO IF_END0
@MAIN.TOGGLECAM$IF_END0
0;JMP
(MAIN.TOGGLECAM$IF_FALSE0)
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@MAIN.TOGGLECAMRetAddr1554
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1554)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@MAIN.TOGGLECAMRetAddr1556
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1556)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.SETPOSY 2
@MAIN.TOGGLECAMRetAddr1558
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.SETPOSY//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1558)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@MAIN.TOGGLECAMRetAddr1560
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1560)
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@MAIN.TOGGLECAMRetAddr1562
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1562)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@MAIN.TOGGLECAMRetAddr1564
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1564)
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@MAIN.TOGGLECAMRetAddr1566
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1566)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.SETLENS 2
@MAIN.TOGGLECAMRetAddr1568
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.SETLENS//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1568)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.SETSCALE 2
@MAIN.TOGGLECAMRetAddr1570
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.SETSCALE//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1570)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call FLOAT.GETNEG 0
@MAIN.TOGGLECAMRetAddr1572
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETNEG//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1572)
//PUSH CONSTANT 1570
@1570
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@MAIN.TOGGLECAMRetAddr1574
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(MAIN.TOGGLECAMRetAddr1574)
//POP STATIC 26
@SP
AM=M-1
D=M
@Main.26
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//POP STATIC 50
@SP
AM=M-1
D=M
@Main.50
M=D
(MAIN.TOGGLECAM$IF_END0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function MAIN.MAIN
(MAIN.MAIN)
//Call DISPLAY.INIT 0
@MAIN.MAINRetAddr1583
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.INIT//call goto
0;JMP
(MAIN.MAINRetAddr1583)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call FLOAT.INIT 0
@MAIN.MAINRetAddr1585
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.INIT//call goto
0;JMP
(MAIN.MAINRetAddr1585)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call V3D.INIT 0
@MAIN.MAINRetAddr1587
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.INIT//call goto
0;JMP
(MAIN.MAINRetAddr1587)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call M4D.INIT 0
@MAIN.MAINRetAddr1589
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.INIT//call goto
0;JMP
(MAIN.MAINRetAddr1589)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call CAM3D.INIT 0
@MAIN.MAINRetAddr1591
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.INIT//call goto
0;JMP
(MAIN.MAINRetAddr1591)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call POINT.INIT 0
@MAIN.MAINRetAddr1593
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.INIT//call goto
0;JMP
(MAIN.MAINRetAddr1593)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call LINEBUFFER.NEW 1
@MAIN.MAINRetAddr1595
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@LINEBUFFER.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1595)
//POP STATIC 19
@SP
AM=M-1
D=M
@Main.19
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 49
@SP
AM=M-1
D=M
@Main.49
M=D
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call ARRAY.NEW 1
@MAIN.MAINRetAddr1597
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@ARRAY.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1597)
//POP STATIC 18
@SP
AM=M-1
D=M
@Main.18
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.NEW 2
@MAIN.MAINRetAddr1599
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1599)
//POP STATIC 48
@SP
AM=M-1
D=M
@Main.48
M=D
//Call FLOAT.GETPOS 0
@MAIN.MAINRetAddr1601
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.MAINRetAddr1601)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@MAIN.MAINRetAddr1603
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1603)
//POP STATIC 20
@SP
AM=M-1
D=M
@Main.20
M=D
//Call FLOAT.GETPOS 0
@MAIN.MAINRetAddr1605
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.MAINRetAddr1605)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@MAIN.MAINRetAddr1607
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1607)
//POP STATIC 21
@SP
AM=M-1
D=M
@Main.21
M=D
//Call FLOAT.GETPOS 0
@MAIN.MAINRetAddr1609
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.MAINRetAddr1609)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@MAIN.MAINRetAddr1611
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1611)
//POP STATIC 22
@SP
AM=M-1
D=M
@Main.22
M=D
//Call FLOAT.GETPOS 0
@MAIN.MAINRetAddr1613
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.MAINRetAddr1613)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@MAIN.MAINRetAddr1615
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1615)
//POP STATIC 23
@SP
AM=M-1
D=M
@Main.23
M=D
//Call FLOAT.GETPOS 0
@MAIN.MAINRetAddr1617
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.MAINRetAddr1617)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@MAIN.MAINRetAddr1619
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1619)
//POP STATIC 27
@SP
AM=M-1
D=M
@Main.27
M=D
//Call FLOAT.GETPOS 0
@MAIN.MAINRetAddr1621
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.MAINRetAddr1621)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@MAIN.MAINRetAddr1623
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1623)
//POP STATIC 28
@SP
AM=M-1
D=M
@Main.28
M=D
//Call FLOAT.GETPOS 0
@MAIN.MAINRetAddr1625
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.MAINRetAddr1625)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@MAIN.MAINRetAddr1627
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1627)
//POP STATIC 29
@SP
AM=M-1
D=M
@Main.29
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@MAIN.MAINRetAddr1629
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1629)
//POP STATIC 31
@SP
AM=M-1
D=M
@Main.31
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@MAIN.MAINRetAddr1631
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1631)
//POP STATIC 32
@SP
AM=M-1
D=M
@Main.32
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@MAIN.MAINRetAddr1633
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1633)
//POP STATIC 33
@SP
AM=M-1
D=M
@Main.33
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@MAIN.MAINRetAddr1635
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1635)
//POP STATIC 34
@SP
AM=M-1
D=M
@Main.34
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@MAIN.MAINRetAddr1637
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1637)
//POP STATIC 35
@SP
AM=M-1
D=M
@Main.35
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@MAIN.MAINRetAddr1639
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1639)
//POP STATIC 36
@SP
AM=M-1
D=M
@Main.36
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@MAIN.MAINRetAddr1641
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1641)
//POP STATIC 37
@SP
AM=M-1
D=M
@Main.37
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@MAIN.MAINRetAddr1643
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1643)
//POP STATIC 38
@SP
AM=M-1
D=M
@Main.38
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@MAIN.MAINRetAddr1645
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1645)
//POP STATIC 39
@SP
AM=M-1
D=M
@Main.39
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@MAIN.MAINRetAddr1647
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1647)
//POP STATIC 40
@SP
AM=M-1
D=M
@Main.40
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@MAIN.MAINRetAddr1649
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1649)
//POP STATIC 41
@SP
AM=M-1
D=M
@Main.41
M=D
//PUSH CONSTANT 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 13
@SP
AM=M-1
D=M
@Main.13
M=D
//PUSH STATIC 13
@Main.13
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call ARRAY.NEW 1
@MAIN.MAINRetAddr1651
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@ARRAY.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1651)
//POP STATIC 15
@SP
AM=M-1
D=M
@Main.15
M=D
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call ARRAY.NEW 1
@MAIN.MAINRetAddr1653
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@ARRAY.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1653)
//POP STATIC 16
@SP
AM=M-1
D=M
@Main.16
M=D
//Call M4D.NEW 0
@MAIN.MAINRetAddr1655
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1655)
//POP STATIC 42
@SP
AM=M-1
D=M
@Main.42
M=D
//PUSH CONSTANT 512
@512
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@MAIN.MAINRetAddr1657
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(MAIN.MAINRetAddr1657)
//PUSH CONSTANT 256
@256
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@MAIN.MAINRetAddr1659
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(MAIN.MAINRetAddr1659)
//PUSH CONSTANT 300
@300
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 200
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.NEW 4
@MAIN.MAINRetAddr1661
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1661)
//POP STATIC 46
@SP
AM=M-1
D=M
@Main.46
M=D
//Call FLOAT.GETPOS 0
@MAIN.MAINRetAddr1663
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.MAINRetAddr1663)
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//Call FLOAT.NEW 3
@MAIN.MAINRetAddr1666
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1666)
//POP STATIC 24
@SP
AM=M-1
D=M
@Main.24
M=D
//Call FLOAT.GETPOS 0
@MAIN.MAINRetAddr1668
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.MAINRetAddr1668)
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@MAIN.MAINRetAddr1670
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1670)
//POP STATIC 25
@SP
AM=M-1
D=M
@Main.25
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.NEW 2
@MAIN.MAINRetAddr1672
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1672)
//POP STATIC 44
@SP
AM=M-1
D=M
@Main.44
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.NEW 2
@MAIN.MAINRetAddr1674
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1674)
//POP STATIC 45
@SP
AM=M-1
D=M
@Main.45
M=D
//Call CAM3D.NEW 0
@MAIN.MAINRetAddr1676
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1676)
//POP STATIC 43
@SP
AM=M-1
D=M
@Main.43
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@MAIN.MAINRetAddr1678
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.MAINRetAddr1678)
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@MAIN.MAINRetAddr1680
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(MAIN.MAINRetAddr1680)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@MAIN.MAINRetAddr1682
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.MAINRetAddr1682)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@MAIN.MAINRetAddr1684
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(MAIN.MAINRetAddr1684)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@MAIN.MAINRetAddr1686
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.MAINRetAddr1686)
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@MAIN.MAINRetAddr1688
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(MAIN.MAINRetAddr1688)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.SETPOSX 2
@MAIN.MAINRetAddr1690
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.SETPOSX//call goto
0;JMP
(MAIN.MAINRetAddr1690)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.SETPOSY 2
@MAIN.MAINRetAddr1692
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.SETPOSY//call goto
0;JMP
(MAIN.MAINRetAddr1692)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.SETPOSZ 2
@MAIN.MAINRetAddr1694
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.SETPOSZ//call goto
0;JMP
(MAIN.MAINRetAddr1694)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@MAIN.MAINRetAddr1696
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.MAINRetAddr1696)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@MAIN.MAINRetAddr1698
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(MAIN.MAINRetAddr1698)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.SETROTY 2
@MAIN.MAINRetAddr1700
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.SETROTY//call goto
0;JMP
(MAIN.MAINRetAddr1700)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//POP STATIC 50
@SP
AM=M-1
D=M
@Main.50
M=D
//Call MAIN.TOGGLECAM 0
@MAIN.MAINRetAddr1703
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MAIN.TOGGLECAM//call goto
0;JMP
(MAIN.MAINRetAddr1703)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call GRID.NEW 0
@MAIN.MAINRetAddr1705
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1705)
//POP STATIC 47
@SP
AM=M-1
D=M
@Main.47
M=D
//PUSH STATIC 47
@Main.47
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.SETGOAL 3
@MAIN.MAINRetAddr1707
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.SETGOAL//call goto
0;JMP
(MAIN.MAINRetAddr1707)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call FLOAT.GETPOS 0
@MAIN.MAINRetAddr1709
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.MAINRetAddr1709)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@MAIN.MAINRetAddr1711
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1711)
//POP STATIC 30
@SP
AM=M-1
D=M
@Main.30
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr1713
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr1713)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr1715
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr1715)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr1717
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr1717)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 50
@50
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@MAIN.MAINRetAddr1719
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1719)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1721
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1721)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1723
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1723)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1725
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1725)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1727
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1727)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1729
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1729)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1731
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1731)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1733
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1733)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1735
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1735)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1737
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1737)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1739
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1739)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1741
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1741)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1743
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1743)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1745
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1745)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1747
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1747)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1749
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1749)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1751
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1751)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1753
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1753)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1755
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1755)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1757
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1757)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1759
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1759)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1761
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1761)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1763
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1763)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1765
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1765)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1767
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1767)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1769
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1769)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1771
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1771)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1773
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1773)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1775
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1775)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1777
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1777)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1779
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1779)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1781
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1781)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1783
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1783)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1785
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1785)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1787
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1787)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1789
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1789)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1791
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1791)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1793
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1793)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1795
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1795)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1797
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1797)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1799
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1799)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1801
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1801)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1803
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1803)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1805
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1805)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1807
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1807)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1809
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1809)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1811
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1811)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1813
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1813)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1815
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1815)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1817
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1817)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1819
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1819)
//Call OUTPUT.PRINTSTRING 1
@MAIN.MAINRetAddr1821
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(MAIN.MAINRetAddr1821)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr1823
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr1823)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 42
@42
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@MAIN.MAINRetAddr1825
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1825)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1827
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1827)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1829
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1829)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1831
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1831)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1833
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1833)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1835
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1835)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1837
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1837)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1839
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1839)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1841
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1841)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1843
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1843)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1845
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1845)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1847
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1847)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1849
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1849)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1851
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1851)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1853
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1853)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1855
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1855)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1857
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1857)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1859
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1859)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1861
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1861)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1863
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1863)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1865
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1865)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1867
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1867)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1869
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1869)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1871
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1871)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1873
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1873)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1875
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1875)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1877
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1877)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1879
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1879)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1881
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1881)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1883
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1883)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1885
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1885)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1887
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1887)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1889
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1889)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1891
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1891)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1893
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1893)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1895
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1895)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1897
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1897)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1899
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1899)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1901
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1901)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1903
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1903)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1905
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1905)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1907
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1907)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1909
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1909)
//Call OUTPUT.PRINTSTRING 1
@MAIN.MAINRetAddr1911
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(MAIN.MAINRetAddr1911)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr1913
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr1913)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 42
@42
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@MAIN.MAINRetAddr1915
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(MAIN.MAINRetAddr1915)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1917
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1917)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1919
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1919)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1921
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1921)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1923
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1923)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1925
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1925)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1927
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1927)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1929
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1929)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1931
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1931)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1933
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1933)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1935
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1935)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1937
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1937)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1939
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1939)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1941
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1941)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1943
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1943)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1945
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1945)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1947
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1947)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1949
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1949)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1951
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1951)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1953
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1953)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1955
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1955)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1957
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1957)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1959
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1959)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1961
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1961)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1963
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1963)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1965
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1965)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1967
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1967)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1969
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1969)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1971
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1971)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1973
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1973)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1975
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1975)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1977
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1977)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1979
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1979)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1981
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1981)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1983
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1983)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1985
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1985)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1987
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1987)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1989
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1989)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1991
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1991)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1993
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1993)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1995
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1995)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1997
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1997)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr1999
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr1999)
//Call OUTPUT.PRINTSTRING 1
@MAIN.MAINRetAddr2001
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(MAIN.MAINRetAddr2001)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2003
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2003)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 45
@45
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@MAIN.MAINRetAddr2005
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(MAIN.MAINRetAddr2005)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2007
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2007)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2009
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2009)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2011
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2011)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2013
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2013)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2015
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2015)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2017
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2017)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2019
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2019)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2021
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2021)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2023
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2023)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2025
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2025)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2027
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2027)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2029
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2029)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2031
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2031)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2033
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2033)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2035
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2035)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2037
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2037)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2039
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2039)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2041
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2041)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2043
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2043)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2045
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2045)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2047
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2047)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2049
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2049)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2051
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2051)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2053
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2053)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2055
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2055)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2057
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2057)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2059
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2059)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2061
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2061)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2063
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2063)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2065
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2065)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2067
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2067)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2069
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2069)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2071
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2071)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2073
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2073)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2075
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2075)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2077
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2077)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2079
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2079)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2081
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2081)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2083
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2083)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2085
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2085)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2087
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2087)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2089
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2089)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2091
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2091)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2093
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2093)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2095
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2095)
//Call OUTPUT.PRINTSTRING 1
@MAIN.MAINRetAddr2097
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(MAIN.MAINRetAddr2097)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2099
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2099)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 42
@42
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@MAIN.MAINRetAddr2101
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(MAIN.MAINRetAddr2101)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2103
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2103)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2105
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2105)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2107
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2107)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2109
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2109)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2111
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2111)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2113
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2113)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2115
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2115)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2117
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2117)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2119
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2119)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2121
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2121)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2123
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2123)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2125
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2125)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2127
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2127)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2129
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2129)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2131
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2131)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2133
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2133)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2135
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2135)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2137
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2137)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2139
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2139)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2141
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2141)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2143
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2143)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2145
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2145)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2147
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2147)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2149
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2149)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2151
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2151)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2153
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2153)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2155
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2155)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2157
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2157)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2159
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2159)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2161
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2161)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2163
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2163)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2165
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2165)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2167
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2167)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2169
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2169)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2171
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2171)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2173
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2173)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2175
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2175)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2177
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2177)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2179
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2179)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2181
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2181)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2183
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2183)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2185
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2185)
//Call OUTPUT.PRINTSTRING 1
@MAIN.MAINRetAddr2187
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(MAIN.MAINRetAddr2187)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2189
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2189)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@MAIN.MAINRetAddr2191
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(MAIN.MAINRetAddr2191)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2193
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2193)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2195
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2195)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2197
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2197)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2199
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2199)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2201
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2201)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2203
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2203)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2205
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2205)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2207
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2207)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2209
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2209)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2211
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2211)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2213
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2213)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2215
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2215)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2217
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2217)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2219
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2219)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2221
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2221)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2223
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2223)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2225
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2225)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2227
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2227)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2229
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2229)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2231
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2231)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2233
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2233)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2235
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2235)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2237
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2237)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2239
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2239)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2241
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2241)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2243
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2243)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2245
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2245)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2247
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2247)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2249
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2249)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2251
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2251)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2253
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2253)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2255
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2255)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2257
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2257)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2259
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2259)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2261
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2261)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2263
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2263)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2265
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2265)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2267
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2267)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2269
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2269)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2271
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2271)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2273
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2273)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2275
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2275)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2277
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2277)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2279
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2279)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2281
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2281)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2283
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2283)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2285
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2285)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2287
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2287)
//Call OUTPUT.PRINTSTRING 1
@MAIN.MAINRetAddr2289
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(MAIN.MAINRetAddr2289)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2291
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2291)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2293
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2293)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@MAIN.MAINRetAddr2295
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(MAIN.MAINRetAddr2295)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2297
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2297)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2299
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2299)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2301
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2301)
//PUSH CONSTANT 70
@70
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2303
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2303)
//PUSH CONSTANT 105
@105
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2305
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2305)
//PUSH CONSTANT 110
@110
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2307
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2307)
//PUSH CONSTANT 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2309
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2309)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2311
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2311)
//PUSH CONSTANT 116
@116
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2313
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2313)
//PUSH CONSTANT 104
@104
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2315
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2315)
//PUSH CONSTANT 101
@101
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2317
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2317)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2319
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2319)
//PUSH CONSTANT 109
@109
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2321
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2321)
//PUSH CONSTANT 97
@97
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2323
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2323)
//PUSH CONSTANT 103
@103
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2325
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2325)
//PUSH CONSTANT 105
@105
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2327
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2327)
//PUSH CONSTANT 99
@99
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2329
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2329)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2331
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2331)
//PUSH CONSTANT 102
@102
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2333
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2333)
//PUSH CONSTANT 108
@108
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2335
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2335)
//PUSH CONSTANT 111
@111
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2337
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2337)
//PUSH CONSTANT 111
@111
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2339
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2339)
//PUSH CONSTANT 114
@114
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2341
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2341)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2343
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2343)
//PUSH CONSTANT 88
@88
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2345
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2345)
//PUSH CONSTANT 44
@44
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2347
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2347)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2349
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2349)
//PUSH CONSTANT 116
@116
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2351
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2351)
//PUSH CONSTANT 104
@104
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2353
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2353)
//PUSH CONSTANT 101
@101
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2355
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2355)
//PUSH CONSTANT 110
@110
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2357
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2357)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2359
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2359)
//PUSH CONSTANT 119
@119
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2361
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2361)
//PUSH CONSTANT 101
@101
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2363
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2363)
//PUSH CONSTANT 39
@39
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2365
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2365)
//PUSH CONSTANT 108
@108
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2367
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2367)
//PUSH CONSTANT 108
@108
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2369
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2369)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2371
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2371)
//PUSH CONSTANT 104
@104
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2373
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2373)
//PUSH CONSTANT 97
@97
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2375
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2375)
//PUSH CONSTANT 118
@118
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2377
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2377)
//PUSH CONSTANT 101
@101
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2379
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2379)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2381
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2381)
//PUSH CONSTANT 97
@97
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2383
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2383)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2385
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2385)
//PUSH CONSTANT 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2387
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2387)
//PUSH CONSTANT 97
@97
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2389
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2389)
//PUSH CONSTANT 114
@114
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2391
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2391)
//PUSH CONSTANT 116
@116
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2393
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2393)
//PUSH CONSTANT 121
@121
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2395
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2395)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2397
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2397)
//PUSH CONSTANT 97
@97
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2399
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2399)
//PUSH CONSTANT 110
@110
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2401
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2401)
//PUSH CONSTANT 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2403
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2403)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2405
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2405)
//PUSH CONSTANT 99
@99
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2407
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2407)
//PUSH CONSTANT 97
@97
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2409
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2409)
//PUSH CONSTANT 107
@107
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2411
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2411)
//PUSH CONSTANT 101
@101
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2413
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2413)
//Call OUTPUT.PRINTSTRING 1
@MAIN.MAINRetAddr2415
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(MAIN.MAINRetAddr2415)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2417
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2417)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2419
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2419)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 56
@56
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@MAIN.MAINRetAddr2421
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(MAIN.MAINRetAddr2421)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2423
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2423)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2425
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2425)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2427
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2427)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2429
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2429)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2431
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2431)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2433
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2433)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2435
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2435)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2437
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2437)
//PUSH CONSTANT 71
@71
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2439
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2439)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2441
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2441)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2443
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2443)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2445
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2445)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2447
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2447)
//PUSH CONSTANT 80
@80
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2449
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2449)
//PUSH CONSTANT 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2451
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2451)
//PUSH CONSTANT 79
@79
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2453
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2453)
//PUSH CONSTANT 71
@71
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2455
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2455)
//PUSH CONSTANT 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2457
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2457)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2459
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2459)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2461
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2461)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2463
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2463)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2465
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2465)
//PUSH CONSTANT 68
@68
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2467
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2467)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2469
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2469)
//PUSH CONSTANT 73
@73
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2471
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2471)
//PUSH CONSTANT 78
@78
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2473
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2473)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2475
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2475)
//PUSH CONSTANT 84
@84
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2477
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2477)
//PUSH CONSTANT 72
@72
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2479
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2479)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2481
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2481)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2483
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2483)
//PUSH CONSTANT 74
@74
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2485
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2485)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2487
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2487)
//PUSH CONSTANT 67
@67
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2489
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2489)
//PUSH CONSTANT 75
@75
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2491
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2491)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2493
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2493)
//PUSH CONSTANT 80
@80
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2495
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2495)
//PUSH CONSTANT 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2497
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2497)
//PUSH CONSTANT 79
@79
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2499
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2499)
//PUSH CONSTANT 71
@71
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2501
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2501)
//PUSH CONSTANT 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2503
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2503)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2505
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2505)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2507
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2507)
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2509
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2509)
//PUSH CONSTANT 73
@73
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2511
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2511)
//PUSH CONSTANT 78
@78
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2513
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2513)
//PUSH CONSTANT 71
@71
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2515
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2515)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2517
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2517)
//PUSH CONSTANT 76
@76
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2519
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2519)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2521
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2521)
//PUSH CONSTANT 78
@78
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2523
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2523)
//PUSH CONSTANT 71
@71
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2525
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2525)
//PUSH CONSTANT 85
@85
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2527
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2527)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2529
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2529)
//PUSH CONSTANT 71
@71
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2531
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2531)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2533
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2533)
//Call OUTPUT.PRINTSTRING 1
@MAIN.MAINRetAddr2535
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(MAIN.MAINRetAddr2535)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2537
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2537)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2539
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2539)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 36
@36
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@MAIN.MAINRetAddr2541
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(MAIN.MAINRetAddr2541)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2543
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2543)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2545
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2545)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2547
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2547)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2549
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2549)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2551
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2551)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2553
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2553)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2555
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2555)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2557
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2557)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2559
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2559)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2561
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2561)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2563
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2563)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2565
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2565)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2567
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2567)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2569
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2569)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2571
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2571)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2573
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2573)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2575
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2575)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2577
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2577)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2579
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2579)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2581
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2581)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2583
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2583)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2585
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2585)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2587
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2587)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2589
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2589)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2591
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2591)
//PUSH CONSTANT 67
@67
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2593
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2593)
//PUSH CONSTANT 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2595
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2595)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2597
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2597)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2599
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2599)
//PUSH CONSTANT 84
@84
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2601
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2601)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2603
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2603)
//PUSH CONSTANT 68
@68
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2605
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2605)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2607
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2607)
//PUSH CONSTANT 66
@66
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2609
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2609)
//PUSH CONSTANT 89
@89
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2611
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2611)
//PUSH CONSTANT 58
@58
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2613
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2613)
//Call OUTPUT.PRINTSTRING 1
@MAIN.MAINRetAddr2615
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(MAIN.MAINRetAddr2615)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2617
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2617)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2619
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2619)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 39
@39
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@MAIN.MAINRetAddr2621
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(MAIN.MAINRetAddr2621)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2623
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2623)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2625
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2625)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2627
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2627)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2629
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2629)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2631
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2631)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2633
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2633)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2635
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2635)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2637
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2637)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2639
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2639)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2641
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2641)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2643
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2643)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2645
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2645)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2647
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2647)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2649
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2649)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2651
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2651)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2653
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2653)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2655
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2655)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2657
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2657)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2659
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2659)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2661
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2661)
//PUSH CONSTANT 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2663
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2663)
//PUSH CONSTANT 73
@73
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2665
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2665)
//PUSH CONSTANT 67
@67
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2667
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2667)
//PUSH CONSTANT 72
@72
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2669
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2669)
//PUSH CONSTANT 73
@73
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2671
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2671)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2673
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2673)
//PUSH CONSTANT 44
@44
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2675
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2675)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2677
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2677)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2679
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2679)
//PUSH CONSTANT 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2681
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2681)
//PUSH CONSTANT 73
@73
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2683
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2683)
//PUSH CONSTANT 67
@67
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2685
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2685)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2687
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2687)
//PUSH CONSTANT 38
@38
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2689
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2689)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2691
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2691)
//PUSH CONSTANT 74
@74
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2693
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2693)
//PUSH CONSTANT 79
@79
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2695
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2695)
//PUSH CONSTANT 83
@83
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2697
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2697)
//PUSH CONSTANT 72
@72
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2699
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2699)
//Call OUTPUT.PRINTSTRING 1
@MAIN.MAINRetAddr2701
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(MAIN.MAINRetAddr2701)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2703
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2703)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2705
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2705)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2707
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2707)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 42
@42
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@MAIN.MAINRetAddr2709
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(MAIN.MAINRetAddr2709)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2711
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2711)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2713
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2713)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2715
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2715)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2717
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2717)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2719
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2719)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2721
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2721)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2723
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2723)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2725
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2725)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2727
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2727)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2729
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2729)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2731
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2731)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2733
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2733)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2735
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2735)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2737
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2737)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2739
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2739)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2741
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2741)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2743
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2743)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2745
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2745)
//PUSH CONSTANT 40
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2747
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2747)
//PUSH CONSTANT 85
@85
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2749
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2749)
//PUSH CONSTANT 80
@80
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2751
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2751)
//PUSH CONSTANT 47
@47
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2753
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2753)
//PUSH CONSTANT 68
@68
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2755
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2755)
//PUSH CONSTANT 79
@79
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2757
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2757)
//PUSH CONSTANT 87
@87
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2759
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2759)
//PUSH CONSTANT 78
@78
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2761
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2761)
//PUSH CONSTANT 47
@47
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2763
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2763)
//PUSH CONSTANT 76
@76
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2765
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2765)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2767
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2767)
//PUSH CONSTANT 70
@70
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2769
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2769)
//PUSH CONSTANT 84
@84
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2771
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2771)
//PUSH CONSTANT 47
@47
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2773
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2773)
//PUSH CONSTANT 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2775
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2775)
//PUSH CONSTANT 73
@73
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2777
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2777)
//PUSH CONSTANT 71
@71
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2779
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2779)
//PUSH CONSTANT 72
@72
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2781
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2781)
//PUSH CONSTANT 84
@84
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2783
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2783)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2785
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2785)
//PUSH CONSTANT 47
@47
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2787
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2787)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2789
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2789)
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2791
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2791)
//PUSH CONSTANT 41
@41
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2793
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2793)
//Call OUTPUT.PRINTSTRING 1
@MAIN.MAINRetAddr2795
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(MAIN.MAINRetAddr2795)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2797
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2797)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2799
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2799)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr2801
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr2801)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//POP STATIC 0
@SP
AM=M-1
D=M
@Main.0
M=D
(MAIN.MAIN$WHILE_EXP0)
//PUSH STATIC 0
@Main.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@MAIN.MAIN$WHILE_END0
D;JNE
//Call KEYBOARD.KEYPRESSED 0
@MAIN.MAINRetAddr2805
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@KEYBOARD.KEYPRESSED//call goto
0;JMP
(MAIN.MAINRetAddr2805)
//POP STATIC 3
@SP
AM=M-1
D=M
@Main.3
M=D
//PUSH STATIC 3
@Main.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 131
@131
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS2807
D;JEQ
@EQ_NOTEQUALS2807
D;JNE
(EQ_EQUALS2807)
@SP
A=M-1
M=-1
@EQ_END2807
0;JMP
(EQ_NOTEQUALS2807)
@SP
A=M-1
M=0
@EQ_END2807
0;JMP
(EQ_END2807)
//PUSH STATIC 3
@Main.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 133
@133
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS2808
D;JEQ
@EQ_NOTEQUALS2808
D;JNE
(EQ_EQUALS2808)
@SP
A=M-1
M=-1
@EQ_END2808
0;JMP
(EQ_NOTEQUALS2808)
@SP
A=M-1
M=0
@EQ_END2808
0;JMP
(EQ_END2808)
//OR
@SP
AM=M-1
D=M
A=A-1
M=D|M
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@MAIN.MAIN$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@MAIN.MAIN$IF_FALSE0
0;JMP
(MAIN.MAIN$IF_TRUE0)
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 31
@Main.31
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.GETNORM 2
@MAIN.MAINRetAddr2810
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.GETNORM//call goto
0;JMP
(MAIN.MAINRetAddr2810)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.GETPOSX 1
@MAIN.MAINRetAddr2812
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.GETPOSX//call goto
0;JMP
(MAIN.MAINRetAddr2812)
//Call FLOAT.COPY 2
@MAIN.MAINRetAddr2814
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(MAIN.MAINRetAddr2814)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 31
@Main.31
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@MAIN.MAINRetAddr2816
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(MAIN.MAINRetAddr2816)
//Call FLOAT.COPY 2
@MAIN.MAINRetAddr2818
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(MAIN.MAINRetAddr2818)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 25
@Main.25
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@MAIN.MAINRetAddr2820
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(MAIN.MAINRetAddr2820)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.GETPOSZ 1
@MAIN.MAINRetAddr2822
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.GETPOSZ//call goto
0;JMP
(MAIN.MAINRetAddr2822)
//Call FLOAT.COPY 2
@MAIN.MAINRetAddr2824
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(MAIN.MAINRetAddr2824)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 23
@Main.23
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 31
@Main.31
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@MAIN.MAINRetAddr2826
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(MAIN.MAINRetAddr2826)
//Call FLOAT.COPY 2
@MAIN.MAINRetAddr2828
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(MAIN.MAINRetAddr2828)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 23
@Main.23
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 23
@Main.23
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 25
@Main.25
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@MAIN.MAINRetAddr2830
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(MAIN.MAINRetAddr2830)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 3
@Main.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 131
@131
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS2832
D;JEQ
@EQ_NOTEQUALS2832
D;JNE
(EQ_EQUALS2832)
@SP
A=M-1
M=-1
@EQ_END2832
0;JMP
(EQ_NOTEQUALS2832)
@SP
A=M-1
M=0
@EQ_END2832
0;JMP
(EQ_END2832)
//IF-GOTO IF_TRUE1
@SP
AM=M-1
D=M
@MAIN.MAIN$IF_TRUE1
D;JNE
//GOTO IF_FALSE1
@MAIN.MAIN$IF_FALSE1
0;JMP
(MAIN.MAIN$IF_TRUE1)
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@MAIN.MAINRetAddr2833
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(MAIN.MAINRetAddr2833)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 23
@Main.23
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 23
@Main.23
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@MAIN.MAINRetAddr2835
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(MAIN.MAINRetAddr2835)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END1
@MAIN.MAIN$IF_END1
0;JMP
(MAIN.MAIN$IF_FALSE1)
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@MAIN.MAINRetAddr2837
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(MAIN.MAINRetAddr2837)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 23
@Main.23
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 23
@Main.23
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@MAIN.MAINRetAddr2839
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(MAIN.MAINRetAddr2839)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.MAIN$IF_END1)
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@MAIN.MAINRetAddr2841
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(MAIN.MAINRetAddr2841)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOINT 2
@MAIN.MAINRetAddr2843
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOINT//call goto
0;JMP
(MAIN.MAINRetAddr2843)
//POP STATIC 7
@SP
AM=M-1
D=M
@Main.7
M=D
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@MAIN.MAINRetAddr2845
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(MAIN.MAINRetAddr2845)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOINT 2
@MAIN.MAINRetAddr2847
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOINT//call goto
0;JMP
(MAIN.MAINRetAddr2847)
//POP STATIC 9
@SP
AM=M-1
D=M
@Main.9
M=D
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@MAIN.MAINRetAddr2849
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(MAIN.MAINRetAddr2849)
//Call FLOAT.GETNEG 0
@MAIN.MAINRetAddr2851
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETNEG//call goto
0;JMP
(MAIN.MAINRetAddr2851)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS2853
D;JEQ
@EQ_NOTEQUALS2853
D;JNE
(EQ_EQUALS2853)
@SP
A=M-1
M=-1
@EQ_END2853
0;JMP
(EQ_NOTEQUALS2853)
@SP
A=M-1
M=0
@EQ_END2853
0;JMP
(EQ_END2853)
//IF-GOTO IF_TRUE2
@SP
AM=M-1
D=M
@MAIN.MAIN$IF_TRUE2
D;JNE
//GOTO IF_FALSE2
@MAIN.MAIN$IF_FALSE2
0;JMP
(MAIN.MAIN$IF_TRUE2)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//POP STATIC 4
@SP
AM=M-1
D=M
@Main.4
M=D
//GOTO IF_END2
@MAIN.MAIN$IF_END2
0;JMP
(MAIN.MAIN$IF_FALSE2)
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@MAIN.MAINRetAddr2855
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(MAIN.MAINRetAddr2855)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOINT 2
@MAIN.MAINRetAddr2857
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOINT//call goto
0;JMP
(MAIN.MAINRetAddr2857)
//POP STATIC 4
@SP
AM=M-1
D=M
@Main.4
M=D
(MAIN.MAIN$IF_END2)
//PUSH STATIC 23
@Main.23
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETSIGN 1
@MAIN.MAINRetAddr2859
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETSIGN//call goto
0;JMP
(MAIN.MAINRetAddr2859)
//Call FLOAT.GETNEG 0
@MAIN.MAINRetAddr2861
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETNEG//call goto
0;JMP
(MAIN.MAINRetAddr2861)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS2863
D;JEQ
@EQ_NOTEQUALS2863
D;JNE
(EQ_EQUALS2863)
@SP
A=M-1
M=-1
@EQ_END2863
0;JMP
(EQ_NOTEQUALS2863)
@SP
A=M-1
M=0
@EQ_END2863
0;JMP
(EQ_END2863)
//IF-GOTO IF_TRUE3
@SP
AM=M-1
D=M
@MAIN.MAIN$IF_TRUE3
D;JNE
//GOTO IF_FALSE3
@MAIN.MAIN$IF_FALSE3
0;JMP
(MAIN.MAIN$IF_TRUE3)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//POP STATIC 5
@SP
AM=M-1
D=M
@Main.5
M=D
//GOTO IF_END3
@MAIN.MAIN$IF_END3
0;JMP
(MAIN.MAIN$IF_FALSE3)
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 23
@Main.23
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@MAIN.MAINRetAddr2865
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(MAIN.MAINRetAddr2865)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOINT 2
@MAIN.MAINRetAddr2867
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOINT//call goto
0;JMP
(MAIN.MAINRetAddr2867)
//POP STATIC 5
@SP
AM=M-1
D=M
@Main.5
M=D
(MAIN.MAIN$IF_END3)
//PUSH STATIC 47
@Main.47
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 7
@Main.7
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 9
@Main.9
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 4
@Main.4
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 5
@Main.5
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.CANMOVE 5
@MAIN.MAINRetAddr2869
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.CANMOVE//call goto
0;JMP
(MAIN.MAINRetAddr2869)
//POP STATIC 1
@SP
AM=M-1
D=M
@Main.1
M=D
//PUSH STATIC 1
@Main.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//IF-GOTO IF_TRUE4
@SP
AM=M-1
D=M
@MAIN.MAIN$IF_TRUE4
D;JNE
//GOTO IF_FALSE4
@MAIN.MAIN$IF_FALSE4
0;JMP
(MAIN.MAIN$IF_TRUE4)
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.SETPOSX 2
@MAIN.MAINRetAddr2871
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.SETPOSX//call goto
0;JMP
(MAIN.MAINRetAddr2871)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 23
@Main.23
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.SETPOSZ 2
@MAIN.MAINRetAddr2873
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.SETPOSZ//call goto
0;JMP
(MAIN.MAINRetAddr2873)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.MAIN$IF_FALSE4)
(MAIN.MAIN$IF_FALSE0)
//PUSH STATIC 3
@Main.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 130
@130
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS2875
D;JEQ
@EQ_NOTEQUALS2875
D;JNE
(EQ_EQUALS2875)
@SP
A=M-1
M=-1
@EQ_END2875
0;JMP
(EQ_NOTEQUALS2875)
@SP
A=M-1
M=0
@EQ_END2875
0;JMP
(EQ_END2875)
//IF-GOTO IF_TRUE5
@SP
AM=M-1
D=M
@MAIN.MAIN$IF_TRUE5
D;JNE
//GOTO IF_FALSE5
@MAIN.MAIN$IF_FALSE5
0;JMP
(MAIN.MAIN$IF_TRUE5)
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.GETROTY 1
@MAIN.MAINRetAddr2876
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.GETROTY//call goto
0;JMP
(MAIN.MAINRetAddr2876)
//PUSH STATIC 24
@Main.24
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@MAIN.MAINRetAddr2878
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(MAIN.MAINRetAddr2878)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.RADIANALIAS 2
@MAIN.MAINRetAddr2880
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.RADIANALIAS//call goto
0;JMP
(MAIN.MAINRetAddr2880)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.SETROTY 2
@MAIN.MAINRetAddr2882
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.SETROTY//call goto
0;JMP
(MAIN.MAINRetAddr2882)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.MAIN$IF_FALSE5)
//PUSH STATIC 3
@Main.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 132
@132
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS2884
D;JEQ
@EQ_NOTEQUALS2884
D;JNE
(EQ_EQUALS2884)
@SP
A=M-1
M=-1
@EQ_END2884
0;JMP
(EQ_NOTEQUALS2884)
@SP
A=M-1
M=0
@EQ_END2884
0;JMP
(EQ_END2884)
//IF-GOTO IF_TRUE6
@SP
AM=M-1
D=M
@MAIN.MAIN$IF_TRUE6
D;JNE
//GOTO IF_FALSE6
@MAIN.MAIN$IF_FALSE6
0;JMP
(MAIN.MAIN$IF_TRUE6)
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.GETROTY 1
@MAIN.MAINRetAddr2885
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.GETROTY//call goto
0;JMP
(MAIN.MAINRetAddr2885)
//PUSH STATIC 24
@Main.24
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@MAIN.MAINRetAddr2887
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(MAIN.MAINRetAddr2887)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.RADIANALIAS 2
@MAIN.MAINRetAddr2889
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.RADIANALIAS//call goto
0;JMP
(MAIN.MAINRetAddr2889)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.SETROTY 2
@MAIN.MAINRetAddr2891
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.SETROTY//call goto
0;JMP
(MAIN.MAINRetAddr2891)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.MAIN$IF_FALSE6)
//PUSH STATIC 3
@Main.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS2893
D;JEQ
@EQ_NOTEQUALS2893
D;JNE
(EQ_EQUALS2893)
@SP
A=M-1
M=-1
@EQ_END2893
0;JMP
(EQ_NOTEQUALS2893)
@SP
A=M-1
M=0
@EQ_END2893
0;JMP
(EQ_END2893)
//IF-GOTO IF_TRUE7
@SP
AM=M-1
D=M
@MAIN.MAIN$IF_TRUE7
D;JNE
//GOTO IF_FALSE7
@MAIN.MAIN$IF_FALSE7
0;JMP
(MAIN.MAIN$IF_TRUE7)
//Call MAIN.TOGGLECAM 0
@MAIN.MAINRetAddr2894
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MAIN.TOGGLECAM//call goto
0;JMP
(MAIN.MAINRetAddr2894)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.MAIN$IF_FALSE7)
//PUSH STATIC 3
@Main.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS2896
D;JEQ
@EQ_NOTEQUALS2896
D;JNE
(EQ_EQUALS2896)
@SP
A=M-1
M=-1
@EQ_END2896
0;JMP
(EQ_NOTEQUALS2896)
@SP
A=M-1
M=0
@EQ_END2896
0;JMP
(EQ_END2896)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO IF_TRUE8
@SP
AM=M-1
D=M
@MAIN.MAIN$IF_TRUE8
D;JNE
//GOTO IF_FALSE8
@MAIN.MAIN$IF_FALSE8
0;JMP
(MAIN.MAIN$IF_TRUE8)
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.IDENTITY 1
@MAIN.MAINRetAddr2898
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.IDENTITY//call goto
0;JMP
(MAIN.MAINRetAddr2898)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.GETPOSX 1
@MAIN.MAINRetAddr2900
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.GETPOSX//call goto
0;JMP
(MAIN.MAINRetAddr2900)
//Call FLOAT.NEGATE 2
@MAIN.MAINRetAddr2902
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEGATE//call goto
0;JMP
(MAIN.MAINRetAddr2902)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.GETPOSY 1
@MAIN.MAINRetAddr2904
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.GETPOSY//call goto
0;JMP
(MAIN.MAINRetAddr2904)
//Call FLOAT.NEGATE 2
@MAIN.MAINRetAddr2906
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEGATE//call goto
0;JMP
(MAIN.MAINRetAddr2906)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.GETPOSZ 1
@MAIN.MAINRetAddr2908
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.GETPOSZ//call goto
0;JMP
(MAIN.MAINRetAddr2908)
//Call FLOAT.NEGATE 2
@MAIN.MAINRetAddr2910
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEGATE//call goto
0;JMP
(MAIN.MAINRetAddr2910)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 22
@Main.22
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.TRANSLATE 5
@MAIN.MAINRetAddr2912
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.TRANSLATE//call goto
0;JMP
(MAIN.MAINRetAddr2912)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.GETROTY 1
@MAIN.MAINRetAddr2914
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.GETROTY//call goto
0;JMP
(MAIN.MAINRetAddr2914)
//Call FLOAT.NEGATE 2
@MAIN.MAINRetAddr2916
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEGATE//call goto
0;JMP
(MAIN.MAINRetAddr2916)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.ROTATEY 3
@MAIN.MAINRetAddr2918
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.ROTATEY//call goto
0;JMP
(MAIN.MAINRetAddr2918)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 26
@Main.26
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.ROTATEX 3
@MAIN.MAINRetAddr2920
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.ROTATEX//call goto
0;JMP
(MAIN.MAINRetAddr2920)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.GETPOSX 1
@MAIN.MAINRetAddr2922
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.GETPOSX//call goto
0;JMP
(MAIN.MAINRetAddr2922)
//Call FLOAT.COPY 2
@MAIN.MAINRetAddr2924
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(MAIN.MAINRetAddr2924)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@MAIN.MAINRetAddr2926
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(MAIN.MAINRetAddr2926)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOINT 2
@MAIN.MAINRetAddr2928
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOINT//call goto
0;JMP
(MAIN.MAINRetAddr2928)
//POP STATIC 7
@SP
AM=M-1
D=M
@Main.7
M=D
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.GETPOSZ 1
@MAIN.MAINRetAddr2930
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.GETPOSZ//call goto
0;JMP
(MAIN.MAINRetAddr2930)
//Call FLOAT.COPY 2
@MAIN.MAINRetAddr2932
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(MAIN.MAINRetAddr2932)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@MAIN.MAINRetAddr2934
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(MAIN.MAINRetAddr2934)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 21
@Main.21
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOINT 2
@MAIN.MAINRetAddr2936
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOINT//call goto
0;JMP
(MAIN.MAINRetAddr2936)
//POP STATIC 9
@SP
AM=M-1
D=M
@Main.9
M=D
//PUSH STATIC 7
@Main.7
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 47
@Main.47
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.GETGOALX 1
@MAIN.MAINRetAddr2938
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.GETGOALX//call goto
0;JMP
(MAIN.MAINRetAddr2938)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS2940
D;JEQ
@EQ_NOTEQUALS2940
D;JNE
(EQ_EQUALS2940)
@SP
A=M-1
M=-1
@EQ_END2940
0;JMP
(EQ_NOTEQUALS2940)
@SP
A=M-1
M=0
@EQ_END2940
0;JMP
(EQ_END2940)
//PUSH STATIC 9
@Main.9
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 47
@Main.47
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.GETGOALY 1
@MAIN.MAINRetAddr2941
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.GETGOALY//call goto
0;JMP
(MAIN.MAINRetAddr2941)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS2943
D;JEQ
@EQ_NOTEQUALS2943
D;JNE
(EQ_EQUALS2943)
@SP
A=M-1
M=-1
@EQ_END2943
0;JMP
(EQ_NOTEQUALS2943)
@SP
A=M-1
M=0
@EQ_END2943
0;JMP
(EQ_END2943)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//IF-GOTO IF_TRUE9
@SP
AM=M-1
D=M
@MAIN.MAIN$IF_TRUE9
D;JNE
//GOTO IF_FALSE9
@MAIN.MAIN$IF_FALSE9
0;JMP
(MAIN.MAIN$IF_TRUE9)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 0
@SP
AM=M-1
D=M
@Main.0
M=D
(MAIN.MAIN$IF_FALSE9)
//PUSH STATIC 47
@Main.47
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 18
@Main.18
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 7
@Main.7
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 9
@Main.9
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.CANSEEFROM 4
@MAIN.MAINRetAddr2945
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.CANSEEFROM//call goto
0;JMP
(MAIN.MAINRetAddr2945)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 18
@Main.18
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 14
@SP
AM=M-1
D=M
@Main.14
M=D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 18
@Main.18
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 17
@SP
AM=M-1
D=M
@Main.17
M=D
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call LINEBUFFER.BEGIN 1
@MAIN.MAINRetAddr2949
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@LINEBUFFER.BEGIN//call goto
0;JMP
(MAIN.MAINRetAddr2949)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 49
@SP
AM=M-1
D=M
@Main.49
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 3
@SP
AM=M-1
D=M
@Main.3
M=D
(MAIN.MAIN$WHILE_EXP1)
//PUSH STATIC 3
@Main.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 14
@Main.14
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS2951
D;JLT
@LT_NOTLESS2951
D;JGE
(LT_LESS2951)
@SP
A=M-1
M=-1
@LT_END2951
0;JMP
(LT_NOTLESS2951)
@SP
A=M-1
M=0
@LT_END2951
0;JMP
(LT_END2951)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END1
@SP
AM=M-1
D=M
@MAIN.MAIN$WHILE_END1
D;JNE
//PUSH STATIC 3
@Main.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 17
@Main.17
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 48
@SP
AM=M-1
D=M
@Main.48
M=D
//PUSH STATIC 48
@Main.48
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.GETX 1
@MAIN.MAINRetAddr2954
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.GETX//call goto
0;JMP
(MAIN.MAINRetAddr2954)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS2957
D;JEQ
@EQ_NOTEQUALS2957
D;JNE
(EQ_EQUALS2957)
@SP
A=M-1
M=-1
@EQ_END2957
0;JMP
(EQ_NOTEQUALS2957)
@SP
A=M-1
M=0
@EQ_END2957
0;JMP
(EQ_END2957)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO IF_TRUE10
@SP
AM=M-1
D=M
@MAIN.MAIN$IF_TRUE10
D;JNE
//GOTO IF_FALSE10
@MAIN.MAIN$IF_FALSE10
0;JMP
(MAIN.MAIN$IF_TRUE10)
//PUSH STATIC 48
@Main.48
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.GETX 1
@MAIN.MAINRetAddr2959
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.GETX//call goto
0;JMP
(MAIN.MAINRetAddr2959)
//POP STATIC 7
@SP
AM=M-1
D=M
@Main.7
M=D
//PUSH STATIC 48
@Main.48
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.GETY 1
@MAIN.MAINRetAddr2961
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.GETY//call goto
0;JMP
(MAIN.MAINRetAddr2961)
//POP STATIC 9
@SP
AM=M-1
D=M
@Main.9
M=D
//Call MAIN.RENDERCUBE 0
@MAIN.MAINRetAddr2963
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MAIN.RENDERCUBE//call goto
0;JMP
(MAIN.MAINRetAddr2963)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.MAIN$IF_FALSE10)
//PUSH STATIC 48
@Main.48
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.DISPOSE 1
@MAIN.MAINRetAddr2965
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.DISPOSE//call goto
0;JMP
(MAIN.MAINRetAddr2965)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 3
@Main.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP STATIC 3
@SP
AM=M-1
D=M
@Main.3
M=D
//GOTO WHILE_EXP1
@MAIN.MAIN$WHILE_EXP1
0;JMP
(MAIN.MAIN$WHILE_END1)
//PUSH STATIC 17
@Main.17
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call ARRAY.DISPOSE 1
@MAIN.MAINRetAddr2968
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@ARRAY.DISPOSE//call goto
0;JMP
(MAIN.MAINRetAddr2968)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call LINEBUFFER.END 1
@MAIN.MAINRetAddr2970
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@LINEBUFFER.END//call goto
0;JMP
(MAIN.MAINRetAddr2970)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.CLEARSCREEN 2
@MAIN.MAINRetAddr2972
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.CLEARSCREEN//call goto
0;JMP
(MAIN.MAINRetAddr2972)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.DRAWBOUNDING 2
@MAIN.MAINRetAddr2974
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.DRAWBOUNDING//call goto
0;JMP
(MAIN.MAINRetAddr2974)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call LINEBUFFER.DRAWLINES 2
@MAIN.MAINRetAddr2976
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@LINEBUFFER.DRAWLINES//call goto
0;JMP
(MAIN.MAINRetAddr2976)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 49
@Main.49
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 51
@Main.51
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 52
@Main.52
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.INRANGE 3
@MAIN.MAINRetAddr2978
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.INRANGE//call goto
0;JMP
(MAIN.MAINRetAddr2978)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//IF-GOTO IF_TRUE11
@SP
AM=M-1
D=M
@MAIN.MAIN$IF_TRUE11
D;JNE
//GOTO IF_FALSE11
@MAIN.MAIN$IF_FALSE11
0;JMP
(MAIN.MAIN$IF_TRUE11)
//PUSH STATIC 51
@Main.51
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 52
@Main.52
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call SCREEN.DRAWCIRCLE 3
@MAIN.MAINRetAddr2981
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@SCREEN.DRAWCIRCLE//call goto
0;JMP
(MAIN.MAINRetAddr2981)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.MAIN$IF_FALSE11)
(MAIN.MAIN$IF_FALSE8)
//GOTO WHILE_EXP0
@MAIN.MAIN$WHILE_EXP0
0;JMP
(MAIN.MAIN$WHILE_END0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 3
@SP
AM=M-1
D=M
@Main.3
M=D
(MAIN.MAIN$WHILE_EXP2)
//PUSH STATIC 3
@Main.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 21
@21
D=A
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS2983
D;JLT
@LT_NOTLESS2983
D;JGE
(LT_LESS2983)
@SP
A=M-1
M=-1
@LT_END2983
0;JMP
(LT_NOTLESS2983)
@SP
A=M-1
M=0
@LT_END2983
0;JMP
(LT_END2983)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END2
@SP
AM=M-1
D=M
@MAIN.MAIN$WHILE_END2
D;JNE
//PUSH CONSTANT 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@MAIN.MAINRetAddr2985
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(MAIN.MAINRetAddr2985)
//PUSH CONSTANT 84
@84
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2987
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2987)
//PUSH CONSTANT 72
@72
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2989
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2989)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2991
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2991)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2993
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2993)
//PUSH CONSTANT 67
@67
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2995
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2995)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2997
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2997)
//PUSH CONSTANT 75
@75
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr2999
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr2999)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3001
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3001)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3003
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3003)
//PUSH CONSTANT 73
@73
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3005
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3005)
//PUSH CONSTANT 83
@83
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3007
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3007)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3009
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3009)
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3011
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3011)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3013
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3013)
//PUSH CONSTANT 76
@76
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3015
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3015)
//PUSH CONSTANT 73
@73
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3017
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3017)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3019
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3019)
//Call OUTPUT.PRINTSTRING 1
@MAIN.MAINRetAddr3021
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(MAIN.MAINRetAddr3021)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr3023
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr3023)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 3
@Main.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP STATIC 3
@SP
AM=M-1
D=M
@Main.3
M=D
//GOTO WHILE_EXP2
@MAIN.MAIN$WHILE_EXP2
0;JMP
(MAIN.MAIN$WHILE_END2)
//PUSH CONSTANT 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@MAIN.MAINRetAddr3026
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(MAIN.MAINRetAddr3026)
//PUSH CONSTANT 66
@66
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3028
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3028)
//PUSH CONSTANT 89
@89
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3030
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3030)
//PUSH CONSTANT 58
@58
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3032
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3032)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3034
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3034)
//PUSH CONSTANT 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3036
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3036)
//PUSH CONSTANT 73
@73
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3038
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3038)
//PUSH CONSTANT 67
@67
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3040
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3040)
//PUSH CONSTANT 72
@72
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3042
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3042)
//PUSH CONSTANT 73
@73
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3044
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3044)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3046
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3046)
//PUSH CONSTANT 44
@44
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3048
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3048)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3050
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3050)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3052
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3052)
//PUSH CONSTANT 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3054
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3054)
//PUSH CONSTANT 73
@73
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3056
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3056)
//PUSH CONSTANT 67
@67
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3058
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3058)
//PUSH CONSTANT 44
@44
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3060
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3060)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3062
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3062)
//PUSH CONSTANT 38
@38
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3064
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3064)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3066
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3066)
//PUSH CONSTANT 74
@74
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3068
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3068)
//PUSH CONSTANT 79
@79
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3070
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3070)
//PUSH CONSTANT 83
@83
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3072
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3072)
//PUSH CONSTANT 72
@72
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@MAIN.MAINRetAddr3074
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(MAIN.MAINRetAddr3074)
//Call OUTPUT.PRINTSTRING 1
@MAIN.MAINRetAddr3076
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(MAIN.MAINRetAddr3076)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@MAIN.MAINRetAddr3078
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(MAIN.MAINRetAddr3078)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function MAIN.RENDERCUBE
(MAIN.RENDERCUBE)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATIC 34
@Main.34
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@MAIN.RENDERCUBERetAddr3086
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3086)
//PUSH STATIC 7
@Main.7
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOFLOAT 2
@MAIN.RENDERCUBERetAddr3088
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOFLOAT//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3088)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 34
@Main.34
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@MAIN.RENDERCUBERetAddr3090
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3090)
//PUSH STATIC 34
@Main.34
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@MAIN.RENDERCUBERetAddr3092
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3092)
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@MAIN.RENDERCUBERetAddr3094
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3094)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 34
@Main.34
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@MAIN.RENDERCUBERetAddr3096
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3096)
//PUSH STATIC 9
@Main.9
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOFLOAT 2
@MAIN.RENDERCUBERetAddr3098
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOFLOAT//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3098)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 34
@Main.34
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@MAIN.RENDERCUBERetAddr3100
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3100)
//PUSH STATIC 34
@Main.34
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@MAIN.RENDERCUBERetAddr3102
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3102)
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@MAIN.RENDERCUBERetAddr3104
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3104)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 34
@Main.34
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@MAIN.RENDERCUBERetAddr3106
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3106)
//Call FLOAT.GETZERO 1
@MAIN.RENDERCUBERetAddr3108
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETZERO//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3108)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 35
@Main.35
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 34
@Main.34
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.COPY 2
@MAIN.RENDERCUBERetAddr3110
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.COPY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3110)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 35
@Main.35
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@MAIN.RENDERCUBERetAddr3112
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3112)
//PUSH STATIC 35
@Main.35
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@MAIN.RENDERCUBERetAddr3114
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3114)
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@MAIN.RENDERCUBERetAddr3116
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3116)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 36
@Main.36
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 35
@Main.35
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.COPY 2
@MAIN.RENDERCUBERetAddr3118
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.COPY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3118)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 36
@Main.36
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@MAIN.RENDERCUBERetAddr3120
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3120)
//PUSH STATIC 36
@Main.36
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@MAIN.RENDERCUBERetAddr3122
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3122)
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@MAIN.RENDERCUBERetAddr3124
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3124)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 37
@Main.37
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 34
@Main.34
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.COPY 2
@MAIN.RENDERCUBERetAddr3126
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.COPY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3126)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 37
@Main.37
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@MAIN.RENDERCUBERetAddr3128
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3128)
//PUSH STATIC 37
@Main.37
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@MAIN.RENDERCUBERetAddr3130
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3130)
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@MAIN.RENDERCUBERetAddr3132
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3132)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 38
@Main.38
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 34
@Main.34
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.COPY 2
@MAIN.RENDERCUBERetAddr3134
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.COPY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3134)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 38
@Main.38
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@MAIN.RENDERCUBERetAddr3136
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3136)
//PUSH STATIC 38
@Main.38
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@MAIN.RENDERCUBERetAddr3138
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3138)
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@MAIN.RENDERCUBERetAddr3140
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3140)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 39
@Main.39
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 35
@Main.35
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.COPY 2
@MAIN.RENDERCUBERetAddr3142
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.COPY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3142)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 39
@Main.39
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@MAIN.RENDERCUBERetAddr3144
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3144)
//PUSH STATIC 39
@Main.39
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@MAIN.RENDERCUBERetAddr3146
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3146)
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@MAIN.RENDERCUBERetAddr3148
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3148)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 40
@Main.40
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 36
@Main.36
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.COPY 2
@MAIN.RENDERCUBERetAddr3150
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.COPY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3150)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 40
@Main.40
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@MAIN.RENDERCUBERetAddr3152
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3152)
//PUSH STATIC 40
@Main.40
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@MAIN.RENDERCUBERetAddr3154
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3154)
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@MAIN.RENDERCUBERetAddr3156
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3156)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 41
@Main.41
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 37
@Main.37
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.COPY 2
@MAIN.RENDERCUBERetAddr3158
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.COPY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3158)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 41
@Main.41
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@MAIN.RENDERCUBERetAddr3160
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3160)
//PUSH STATIC 41
@Main.41
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@MAIN.RENDERCUBERetAddr3162
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3162)
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@MAIN.RENDERCUBERetAddr3164
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3164)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 7
@Main.7
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 47
@Main.47
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.GETGOALX 1
@MAIN.RENDERCUBERetAddr3166
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.GETGOALX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3166)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS3168
D;JEQ
@EQ_NOTEQUALS3168
D;JNE
(EQ_EQUALS3168)
@SP
A=M-1
M=-1
@EQ_END3168
0;JMP
(EQ_NOTEQUALS3168)
@SP
A=M-1
M=0
@EQ_END3168
0;JMP
(EQ_END3168)
//PUSH STATIC 9
@Main.9
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 47
@Main.47
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.GETGOALY 1
@MAIN.RENDERCUBERetAddr3169
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.GETGOALY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3169)
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS3171
D;JEQ
@EQ_NOTEQUALS3171
D;JNE
(EQ_EQUALS3171)
@SP
A=M-1
M=-1
@EQ_END3171
0;JMP
(EQ_NOTEQUALS3171)
@SP
A=M-1
M=0
@EQ_END3171
0;JMP
(EQ_END3171)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@MAIN.RENDERCUBE$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@MAIN.RENDERCUBE$IF_FALSE0
0;JMP
(MAIN.RENDERCUBE$IF_TRUE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@MAIN.RENDERCUBERetAddr3174
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3174)
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//Call FLOAT.SET 4
@MAIN.RENDERCUBERetAddr3177
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3177)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@MAIN.RENDERCUBERetAddr3179
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3179)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 32
@Main.32
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 34
@Main.34
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.COPY 2
@MAIN.RENDERCUBERetAddr3181
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.COPY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3181)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 32
@Main.32
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@MAIN.RENDERCUBERetAddr3183
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3183)
//PUSH STATIC 32
@Main.32
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@MAIN.RENDERCUBERetAddr3185
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3185)
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@MAIN.RENDERCUBERetAddr3187
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3187)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 32
@Main.32
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@MAIN.RENDERCUBERetAddr3189
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3189)
//PUSH STATIC 32
@Main.32
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@MAIN.RENDERCUBERetAddr3191
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3191)
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@MAIN.RENDERCUBERetAddr3193
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3193)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@MAIN.RENDERCUBERetAddr3195
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3195)
//PUSH CONSTANT 25
@25
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//Call FLOAT.SET 4
@MAIN.RENDERCUBERetAddr3198
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3198)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 30
@Main.30
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@MAIN.RENDERCUBERetAddr3200
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3200)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 32
@Main.32
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@MAIN.RENDERCUBERetAddr3202
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3202)
//PUSH STATIC 32
@Main.32
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@MAIN.RENDERCUBERetAddr3204
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3204)
//PUSH STATIC 20
@Main.20
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@MAIN.RENDERCUBERetAddr3206
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3206)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 32
@Main.32
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 32
@Main.32
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.V3DTO2D 4
@MAIN.RENDERCUBERetAddr3208
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.V3DTO2D//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3208)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 32
@Main.32
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.GETRENDER2DPOINT 4
@MAIN.RENDERCUBERetAddr3210
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.GETRENDER2DPOINT//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3210)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@MAIN.RENDERCUBERetAddr3212
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3212)
//POP STATIC 51
@SP
AM=M-1
D=M
@Main.51
M=D
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@MAIN.RENDERCUBERetAddr3214
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3214)
//POP STATIC 52
@SP
AM=M-1
D=M
@Main.52
M=D
(MAIN.RENDERCUBE$IF_FALSE0)
//PUSH STATIC 34
@Main.34
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 34
@Main.34
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.V3DTO2D 4
@MAIN.RENDERCUBERetAddr3216
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.V3DTO2D//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3216)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 34
@Main.34
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.GETRENDER2DPOINT 4
@MAIN.RENDERCUBERetAddr3218
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.GETRENDER2DPOINT//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3218)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@MAIN.RENDERCUBERetAddr3221
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3221)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@MAIN.RENDERCUBERetAddr3224
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3224)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATIC 35
@Main.35
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 35
@Main.35
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.V3DTO2D 4
@MAIN.RENDERCUBERetAddr3226
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.V3DTO2D//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3226)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 35
@Main.35
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.GETRENDER2DPOINT 4
@MAIN.RENDERCUBERetAddr3228
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.GETRENDER2DPOINT//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3228)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@MAIN.RENDERCUBERetAddr3231
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3231)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@MAIN.RENDERCUBERetAddr3234
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3234)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATIC 36
@Main.36
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 36
@Main.36
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.V3DTO2D 4
@MAIN.RENDERCUBERetAddr3236
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.V3DTO2D//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3236)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 36
@Main.36
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.GETRENDER2DPOINT 4
@MAIN.RENDERCUBERetAddr3238
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.GETRENDER2DPOINT//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3238)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@MAIN.RENDERCUBERetAddr3241
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3241)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@MAIN.RENDERCUBERetAddr3244
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3244)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATIC 37
@Main.37
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 37
@Main.37
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.V3DTO2D 4
@MAIN.RENDERCUBERetAddr3246
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.V3DTO2D//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3246)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 37
@Main.37
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.GETRENDER2DPOINT 4
@MAIN.RENDERCUBERetAddr3248
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.GETRENDER2DPOINT//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3248)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@MAIN.RENDERCUBERetAddr3251
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3251)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@MAIN.RENDERCUBERetAddr3254
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3254)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATIC 38
@Main.38
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 38
@Main.38
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.V3DTO2D 4
@MAIN.RENDERCUBERetAddr3256
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.V3DTO2D//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3256)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 38
@Main.38
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.GETRENDER2DPOINT 4
@MAIN.RENDERCUBERetAddr3258
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.GETRENDER2DPOINT//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3258)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@MAIN.RENDERCUBERetAddr3261
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3261)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@MAIN.RENDERCUBERetAddr3264
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3264)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATIC 39
@Main.39
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 39
@Main.39
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.V3DTO2D 4
@MAIN.RENDERCUBERetAddr3266
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.V3DTO2D//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3266)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 39
@Main.39
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.GETRENDER2DPOINT 4
@MAIN.RENDERCUBERetAddr3268
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.GETRENDER2DPOINT//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3268)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@MAIN.RENDERCUBERetAddr3271
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3271)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@MAIN.RENDERCUBERetAddr3274
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3274)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATIC 40
@Main.40
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 40
@Main.40
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.V3DTO2D 4
@MAIN.RENDERCUBERetAddr3276
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.V3DTO2D//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3276)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 40
@Main.40
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.GETRENDER2DPOINT 4
@MAIN.RENDERCUBERetAddr3278
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.GETRENDER2DPOINT//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3278)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@MAIN.RENDERCUBERetAddr3281
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3281)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 13
@13
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@MAIN.RENDERCUBERetAddr3284
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3284)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATIC 41
@Main.41
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 42
@Main.42
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 41
@Main.41
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.V3DTO2D 4
@MAIN.RENDERCUBERetAddr3286
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.V3DTO2D//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3286)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 41
@Main.41
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 43
@Main.43
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.GETRENDER2DPOINT 4
@MAIN.RENDERCUBERetAddr3288
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.GETRENDER2DPOINT//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3288)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@MAIN.RENDERCUBERetAddr3291
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3291)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@MAIN.RENDERCUBERetAddr3294
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3294)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATIC 47
@Main.47
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 16
@Main.16
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 7
@Main.7
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 9
@Main.9
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.GETWALLS 4
@MAIN.RENDERCUBERetAddr3296
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.GETWALLS//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3296)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//IF-GOTO IF_TRUE1
@SP
AM=M-1
D=M
@MAIN.RENDERCUBE$IF_TRUE1
D;JNE
//GOTO IF_FALSE1
@MAIN.RENDERCUBE$IF_FALSE1
0;JMP
(MAIN.RENDERCUBE$IF_TRUE1)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//POP STATIC 49
@SP
AM=M-1
D=M
@Main.49
M=D
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3301
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3301)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3305
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3305)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.RENDERLINE 4
@MAIN.RENDERCUBERetAddr3307
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.RENDERLINE//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3307)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3311
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3311)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3315
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3315)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.RENDERLINE 4
@MAIN.RENDERCUBERetAddr3317
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.RENDERLINE//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3317)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.RENDERCUBE$IF_FALSE1)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 16
@Main.16
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//IF-GOTO IF_TRUE2
@SP
AM=M-1
D=M
@MAIN.RENDERCUBE$IF_TRUE2
D;JNE
//GOTO IF_FALSE2
@MAIN.RENDERCUBE$IF_FALSE2
0;JMP
(MAIN.RENDERCUBE$IF_TRUE2)
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3322
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3322)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3326
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3326)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.RENDERLINE 4
@MAIN.RENDERCUBERetAddr3328
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.RENDERLINE//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3328)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3332
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3332)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3336
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3336)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.RENDERLINE 4
@MAIN.RENDERCUBERetAddr3338
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.RENDERLINE//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3338)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.RENDERCUBE$IF_FALSE2)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 16
@Main.16
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//IF-GOTO IF_TRUE3
@SP
AM=M-1
D=M
@MAIN.RENDERCUBE$IF_TRUE3
D;JNE
//GOTO IF_FALSE3
@MAIN.RENDERCUBE$IF_FALSE3
0;JMP
(MAIN.RENDERCUBE$IF_TRUE3)
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3343
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3343)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3347
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3347)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.RENDERLINE 4
@MAIN.RENDERCUBERetAddr3349
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.RENDERLINE//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3349)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3353
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3353)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 13
@13
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3357
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3357)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.RENDERLINE 4
@MAIN.RENDERCUBERetAddr3359
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.RENDERLINE//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3359)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.RENDERCUBE$IF_FALSE3)
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 16
@Main.16
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//IF-GOTO IF_TRUE4
@SP
AM=M-1
D=M
@MAIN.RENDERCUBE$IF_TRUE4
D;JNE
//GOTO IF_FALSE4
@MAIN.RENDERCUBE$IF_FALSE4
0;JMP
(MAIN.RENDERCUBE$IF_TRUE4)
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3364
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3364)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3368
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3368)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.RENDERLINE 4
@MAIN.RENDERCUBERetAddr3370
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.RENDERLINE//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3370)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 13
@13
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3374
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3374)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3378
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3378)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.RENDERLINE 4
@MAIN.RENDERCUBERetAddr3380
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.RENDERLINE//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3380)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.RENDERCUBE$IF_FALSE4)
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 16
@Main.16
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//IF-GOTO IF_TRUE5
@SP
AM=M-1
D=M
@MAIN.RENDERCUBE$IF_TRUE5
D;JNE
//GOTO IF_FALSE5
@MAIN.RENDERCUBE$IF_FALSE5
0;JMP
(MAIN.RENDERCUBE$IF_TRUE5)
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3385
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3385)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3389
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3389)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.RENDERLINE 4
@MAIN.RENDERCUBERetAddr3391
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.RENDERLINE//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3391)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3395
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3395)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3399
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3399)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.RENDERLINE 4
@MAIN.RENDERCUBERetAddr3401
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.RENDERLINE//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3401)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.RENDERCUBE$IF_FALSE5)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 16
@Main.16
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 16
@Main.16
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//OR
@SP
AM=M-1
D=M
A=A-1
M=D|M
//IF-GOTO IF_TRUE6
@SP
AM=M-1
D=M
@MAIN.RENDERCUBE$IF_TRUE6
D;JNE
//GOTO IF_FALSE6
@MAIN.RENDERCUBE$IF_FALSE6
0;JMP
(MAIN.RENDERCUBE$IF_TRUE6)
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3408
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3408)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3412
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3412)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.RENDERLINE 4
@MAIN.RENDERCUBERetAddr3414
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.RENDERLINE//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3414)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.RENDERCUBE$IF_FALSE6)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 16
@Main.16
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 16
@Main.16
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//OR
@SP
AM=M-1
D=M
A=A-1
M=D|M
//IF-GOTO IF_TRUE7
@SP
AM=M-1
D=M
@MAIN.RENDERCUBE$IF_TRUE7
D;JNE
//GOTO IF_FALSE7
@MAIN.RENDERCUBE$IF_FALSE7
0;JMP
(MAIN.RENDERCUBE$IF_TRUE7)
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3421
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3421)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 13
@13
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3425
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3425)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.RENDERLINE 4
@MAIN.RENDERCUBERetAddr3427
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.RENDERLINE//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3427)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.RENDERCUBE$IF_FALSE7)
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 16
@Main.16
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 16
@Main.16
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//OR
@SP
AM=M-1
D=M
A=A-1
M=D|M
//IF-GOTO IF_TRUE8
@SP
AM=M-1
D=M
@MAIN.RENDERCUBE$IF_TRUE8
D;JNE
//GOTO IF_FALSE8
@MAIN.RENDERCUBE$IF_FALSE8
0;JMP
(MAIN.RENDERCUBE$IF_TRUE8)
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3434
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3434)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3438
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3438)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.RENDERLINE 4
@MAIN.RENDERCUBERetAddr3440
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.RENDERLINE//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3440)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.RENDERCUBE$IF_FALSE8)
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 16
@Main.16
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 16
@Main.16
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//OR
@SP
AM=M-1
D=M
A=A-1
M=D|M
//IF-GOTO IF_TRUE9
@SP
AM=M-1
D=M
@MAIN.RENDERCUBE$IF_TRUE9
D;JNE
//GOTO IF_FALSE9
@MAIN.RENDERCUBE$IF_FALSE9
0;JMP
(MAIN.RENDERCUBE$IF_TRUE9)
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3447
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3447)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 15
@Main.15
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.SET 3
@MAIN.RENDERCUBERetAddr3451
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3451)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH STATIC 46
@Main.46
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 19
@Main.19
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 44
@Main.44
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 45
@Main.45
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.RENDERLINE 4
@MAIN.RENDERCUBERetAddr3453
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.RENDERLINE//call goto
0;JMP
(MAIN.RENDERCUBERetAddr3453)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(MAIN.RENDERCUBE$IF_FALSE9)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.NEW
(DISPLAY.NEW)
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.ALLOC 1
@DISPLAY.NEWRetAddr3461
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.ALLOC//call goto
0;JMP
(DISPLAY.NEWRetAddr3461)
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 1
@THIS
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.NEWRetAddr3463
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.NEWRetAddr3463)
//POP THIS 4
@THIS
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.NEWRetAddr3465
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.NEWRetAddr3465)
//POP THIS 5
@THIS
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP THIS 2
@THIS
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP THIS 3
@THIS
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.NEWRetAddr3469
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.NEWRetAddr3469)
//POP THIS 4
@THIS
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.NEWRetAddr3471
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.NEWRetAddr3471)
//POP THIS 5
@THIS
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.DRAWBOUNDING
(DISPLAY.DRAWBOUNDING)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS3479
D;JEQ
@EQ_NOTEQUALS3479
D;JNE
(EQ_EQUALS3479)
@SP
A=M-1
M=-1
@EQ_END3479
0;JMP
(EQ_NOTEQUALS3479)
@SP
A=M-1
M=0
@EQ_END3479
0;JMP
(EQ_END3479)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@DISPLAY.DRAWBOUNDING$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@DISPLAY.DRAWBOUNDING$IF_FALSE0
0;JMP
(DISPLAY.DRAWBOUNDING$IF_TRUE0)
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call SCREEN.DRAWLINE 4
@DISPLAY.DRAWBOUNDINGRetAddr3481
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@SCREEN.DRAWLINE//call goto
0;JMP
(DISPLAY.DRAWBOUNDINGRetAddr3481)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//Call SCREEN.DRAWLINE 4
@DISPLAY.DRAWBOUNDINGRetAddr3486
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@SCREEN.DRAWLINE//call goto
0;JMP
(DISPLAY.DRAWBOUNDINGRetAddr3486)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//Call SCREEN.DRAWLINE 4
@DISPLAY.DRAWBOUNDINGRetAddr3491
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@SCREEN.DRAWLINE//call goto
0;JMP
(DISPLAY.DRAWBOUNDINGRetAddr3491)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call SCREEN.DRAWLINE 4
@DISPLAY.DRAWBOUNDINGRetAddr3494
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@SCREEN.DRAWLINE//call goto
0;JMP
(DISPLAY.DRAWBOUNDINGRetAddr3494)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END0
@DISPLAY.DRAWBOUNDING$IF_END0
0;JMP
(DISPLAY.DRAWBOUNDING$IF_FALSE0)
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.SINGLELINE 5
@DISPLAY.DRAWBOUNDINGRetAddr3497
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.SINGLELINE//call goto
0;JMP
(DISPLAY.DRAWBOUNDINGRetAddr3497)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.SINGLELINE 5
@DISPLAY.DRAWBOUNDINGRetAddr3502
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.SINGLELINE//call goto
0;JMP
(DISPLAY.DRAWBOUNDINGRetAddr3502)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.SINGLELINE 5
@DISPLAY.DRAWBOUNDINGRetAddr3507
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.SINGLELINE//call goto
0;JMP
(DISPLAY.DRAWBOUNDINGRetAddr3507)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.SINGLELINE 5
@DISPLAY.DRAWBOUNDINGRetAddr3510
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.SINGLELINE//call goto
0;JMP
(DISPLAY.DRAWBOUNDINGRetAddr3510)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(DISPLAY.DRAWBOUNDING$IF_END0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.INRANGE
(DISPLAY.INRANGE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER3518
D;JGT
@GT_NOTGREATER3518
D;JLE
(GT_GREATER3518)
@SP
A=M-1
M=-1
@GT_END3518
0;JMP
(GT_NOTGREATER3518)
@SP
A=M-1
M=0
@GT_END3518
0;JMP
(GT_END3518)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS3520
D;JLT
@LT_NOTLESS3520
D;JGE
(LT_LESS3520)
@SP
A=M-1
M=-1
@LT_END3520
0;JMP
(LT_NOTLESS3520)
@SP
A=M-1
M=0
@LT_END3520
0;JMP
(LT_END3520)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER3522
D;JGT
@GT_NOTGREATER3522
D;JLE
(GT_GREATER3522)
@SP
A=M-1
M=-1
@GT_END3522
0;JMP
(GT_NOTGREATER3522)
@SP
A=M-1
M=0
@GT_END3522
0;JMP
(GT_END3522)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS3525
D;JLT
@LT_NOTLESS3525
D;JGE
(LT_LESS3525)
@SP
A=M-1
M=-1
@LT_END3525
0;JMP
(LT_NOTLESS3525)
@SP
A=M-1
M=0
@LT_END3525
0;JMP
(LT_END3525)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@DISPLAY.INRANGE$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@DISPLAY.INRANGE$IF_FALSE0
0;JMP
(DISPLAY.INRANGE$IF_TRUE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
(DISPLAY.INRANGE$IF_FALSE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.CLEARSCREEN
(DISPLAY.CLEARSCREEN)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS3540
D;JEQ
@EQ_NOTEQUALS3540
D;JNE
(EQ_EQUALS3540)
@SP
A=M-1
M=-1
@EQ_END3540
0;JMP
(EQ_NOTEQUALS3540)
@SP
A=M-1
M=0
@EQ_END3540
0;JMP
(EQ_END3540)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@DISPLAY.CLEARSCREEN$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@DISPLAY.CLEARSCREEN$IF_FALSE0
0;JMP
(DISPLAY.CLEARSCREEN$IF_TRUE0)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.FILLSCREEN 1
@DISPLAY.CLEARSCREENRetAddr3541
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.FILLSCREEN//call goto
0;JMP
(DISPLAY.CLEARSCREENRetAddr3541)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END0
@DISPLAY.CLEARSCREEN$IF_END0
0;JMP
(DISPLAY.CLEARSCREEN$IF_FALSE0)
//Call SCREEN.CLEARSCREEN 0
@DISPLAY.CLEARSCREENRetAddr3543
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@SCREEN.CLEARSCREEN//call goto
0;JMP
(DISPLAY.CLEARSCREENRetAddr3543)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(DISPLAY.CLEARSCREEN$IF_END0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.CLEAR
(DISPLAY.CLEAR)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.FILLRECT 5
@DISPLAY.CLEARRetAddr3557
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.FILLRECT//call goto
0;JMP
(DISPLAY.CLEARRetAddr3557)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.GETRENDER2DPOINT
(DISPLAY.GETRENDER2DPOINT)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@DISPLAY.GETRENDER2DPOINTRetAddr3565
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(DISPLAY.GETRENDER2DPOINTRetAddr3565)
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.GETCUT 1
@DISPLAY.GETRENDER2DPOINTRetAddr3567
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.GETCUT//call goto
0;JMP
(DISPLAY.GETRENDER2DPOINTRetAddr3567)
//Call FLOAT.LT 2
@DISPLAY.GETRENDER2DPOINTRetAddr3569
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.LT//call goto
0;JMP
(DISPLAY.GETRENDER2DPOINTRetAddr3569)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@DISPLAY.GETRENDER2DPOINT$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@DISPLAY.GETRENDER2DPOINT$IF_FALSE0
0;JMP
(DISPLAY.GETRENDER2DPOINT$IF_TRUE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
(DISPLAY.GETRENDER2DPOINT$IF_FALSE0)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETRENDER2DPOINTRetAddr3577
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETRENDER2DPOINTRetAddr3577)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call FLOAT.TOINT 2
@DISPLAY.GETRENDER2DPOINTRetAddr3580
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOINT//call goto
0;JMP
(DISPLAY.GETRENDER2DPOINTRetAddr3580)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETRENDER2DPOINTRetAddr3582
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETRENDER2DPOINTRetAddr3582)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call FLOAT.TOINT 2
@DISPLAY.GETRENDER2DPOINTRetAddr3585
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOINT//call goto
0;JMP
(DISPLAY.GETRENDER2DPOINTRetAddr3585)
//Call POINT.SET 3
@DISPLAY.GETRENDER2DPOINTRetAddr3587
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SET//call goto
0;JMP
(DISPLAY.GETRENDER2DPOINTRetAddr3587)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.OFFSETPOINT 2
@DISPLAY.GETRENDER2DPOINTRetAddr3589
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.OFFSETPOINT//call goto
0;JMP
(DISPLAY.GETRENDER2DPOINTRetAddr3589)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.OFFSETPOINT
(DISPLAY.OFFSETPOINT)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@DISPLAY.OFFSETPOINTRetAddr3598
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(DISPLAY.OFFSETPOINTRetAddr3598)
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.OFFSETPOINTRetAddr3601
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.OFFSETPOINTRetAddr3601)
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//Call POINT.SETX 2
@DISPLAY.OFFSETPOINTRetAddr3604
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SETX//call goto
0;JMP
(DISPLAY.OFFSETPOINTRetAddr3604)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@DISPLAY.OFFSETPOINTRetAddr3606
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(DISPLAY.OFFSETPOINTRetAddr3606)
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.OFFSETPOINTRetAddr3609
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.OFFSETPOINTRetAddr3609)
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//Call POINT.SETY 2
@DISPLAY.OFFSETPOINTRetAddr3612
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SETY//call goto
0;JMP
(DISPLAY.OFFSETPOINTRetAddr3612)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.RENDERLINE
(DISPLAY.RENDERLINE)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@DISPLAY.RENDERLINERetAddr3620
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3620)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@DISPLAY.RENDERLINERetAddr3622
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3622)
//Call POINT.NEW 2
@DISPLAY.RENDERLINERetAddr3624
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.NEW//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3624)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@DISPLAY.RENDERLINERetAddr3626
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3626)
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@DISPLAY.RENDERLINERetAddr3628
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3628)
//Call POINT.NEW 2
@DISPLAY.RENDERLINERetAddr3630
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.NEW//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3630)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.ISINTERRIOR 2
@DISPLAY.RENDERLINERetAddr3632
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.ISINTERRIOR//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3632)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.ISINTERRIOR 2
@DISPLAY.RENDERLINERetAddr3634
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.ISINTERRIOR//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3634)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@DISPLAY.RENDERLINE$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@DISPLAY.RENDERLINE$IF_FALSE0
0;JMP
(DISPLAY.RENDERLINE$IF_TRUE0)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@DISPLAY.RENDERLINERetAddr3637
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3637)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@DISPLAY.RENDERLINERetAddr3639
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3639)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@DISPLAY.RENDERLINERetAddr3641
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3641)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@DISPLAY.RENDERLINERetAddr3643
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3643)
//Call LINEBUFFER.ADDLINE 5
@DISPLAY.RENDERLINERetAddr3645
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@LINEBUFFER.ADDLINE//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3645)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END0
@DISPLAY.RENDERLINE$IF_END0
0;JMP
(DISPLAY.RENDERLINE$IF_FALSE0)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//OR
@SP
AM=M-1
D=M
A=A-1
M=D|M
//IF-GOTO IF_TRUE1
@SP
AM=M-1
D=M
@DISPLAY.RENDERLINE$IF_TRUE1
D;JNE
//GOTO IF_FALSE1
@DISPLAY.RENDERLINE$IF_FALSE1
0;JMP
(DISPLAY.RENDERLINE$IF_TRUE1)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//IF-GOTO IF_TRUE2
@SP
AM=M-1
D=M
@DISPLAY.RENDERLINE$IF_TRUE2
D;JNE
//GOTO IF_FALSE2
@DISPLAY.RENDERLINE$IF_FALSE2
0;JMP
(DISPLAY.RENDERLINE$IF_TRUE2)
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.GETBORDERINTERSECTION 4
@DISPLAY.RENDERLINERetAddr3648
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.GETBORDERINTERSECTION//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3648)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO IF_END2
@DISPLAY.RENDERLINE$IF_END2
0;JMP
(DISPLAY.RENDERLINE$IF_FALSE2)
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.GETBORDERINTERSECTION 4
@DISPLAY.RENDERLINERetAddr3650
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.GETBORDERINTERSECTION//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3650)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.RENDERLINE$IF_END2)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//IF-GOTO IF_TRUE3
@SP
AM=M-1
D=M
@DISPLAY.RENDERLINE$IF_TRUE3
D;JNE
//GOTO IF_FALSE3
@DISPLAY.RENDERLINE$IF_FALSE3
0;JMP
(DISPLAY.RENDERLINE$IF_TRUE3)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@DISPLAY.RENDERLINERetAddr3652
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3652)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@DISPLAY.RENDERLINERetAddr3654
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3654)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@DISPLAY.RENDERLINERetAddr3656
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3656)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@DISPLAY.RENDERLINERetAddr3658
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3658)
//Call LINEBUFFER.ADDLINE 5
@DISPLAY.RENDERLINERetAddr3660
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@LINEBUFFER.ADDLINE//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3660)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END3
@DISPLAY.RENDERLINE$IF_END3
0;JMP
(DISPLAY.RENDERLINE$IF_FALSE3)
(DISPLAY.RENDERLINE$IF_END3)
(DISPLAY.RENDERLINE$IF_FALSE1)
(DISPLAY.RENDERLINE$IF_END0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.DISPOSE 1
@DISPLAY.RENDERLINERetAddr3662
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.DISPOSE//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3662)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.DISPOSE 1
@DISPLAY.RENDERLINERetAddr3664
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.DISPOSE//call goto
0;JMP
(DISPLAY.RENDERLINERetAddr3664)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.ISINTERRIOR
(DISPLAY.ISINTERRIOR)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@DISPLAY.ISINTERRIORRetAddr3672
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(DISPLAY.ISINTERRIORRetAddr3672)
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER3674
D;JGT
@GT_NOTGREATER3674
D;JLE
(GT_GREATER3674)
@SP
A=M-1
M=-1
@GT_END3674
0;JMP
(GT_NOTGREATER3674)
@SP
A=M-1
M=0
@GT_END3674
0;JMP
(GT_END3674)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@DISPLAY.ISINTERRIORRetAddr3675
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(DISPLAY.ISINTERRIORRetAddr3675)
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS3678
D;JLT
@LT_NOTLESS3678
D;JGE
(LT_LESS3678)
@SP
A=M-1
M=-1
@LT_END3678
0;JMP
(LT_NOTLESS3678)
@SP
A=M-1
M=0
@LT_END3678
0;JMP
(LT_END3678)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@DISPLAY.ISINTERRIOR$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@DISPLAY.ISINTERRIOR$IF_FALSE0
0;JMP
(DISPLAY.ISINTERRIOR$IF_TRUE0)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@DISPLAY.ISINTERRIORRetAddr3680
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(DISPLAY.ISINTERRIORRetAddr3680)
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER3682
D;JGT
@GT_NOTGREATER3682
D;JLE
(GT_GREATER3682)
@SP
A=M-1
M=-1
@GT_END3682
0;JMP
(GT_NOTGREATER3682)
@SP
A=M-1
M=0
@GT_END3682
0;JMP
(GT_END3682)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@DISPLAY.ISINTERRIORRetAddr3683
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(DISPLAY.ISINTERRIORRetAddr3683)
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS3686
D;JLT
@LT_NOTLESS3686
D;JGE
(LT_LESS3686)
@SP
A=M-1
M=-1
@LT_END3686
0;JMP
(LT_NOTLESS3686)
@SP
A=M-1
M=0
@LT_END3686
0;JMP
(LT_END3686)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//IF-GOTO IF_TRUE1
@SP
AM=M-1
D=M
@DISPLAY.ISINTERRIOR$IF_TRUE1
D;JNE
//GOTO IF_FALSE1
@DISPLAY.ISINTERRIOR$IF_FALSE1
0;JMP
(DISPLAY.ISINTERRIOR$IF_TRUE1)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
(DISPLAY.ISINTERRIOR$IF_FALSE1)
(DISPLAY.ISINTERRIOR$IF_FALSE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.GETBORDERINTERSECTION
(DISPLAY.GETBORDERINTERSECTION)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//Call FLOAT.GETPOS 0
@DISPLAY.GETBORDERINTERSECTIONRetAddr3701
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3701)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@DISPLAY.GETBORDERINTERSECTIONRetAddr3703
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3703)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@DISPLAY.GETBORDERINTERSECTIONRetAddr3705
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3705)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@DISPLAY.GETBORDERINTERSECTIONRetAddr3707
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3707)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@DISPLAY.GETBORDERINTERSECTIONRetAddr3709
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3709)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@DISPLAY.GETBORDERINTERSECTIONRetAddr3711
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3711)
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@DISPLAY.GETBORDERINTERSECTIONRetAddr3713
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3713)
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@DISPLAY.GETBORDERINTERSECTIONRetAddr3715
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3715)
//POP LOCAL 6
@LCL
A=M
D=A
@6
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@DISPLAY.GETBORDERINTERSECTIONRetAddr3717
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3717)
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3719
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3719)
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOFLOAT 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3721
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOFLOAT//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3721)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3723
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3723)
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOFLOAT 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3725
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOFLOAT//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3725)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 9
@LCL
A=M
D=A
@9
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3728
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3728)
//PUSH LOCAL 9
@LCL
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOFLOAT 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3730
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOFLOAT//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3730)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3732
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3732)
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOFLOAT 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3734
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOFLOAT//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3734)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 9
@LCL
A=M
D=A
@9
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3737
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3737)
//PUSH LOCAL 9
@LCL
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOFLOAT 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3739
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOFLOAT//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3739)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 9
@LCL
A=M
D=A
@9
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3742
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3742)
//PUSH LOCAL 9
@LCL
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOFLOAT 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3744
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOFLOAT//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3744)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3746
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3746)
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOFLOAT 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3748
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOFLOAT//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3748)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 9
@LCL
A=M
D=A
@9
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3751
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3751)
//PUSH LOCAL 9
@LCL
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.TOFLOAT 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3753
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOFLOAT//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3753)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3755
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3755)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3757
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3757)
//Call FLOAT.TOFLOAT 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3759
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOFLOAT//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3759)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3761
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3761)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3763
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3763)
//Call FLOAT.TOFLOAT 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3765
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOFLOAT//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3765)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3767
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3767)
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3769
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3769)
//Call FLOAT.TOFLOAT 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3771
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOFLOAT//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3771)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3773
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3773)
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call POINT.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3775
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3775)
//Call FLOAT.TOFLOAT 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3777
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOFLOAT//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3777)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3779
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3779)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3781
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3781)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3783
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3783)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3785
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3785)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3787
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3787)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3789
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3789)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3791
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3791)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3793
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3793)
//Call DISPLAY.GETLINEINT2DSEG 9
@DISPLAY.GETBORDERINTERSECTIONRetAddr3795
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.GETLINEINT2DSEG//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3795)
//POP LOCAL 8
@LCL
A=M
D=A
@8
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@DISPLAY.GETBORDERINTERSECTION$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@DISPLAY.GETBORDERINTERSECTION$IF_FALSE0
0;JMP
(DISPLAY.GETBORDERINTERSECTION$IF_TRUE0)
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3798
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3798)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3800
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3800)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3802
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3802)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3804
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3804)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3806
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3806)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3808
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3808)
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3810
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3810)
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3812
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3812)
//Call DISPLAY.GETLINEINT2DSEG 9
@DISPLAY.GETBORDERINTERSECTIONRetAddr3814
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.GETLINEINT2DSEG//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3814)
//POP LOCAL 8
@LCL
A=M
D=A
@8
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//IF-GOTO IF_TRUE1
@SP
AM=M-1
D=M
@DISPLAY.GETBORDERINTERSECTION$IF_TRUE1
D;JNE
//GOTO IF_FALSE1
@DISPLAY.GETBORDERINTERSECTION$IF_FALSE1
0;JMP
(DISPLAY.GETBORDERINTERSECTION$IF_TRUE1)
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3817
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3817)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3819
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3819)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3821
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3821)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3823
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3823)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3825
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3825)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3827
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3827)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3829
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3829)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3831
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3831)
//Call DISPLAY.GETLINEINT2DSEG 9
@DISPLAY.GETBORDERINTERSECTIONRetAddr3833
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.GETLINEINT2DSEG//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3833)
//POP LOCAL 8
@LCL
A=M
D=A
@8
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//IF-GOTO IF_TRUE2
@SP
AM=M-1
D=M
@DISPLAY.GETBORDERINTERSECTION$IF_TRUE2
D;JNE
//GOTO IF_FALSE2
@DISPLAY.GETBORDERINTERSECTION$IF_FALSE2
0;JMP
(DISPLAY.GETBORDERINTERSECTION$IF_TRUE2)
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3836
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3836)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3838
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3838)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3840
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3840)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3842
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3842)
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3844
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3844)
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3846
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3846)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3848
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3848)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3850
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3850)
//Call DISPLAY.GETLINEINT2DSEG 9
@DISPLAY.GETBORDERINTERSECTIONRetAddr3852
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.GETLINEINT2DSEG//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3852)
//POP LOCAL 8
@LCL
A=M
D=A
@8
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.GETBORDERINTERSECTION$IF_FALSE2)
(DISPLAY.GETBORDERINTERSECTION$IF_FALSE1)
(DISPLAY.GETBORDERINTERSECTION$IF_FALSE0)
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//IF-GOTO IF_TRUE3
@SP
AM=M-1
D=M
@DISPLAY.GETBORDERINTERSECTION$IF_TRUE3
D;JNE
//GOTO IF_FALSE3
@DISPLAY.GETBORDERINTERSECTION$IF_FALSE3
0;JMP
(DISPLAY.GETBORDERINTERSECTION$IF_TRUE3)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3854
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3854)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call FLOAT.TOINT 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3857
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOINT//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3857)
//Call POINT.SETX 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3859
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SETX//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3859)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3861
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3861)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call FLOAT.TOINT 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3864
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.TOINT//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3864)
//Call POINT.SETY 2
@DISPLAY.GETBORDERINTERSECTIONRetAddr3866
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@POINT.SETY//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3866)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(DISPLAY.GETBORDERINTERSECTION$IF_FALSE3)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.DISPOSE 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3868
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.DISPOSE//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3868)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.DISPOSE 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3870
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.DISPOSE//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3870)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.DISPOSE 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3872
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.DISPOSE//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3872)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.DISPOSE 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3874
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.DISPOSE//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3874)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.DISPOSE 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3876
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.DISPOSE//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3876)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.DISPOSE 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3878
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.DISPOSE//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3878)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.DISPOSE 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3880
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.DISPOSE//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3880)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@DISPLAY.GETBORDERINTERSECTIONRetAddr3882
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(DISPLAY.GETBORDERINTERSECTIONRetAddr3882)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.GETLINEINT2DSEG
(DISPLAY.GETLINEINT2DSEG)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@DISPLAY.GETLINEINT2DSEGRetAddr3890
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3890)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@DISPLAY.GETLINEINT2DSEGRetAddr3892
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3892)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@DISPLAY.GETLINEINT2DSEGRetAddr3894
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3894)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@DISPLAY.GETLINEINT2DSEGRetAddr3896
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3896)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@DISPLAY.GETLINEINT2DSEGRetAddr3898
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3898)
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@DISPLAY.GETLINEINT2DSEGRetAddr3900
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3900)
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@DISPLAY.GETLINEINT2DSEGRetAddr3902
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3902)
//POP LOCAL 6
@LCL
A=M
D=A
@6
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@DISPLAY.GETLINEINT2DSEGRetAddr3904
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3904)
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@DISPLAY.GETLINEINT2DSEGRetAddr3906
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3906)
//POP LOCAL 8
@LCL
A=M
D=A
@8
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call FLOAT.GETPOS 0
@DISPLAY.GETLINEINT2DSEGRetAddr3908
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3908)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@DISPLAY.GETLINEINT2DSEGRetAddr3910
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3910)
//POP LOCAL 9
@LCL
A=M
D=A
@9
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 5
@ARG
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@DISPLAY.GETLINEINT2DSEGRetAddr3912
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3912)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 7
@ARG
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 5
@ARG
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@DISPLAY.GETLINEINT2DSEGRetAddr3914
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3914)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@DISPLAY.GETLINEINT2DSEGRetAddr3916
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3916)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 6
@ARG
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@DISPLAY.GETLINEINT2DSEGRetAddr3918
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3918)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 8
@ARG
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 6
@ARG
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@DISPLAY.GETLINEINT2DSEGRetAddr3920
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3920)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 4
@ARG
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@DISPLAY.GETLINEINT2DSEGRetAddr3922
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3922)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@DISPLAY.GETLINEINT2DSEGRetAddr3924
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3924)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@DISPLAY.GETLINEINT2DSEGRetAddr3926
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3926)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@DISPLAY.GETLINEINT2DSEGRetAddr3928
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3928)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@DISPLAY.GETLINEINT2DSEGRetAddr3930
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3930)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@DISPLAY.GETLINEINT2DSEGRetAddr3932
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3932)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@DISPLAY.GETLINEINT2DSEGRetAddr3934
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3934)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 9
@LCL
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.EQ 2
@DISPLAY.GETLINEINT2DSEGRetAddr3936
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.EQ//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3936)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@DISPLAY.GETLINEINT2DSEG$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@DISPLAY.GETLINEINT2DSEG$IF_FALSE0
0;JMP
(DISPLAY.GETLINEINT2DSEG$IF_TRUE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 10
@LCL
A=M
D=A
@10
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO IF_END0
@DISPLAY.GETLINEINT2DSEG$IF_END0
0;JMP
(DISPLAY.GETLINEINT2DSEG$IF_FALSE0)
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@DISPLAY.GETLINEINT2DSEGRetAddr3938
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3938)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@DISPLAY.GETLINEINT2DSEGRetAddr3940
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3940)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@DISPLAY.GETLINEINT2DSEGRetAddr3942
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3942)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@DISPLAY.GETLINEINT2DSEGRetAddr3944
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3944)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@DISPLAY.GETLINEINT2DSEGRetAddr3946
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3946)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@DISPLAY.GETLINEINT2DSEGRetAddr3948
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3948)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@DISPLAY.GETLINEINT2DSEGRetAddr3950
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3950)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 9
@LCL
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.EQ 2
@DISPLAY.GETLINEINT2DSEGRetAddr3952
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.EQ//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3952)
//IF-GOTO IF_TRUE1
@SP
AM=M-1
D=M
@DISPLAY.GETLINEINT2DSEG$IF_TRUE1
D;JNE
//GOTO IF_FALSE1
@DISPLAY.GETLINEINT2DSEG$IF_FALSE1
0;JMP
(DISPLAY.GETLINEINT2DSEG$IF_TRUE1)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 10
@LCL
A=M
D=A
@10
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO IF_END1
@DISPLAY.GETLINEINT2DSEG$IF_END1
0;JMP
(DISPLAY.GETLINEINT2DSEG$IF_FALSE1)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@DISPLAY.GETLINEINT2DSEGRetAddr3954
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3954)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@DISPLAY.GETLINEINT2DSEGRetAddr3956
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3956)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SET 4
@DISPLAY.GETLINEINT2DSEGRetAddr3958
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SET//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3958)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 9
@LCL
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GT 2
@DISPLAY.GETLINEINT2DSEGRetAddr3960
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GT//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3960)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.LE 2
@DISPLAY.GETLINEINT2DSEGRetAddr3962
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.LE//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3962)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 9
@LCL
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GT 2
@DISPLAY.GETLINEINT2DSEGRetAddr3965
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GT//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3965)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.LE 2
@DISPLAY.GETLINEINT2DSEGRetAddr3968
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.LE//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3968)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//IF-GOTO IF_TRUE2
@SP
AM=M-1
D=M
@DISPLAY.GETLINEINT2DSEG$IF_TRUE2
D;JNE
//GOTO IF_FALSE2
@DISPLAY.GETLINEINT2DSEG$IF_FALSE2
0;JMP
(DISPLAY.GETLINEINT2DSEG$IF_TRUE2)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@DISPLAY.GETLINEINT2DSEGRetAddr3971
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3971)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@DISPLAY.GETLINEINT2DSEGRetAddr3973
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3973)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.SETX 2
@DISPLAY.GETLINEINT2DSEGRetAddr3975
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.SETX//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3975)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@DISPLAY.GETLINEINT2DSEGRetAddr3977
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3977)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@DISPLAY.GETLINEINT2DSEGRetAddr3979
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3979)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.SETY 2
@DISPLAY.GETLINEINT2DSEGRetAddr3981
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.SETY//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3981)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//POP LOCAL 10
@LCL
A=M
D=A
@10
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.GETLINEINT2DSEG$IF_FALSE2)
(DISPLAY.GETLINEINT2DSEG$IF_END1)
(DISPLAY.GETLINEINT2DSEG$IF_END0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@DISPLAY.GETLINEINT2DSEGRetAddr3984
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3984)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@DISPLAY.GETLINEINT2DSEGRetAddr3986
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3986)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@DISPLAY.GETLINEINT2DSEGRetAddr3988
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3988)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@DISPLAY.GETLINEINT2DSEGRetAddr3990
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3990)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@DISPLAY.GETLINEINT2DSEGRetAddr3992
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3992)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@DISPLAY.GETLINEINT2DSEGRetAddr3994
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3994)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@DISPLAY.GETLINEINT2DSEGRetAddr3996
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3996)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@DISPLAY.GETLINEINT2DSEGRetAddr3998
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr3998)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@DISPLAY.GETLINEINT2DSEGRetAddr4000
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr4000)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 9
@LCL
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@DISPLAY.GETLINEINT2DSEGRetAddr4002
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(DISPLAY.GETLINEINT2DSEGRetAddr4002)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 10
@LCL
D=M
@10
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.PRINT
(DISPLAY.PRINT)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@DISPLAY.PRINTRetAddr4010
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(DISPLAY.PRINTRetAddr4010)
//PUSH CONSTANT 99
@99
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4012
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4012)
//PUSH CONSTANT 101
@101
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4014
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4014)
//PUSH CONSTANT 110
@110
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4016
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4016)
//PUSH CONSTANT 116
@116
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4018
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4018)
//PUSH CONSTANT 101
@101
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4020
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4020)
//PUSH CONSTANT 114
@114
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4022
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4022)
//PUSH CONSTANT 58
@58
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4024
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4024)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4026
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4026)
//Call OUTPUT.PRINTSTRING 1
@DISPLAY.PRINTRetAddr4028
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(DISPLAY.PRINTRetAddr4028)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call OUTPUT.PRINTINT 1
@DISPLAY.PRINTRetAddr4030
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTINT//call goto
0;JMP
(DISPLAY.PRINTRetAddr4030)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@DISPLAY.PRINTRetAddr4032
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(DISPLAY.PRINTRetAddr4032)
//PUSH CONSTANT 44
@44
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4034
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4034)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4036
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4036)
//Call OUTPUT.PRINTSTRING 1
@DISPLAY.PRINTRetAddr4038
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(DISPLAY.PRINTRetAddr4038)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call OUTPUT.PRINTINT 1
@DISPLAY.PRINTRetAddr4040
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTINT//call goto
0;JMP
(DISPLAY.PRINTRetAddr4040)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@DISPLAY.PRINTRetAddr4042
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(DISPLAY.PRINTRetAddr4042)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4044
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4044)
//PUSH CONSTANT 58
@58
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4046
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4046)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4048
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4048)
//PUSH CONSTANT 116
@116
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4050
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4050)
//PUSH CONSTANT 111
@111
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4052
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4052)
//PUSH CONSTANT 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4054
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4054)
//PUSH CONSTANT 76
@76
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4056
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4056)
//PUSH CONSTANT 101
@101
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4058
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4058)
//PUSH CONSTANT 102
@102
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4060
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4060)
//PUSH CONSTANT 116
@116
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4062
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4062)
//PUSH CONSTANT 58
@58
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4064
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4064)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4066
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4066)
//Call OUTPUT.PRINTSTRING 1
@DISPLAY.PRINTRetAddr4068
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(DISPLAY.PRINTRetAddr4068)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call OUTPUT.PRINTINT 1
@DISPLAY.PRINTRetAddr4070
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTINT//call goto
0;JMP
(DISPLAY.PRINTRetAddr4070)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@DISPLAY.PRINTRetAddr4072
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(DISPLAY.PRINTRetAddr4072)
//PUSH CONSTANT 44
@44
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4074
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4074)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4076
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4076)
//Call OUTPUT.PRINTSTRING 1
@DISPLAY.PRINTRetAddr4078
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(DISPLAY.PRINTRetAddr4078)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call OUTPUT.PRINTINT 1
@DISPLAY.PRINTRetAddr4080
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTINT//call goto
0;JMP
(DISPLAY.PRINTRetAddr4080)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@DISPLAY.PRINTRetAddr4082
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(DISPLAY.PRINTRetAddr4082)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4084
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4084)
//PUSH CONSTANT 58
@58
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4086
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4086)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4088
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4088)
//PUSH CONSTANT 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4090
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4090)
//PUSH CONSTANT 105
@105
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4092
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4092)
//PUSH CONSTANT 109
@109
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4094
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4094)
//PUSH CONSTANT 58
@58
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4096
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4096)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4098
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4098)
//Call OUTPUT.PRINTSTRING 1
@DISPLAY.PRINTRetAddr4100
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(DISPLAY.PRINTRetAddr4100)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 4
@THIS
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call OUTPUT.PRINTINT 1
@DISPLAY.PRINTRetAddr4102
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTINT//call goto
0;JMP
(DISPLAY.PRINTRetAddr4102)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@DISPLAY.PRINTRetAddr4104
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(DISPLAY.PRINTRetAddr4104)
//PUSH CONSTANT 44
@44
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4106
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4106)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@DISPLAY.PRINTRetAddr4108
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(DISPLAY.PRINTRetAddr4108)
//Call OUTPUT.PRINTSTRING 1
@DISPLAY.PRINTRetAddr4110
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(DISPLAY.PRINTRetAddr4110)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 5
@THIS
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call OUTPUT.PRINTINT 1
@DISPLAY.PRINTRetAddr4112
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTINT//call goto
0;JMP
(DISPLAY.PRINTRetAddr4112)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//Call OUTPUT.PRINTLN 0
@DISPLAY.PRINTRetAddr4114
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(DISPLAY.PRINTRetAddr4114)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.DISPOSE
(DISPLAY.DISPOSE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.DEALLOC 1
@DISPLAY.DISPOSERetAddr4122
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.DEALLOC//call goto
0;JMP
(DISPLAY.DISPOSERetAddr4122)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.INIT
(DISPLAY.INIT)
//PUSH CONSTANT 512
@512
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 0
@SP
AM=M-1
D=M
@Display.0
M=D
//PUSH CONSTANT 256
@256
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 1
@SP
AM=M-1
D=M
@Display.1
M=D
//PUSH CONSTANT 16384
@16384
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 2
@SP
AM=M-1
D=M
@Display.2
M=D
//PUSH CONSTANT 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 3
@SP
AM=M-1
D=M
@Display.3
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.V3DTO2D
(DISPLAY.V3DTO2D)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@DISPLAY.V3DTO2DRetAddr4136
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4136)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@DISPLAY.V3DTO2DRetAddr4138
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4138)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call FLOAT.GETPOS 0
@DISPLAY.V3DTO2DRetAddr4140
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4140)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@DISPLAY.V3DTO2DRetAddr4142
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4142)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@DISPLAY.V3DTO2DRetAddr4144
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4144)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.MULV3D 3
@DISPLAY.V3DTO2DRetAddr4146
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.MULV3D//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4146)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.GETSCALE 1
@DISPLAY.V3DTO2DRetAddr4148
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.GETSCALE//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4148)
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.GETLENS 1
@DISPLAY.V3DTO2DRetAddr4150
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.GETLENS//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4150)
//Call FLOAT.MUL 3
@DISPLAY.V3DTO2DRetAddr4152
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4152)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call CAM3D.GETLENS 1
@DISPLAY.V3DTO2DRetAddr4154
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@CAM3D.GETLENS//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4154)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@DISPLAY.V3DTO2DRetAddr4156
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4156)
//Call FLOAT.ADD 3
@DISPLAY.V3DTO2DRetAddr4158
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4158)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@DISPLAY.V3DTO2DRetAddr4160
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4160)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GT 2
@DISPLAY.V3DTO2DRetAddr4162
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GT//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4162)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@DISPLAY.V3DTO2D$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@DISPLAY.V3DTO2D$IF_FALSE0
0;JMP
(DISPLAY.V3DTO2D$IF_TRUE0)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEGATE 2
@DISPLAY.V3DTO2DRetAddr4164
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEGATE//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4164)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(DISPLAY.V3DTO2D$IF_FALSE0)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@DISPLAY.V3DTO2DRetAddr4166
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4166)
//Call FLOAT.MUL 3
@DISPLAY.V3DTO2DRetAddr4168
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4168)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.SETX 2
@DISPLAY.V3DTO2DRetAddr4170
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.SETX//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4170)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@DISPLAY.V3DTO2DRetAddr4172
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4172)
//Call FLOAT.MUL 3
@DISPLAY.V3DTO2DRetAddr4174
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4174)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.SETY 2
@DISPLAY.V3DTO2DRetAddr4176
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.SETY//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4176)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.COPY 2
@DISPLAY.V3DTO2DRetAddr4178
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.COPY//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4178)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.DISPOSE 1
@DISPLAY.V3DTO2DRetAddr4180
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.DISPOSE//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4180)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@DISPLAY.V3DTO2DRetAddr4182
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4182)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@DISPLAY.V3DTO2DRetAddr4184
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4184)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@DISPLAY.V3DTO2DRetAddr4186
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(DISPLAY.V3DTO2DRetAddr4186)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.PIXELTOADDRESS
(DISPLAY.PIXELTOADDRESS)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 0
@Display.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 3
@Display.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.PIXELTOADDRESSRetAddr4194
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.PIXELTOADDRESSRetAddr4194)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.PIXELTOADDRESSRetAddr4196
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.PIXELTOADDRESSRetAddr4196)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 3
@Display.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.PIXELTOADDRESSRetAddr4198
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.PIXELTOADDRESSRetAddr4198)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 2
@Display.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.COLORPIXEL
(DISPLAY.COLORPIXEL)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.PIXELTOADDRESS 2
@DISPLAY.COLORPIXELRetAddr4208
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.PIXELTOADDRESS//call goto
0;JMP
(DISPLAY.COLORPIXELRetAddr4208)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.PEEK 1
@DISPLAY.COLORPIXELRetAddr4210
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.PEEK//call goto
0;JMP
(DISPLAY.COLORPIXELRetAddr4210)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATIC 0
@Display.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 3
@Display.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.COLORPIXELRetAddr4212
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.COLORPIXELRetAddr4212)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 3
@Display.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.COLORPIXELRetAddr4214
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.COLORPIXELRetAddr4214)
//Call MATH.ABS 1
@DISPLAY.COLORPIXELRetAddr4216
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.ABS//call goto
0;JMP
(DISPLAY.COLORPIXELRetAddr4216)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 3
@Display.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.COLORPIXELRetAddr4218
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.COLORPIXELRetAddr4218)
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.COLORPIXEL$WHILE_EXP0)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4221
D;JGT
@GT_NOTGREATER4221
D;JLE
(GT_GREATER4221)
@SP
A=M-1
M=-1
@GT_END4221
0;JMP
(GT_NOTGREATER4221)
@SP
A=M-1
M=0
@GT_END4221
0;JMP
(GT_END4221)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@DISPLAY.COLORPIXEL$WHILE_END0
D;JNE
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@DISPLAY.COLORPIXEL$WHILE_EXP0
0;JMP
(DISPLAY.COLORPIXEL$WHILE_END0)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS4225
D;JEQ
@EQ_NOTEQUALS4225
D;JNE
(EQ_EQUALS4225)
@SP
A=M-1
M=-1
@EQ_END4225
0;JMP
(EQ_NOTEQUALS4225)
@SP
A=M-1
M=0
@EQ_END4225
0;JMP
(EQ_END4225)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@DISPLAY.COLORPIXEL$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@DISPLAY.COLORPIXEL$IF_FALSE0
0;JMP
(DISPLAY.COLORPIXEL$IF_TRUE0)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//OR
@SP
AM=M-1
D=M
A=A-1
M=D|M
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO IF_END0
@DISPLAY.COLORPIXEL$IF_END0
0;JMP
(DISPLAY.COLORPIXEL$IF_FALSE0)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.COLORPIXEL$IF_END0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.POKE 2
@DISPLAY.COLORPIXELRetAddr4230
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.POKE//call goto
0;JMP
(DISPLAY.COLORPIXELRetAddr4230)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.FILLSCREEN
(DISPLAY.FILLSCREEN)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 2
@Display.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATIC 0
@Display.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 3
@Display.3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.FILLSCREENRetAddr4238
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.FILLSCREENRetAddr4238)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 1
@Display.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.FILLSCREENRetAddr4240
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.FILLSCREENRetAddr4240)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS4243
D;JEQ
@EQ_NOTEQUALS4243
D;JNE
(EQ_EQUALS4243)
@SP
A=M-1
M=-1
@EQ_END4243
0;JMP
(EQ_NOTEQUALS4243)
@SP
A=M-1
M=0
@EQ_END4243
0;JMP
(EQ_END4243)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@DISPLAY.FILLSCREEN$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@DISPLAY.FILLSCREEN$IF_FALSE0
0;JMP
(DISPLAY.FILLSCREEN$IF_TRUE0)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.FILLSCREEN$IF_FALSE0)
(DISPLAY.FILLSCREEN$WHILE_EXP0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS4246
D;JLT
@LT_NOTLESS4246
D;JGE
(LT_LESS4246)
@SP
A=M-1
M=-1
@LT_END4246
0;JMP
(LT_NOTLESS4246)
@SP
A=M-1
M=0
@LT_END4246
0;JMP
(LT_END4246)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@DISPLAY.FILLSCREEN$WHILE_END0
D;JNE
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.POKE 2
@DISPLAY.FILLSCREENRetAddr4248
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.POKE//call goto
0;JMP
(DISPLAY.FILLSCREENRetAddr4248)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@DISPLAY.FILLSCREEN$WHILE_EXP0
0;JMP
(DISPLAY.FILLSCREEN$WHILE_END0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.FILLCIRCLE
(DISPLAY.FILLCIRCLE)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.FILLCIRCLE$WHILE_EXP0)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4261
D;JGT
@GT_NOTGREATER4261
D;JLE
(GT_GREATER4261)
@SP
A=M-1
M=-1
@GT_END4261
0;JMP
(GT_NOTGREATER4261)
@SP
A=M-1
M=0
@GT_END4261
0;JMP
(GT_END4261)
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@DISPLAY.FILLCIRCLE$WHILE_END0
D;JNE
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.FILLCIRCLE$WHILE_EXP1)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4264
D;JGT
@GT_NOTGREATER4264
D;JLE
(GT_GREATER4264)
@SP
A=M-1
M=-1
@GT_END4264
0;JMP
(GT_NOTGREATER4264)
@SP
A=M-1
M=0
@GT_END4264
0;JMP
(GT_END4264)
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END1
@SP
AM=M-1
D=M
@DISPLAY.FILLCIRCLE$WHILE_END1
D;JNE
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.FILLCIRCLERetAddr4268
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.FILLCIRCLERetAddr4268)
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 8
@LCL
A=M
D=A
@8
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.FILLCIRCLERetAddr4271
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.FILLCIRCLERetAddr4271)
//POP LOCAL 8
@LCL
A=M
D=A
@8
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 8
@LCL
A=M
D=A
@8
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.SQRT 1
@DISPLAY.FILLCIRCLERetAddr4274
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.SQRT//call goto
0;JMP
(DISPLAY.FILLCIRCLERetAddr4274)
//POP LOCAL 6
@LCL
A=M
D=A
@6
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS4276
D;JLT
@LT_NOTLESS4276
D;JGE
(LT_LESS4276)
@SP
A=M-1
M=-1
@LT_END4276
0;JMP
(LT_NOTLESS4276)
@SP
A=M-1
M=0
@LT_END4276
0;JMP
(LT_END4276)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@DISPLAY.FILLCIRCLE$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@DISPLAY.FILLCIRCLE$IF_FALSE0
0;JMP
(DISPLAY.FILLCIRCLE$IF_TRUE0)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.COLORPIXEL 3
@DISPLAY.FILLCIRCLERetAddr4277
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.COLORPIXEL//call goto
0;JMP
(DISPLAY.FILLCIRCLERetAddr4277)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(DISPLAY.FILLCIRCLE$IF_FALSE0)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP1
@DISPLAY.FILLCIRCLE$WHILE_EXP1
0;JMP
(DISPLAY.FILLCIRCLE$WHILE_END1)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@DISPLAY.FILLCIRCLE$WHILE_EXP0
0;JMP
(DISPLAY.FILLCIRCLE$WHILE_END0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.FILLRECT
(DISPLAY.FILLRECT)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MIN 2
@DISPLAY.FILLRECTRetAddr4287
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MIN//call goto
0;JMP
(DISPLAY.FILLRECTRetAddr4287)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MIN 2
@DISPLAY.FILLRECTRetAddr4289
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MIN//call goto
0;JMP
(DISPLAY.FILLRECTRetAddr4289)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MAX 2
@DISPLAY.FILLRECTRetAddr4291
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MAX//call goto
0;JMP
(DISPLAY.FILLRECTRetAddr4291)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MAX 2
@DISPLAY.FILLRECTRetAddr4293
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MAX//call goto
0;JMP
(DISPLAY.FILLRECTRetAddr4293)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.FILLRECT$WHILE_EXP0)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4295
D;JGT
@GT_NOTGREATER4295
D;JLE
(GT_GREATER4295)
@SP
A=M-1
M=-1
@GT_END4295
0;JMP
(GT_NOTGREATER4295)
@SP
A=M-1
M=0
@GT_END4295
0;JMP
(GT_END4295)
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@DISPLAY.FILLRECT$WHILE_END0
D;JNE
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.FILLRECT$WHILE_EXP1)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4298
D;JGT
@GT_NOTGREATER4298
D;JLE
(GT_GREATER4298)
@SP
A=M-1
M=-1
@GT_END4298
0;JMP
(GT_NOTGREATER4298)
@SP
A=M-1
M=0
@GT_END4298
0;JMP
(GT_END4298)
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END1
@SP
AM=M-1
D=M
@DISPLAY.FILLRECT$WHILE_END1
D;JNE
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 4
@ARG
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.COLORPIXEL 3
@DISPLAY.FILLRECTRetAddr4301
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.COLORPIXEL//call goto
0;JMP
(DISPLAY.FILLRECTRetAddr4301)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP1
@DISPLAY.FILLRECT$WHILE_EXP1
0;JMP
(DISPLAY.FILLRECT$WHILE_END1)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@DISPLAY.FILLRECT$WHILE_EXP0
0;JMP
(DISPLAY.FILLRECT$WHILE_END0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.FILLTRI
(DISPLAY.FILLTRI)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 16
@LCL
A=M
D=A
@16
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 16
@LCL
D=M
@16
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//POP LOCAL 17
@LCL
A=M
D=A
@17
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 4
@ARG
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MIN 2
@DISPLAY.FILLTRIRetAddr4312
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MIN//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4312)
//Call MATH.MIN 2
@DISPLAY.FILLTRIRetAddr4314
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MIN//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4314)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 5
@ARG
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MIN 2
@DISPLAY.FILLTRIRetAddr4316
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MIN//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4316)
//Call MATH.MIN 2
@DISPLAY.FILLTRIRetAddr4318
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MIN//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4318)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 4
@ARG
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MAX 2
@DISPLAY.FILLTRIRetAddr4320
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MAX//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4320)
//Call MATH.MAX 2
@DISPLAY.FILLTRIRetAddr4322
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MAX//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4322)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 5
@ARG
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MAX 2
@DISPLAY.FILLTRIRetAddr4324
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MAX//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4324)
//Call MATH.MAX 2
@DISPLAY.FILLTRIRetAddr4326
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MAX//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4326)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.FILLTRI$WHILE_EXP0)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4328
D;JGT
@GT_NOTGREATER4328
D;JLE
(GT_GREATER4328)
@SP
A=M-1
M=-1
@GT_END4328
0;JMP
(GT_NOTGREATER4328)
@SP
A=M-1
M=0
@GT_END4328
0;JMP
(GT_END4328)
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@DISPLAY.FILLTRI$WHILE_END0
D;JNE
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.FILLTRI$WHILE_EXP1)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4331
D;JGT
@GT_NOTGREATER4331
D;JLE
(GT_GREATER4331)
@SP
A=M-1
M=-1
@GT_END4331
0;JMP
(GT_NOTGREATER4331)
@SP
A=M-1
M=0
@GT_END4331
0;JMP
(GT_END4331)
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END1
@SP
AM=M-1
D=M
@DISPLAY.FILLTRI$WHILE_END1
D;JNE
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 9
@LCL
A=M
D=A
@9
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 12
@LCL
A=M
D=A
@12
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 10
@LCL
A=M
D=A
@10
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 13
@LCL
A=M
D=A
@13
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 4
@ARG
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 11
@LCL
A=M
D=A
@11
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 5
@ARG
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 14
@LCL
A=M
D=A
@14
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 9
@LCL
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 13
@LCL
D=M
@13
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.FILLTRIRetAddr4340
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4340)
//PUSH CONSTANT 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.FILLTRIRetAddr4342
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4342)
//POP LOCAL 6
@LCL
A=M
D=A
@6
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 12
@LCL
D=M
@12
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 10
@LCL
D=M
@10
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.FILLTRIRetAddr4344
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4344)
//PUSH CONSTANT 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.FILLTRIRetAddr4346
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4346)
//POP LOCAL 15
@LCL
A=M
D=A
@15
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 15
@LCL
D=M
@15
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 6
@LCL
A=M
D=A
@6
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 10
@LCL
D=M
@10
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 14
@LCL
D=M
@14
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.FILLTRIRetAddr4349
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4349)
//PUSH CONSTANT 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.FILLTRIRetAddr4351
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4351)
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 13
@LCL
D=M
@13
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 11
@LCL
D=M
@11
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.FILLTRIRetAddr4353
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4353)
//PUSH CONSTANT 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.FILLTRIRetAddr4355
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4355)
//POP LOCAL 15
@LCL
A=M
D=A
@15
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 15
@LCL
D=M
@15
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 11
@LCL
D=M
@11
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 12
@LCL
D=M
@12
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.FILLTRIRetAddr4358
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4358)
//PUSH CONSTANT 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.FILLTRIRetAddr4360
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4360)
//POP LOCAL 8
@LCL
A=M
D=A
@8
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 14
@LCL
D=M
@14
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 9
@LCL
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.FILLTRIRetAddr4362
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4362)
//PUSH CONSTANT 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.FILLTRIRetAddr4364
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4364)
//POP LOCAL 15
@LCL
A=M
D=A
@15
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 15
@LCL
D=M
@15
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 8
@LCL
A=M
D=A
@8
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 17
@LCL
D=M
@17
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4367
D;JGT
@GT_NOTGREATER4367
D;JLE
(GT_GREATER4367)
@SP
A=M-1
M=-1
@GT_END4367
0;JMP
(GT_NOTGREATER4367)
@SP
A=M-1
M=0
@GT_END4367
0;JMP
(GT_END4367)
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 17
@LCL
D=M
@17
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4368
D;JGT
@GT_NOTGREATER4368
D;JLE
(GT_GREATER4368)
@SP
A=M-1
M=-1
@GT_END4368
0;JMP
(GT_NOTGREATER4368)
@SP
A=M-1
M=0
@GT_END4368
0;JMP
(GT_END4368)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 17
@LCL
D=M
@17
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4370
D;JGT
@GT_NOTGREATER4370
D;JLE
(GT_GREATER4370)
@SP
A=M-1
M=-1
@GT_END4370
0;JMP
(GT_NOTGREATER4370)
@SP
A=M-1
M=0
@GT_END4370
0;JMP
(GT_END4370)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 16
@LCL
D=M
@16
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS4372
D;JLT
@LT_NOTLESS4372
D;JGE
(LT_LESS4372)
@SP
A=M-1
M=-1
@LT_END4372
0;JMP
(LT_NOTLESS4372)
@SP
A=M-1
M=0
@LT_END4372
0;JMP
(LT_END4372)
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 16
@LCL
D=M
@16
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS4373
D;JLT
@LT_NOTLESS4373
D;JGE
(LT_LESS4373)
@SP
A=M-1
M=-1
@LT_END4373
0;JMP
(LT_NOTLESS4373)
@SP
A=M-1
M=0
@LT_END4373
0;JMP
(LT_END4373)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 16
@LCL
D=M
@16
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS4375
D;JLT
@LT_NOTLESS4375
D;JGE
(LT_LESS4375)
@SP
A=M-1
M=-1
@LT_END4375
0;JMP
(LT_NOTLESS4375)
@SP
A=M-1
M=0
@LT_END4375
0;JMP
(LT_END4375)
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//OR
@SP
AM=M-1
D=M
A=A-1
M=D|M
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@DISPLAY.FILLTRI$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@DISPLAY.FILLTRI$IF_FALSE0
0;JMP
(DISPLAY.FILLTRI$IF_TRUE0)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 6
@ARG
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.COLORPIXEL 3
@DISPLAY.FILLTRIRetAddr4378
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.COLORPIXEL//call goto
0;JMP
(DISPLAY.FILLTRIRetAddr4378)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(DISPLAY.FILLTRI$IF_FALSE0)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP1
@DISPLAY.FILLTRI$WHILE_EXP1
0;JMP
(DISPLAY.FILLTRI$WHILE_END1)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@DISPLAY.FILLTRI$WHILE_EXP0
0;JMP
(DISPLAY.FILLTRI$WHILE_END0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function DISPLAY.SINGLELINE
(DISPLAY.SINGLELINE)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS4390
D;JEQ
@EQ_NOTEQUALS4390
D;JNE
(EQ_EQUALS4390)
@SP
A=M-1
M=-1
@EQ_END4390
0;JMP
(EQ_NOTEQUALS4390)
@SP
A=M-1
M=0
@EQ_END4390
0;JMP
(EQ_END4390)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@DISPLAY.SINGLELINE$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@DISPLAY.SINGLELINE$IF_FALSE0
0;JMP
(DISPLAY.SINGLELINE$IF_TRUE0)
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO IF_END0
@DISPLAY.SINGLELINE$IF_END0
0;JMP
(DISPLAY.SINGLELINE$IF_FALSE0)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@DISPLAY.SINGLELINERetAddr4391
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4391)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.SINGLELINE$IF_END0)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.ABS 1
@DISPLAY.SINGLELINERetAddr4393
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.ABS//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4393)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS4395
D;JLT
@LT_NOTLESS4395
D;JGE
(LT_LESS4395)
@SP
A=M-1
M=-1
@LT_END4395
0;JMP
(LT_NOTLESS4395)
@SP
A=M-1
M=0
@LT_END4395
0;JMP
(LT_END4395)
//IF-GOTO IF_TRUE1
@SP
AM=M-1
D=M
@DISPLAY.SINGLELINE$IF_TRUE1
D;JNE
//GOTO IF_FALSE1
@DISPLAY.SINGLELINE$IF_FALSE1
0;JMP
(DISPLAY.SINGLELINE$IF_TRUE1)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS4396
D;JLT
@LT_NOTLESS4396
D;JGE
(LT_LESS4396)
@SP
A=M-1
M=-1
@LT_END4396
0;JMP
(LT_NOTLESS4396)
@SP
A=M-1
M=0
@LT_END4396
0;JMP
(LT_END4396)
//IF-GOTO IF_TRUE2
@SP
AM=M-1
D=M
@DISPLAY.SINGLELINE$IF_TRUE2
D;JNE
//GOTO IF_FALSE2
@DISPLAY.SINGLELINE$IF_FALSE2
0;JMP
(DISPLAY.SINGLELINE$IF_TRUE2)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP ARGUMENT 2
@ARG
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP ARGUMENT 3
@ARG
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP ARGUMENT 1
@ARG
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.SINGLELINE$IF_FALSE2)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.SINGLELINERetAddr4399
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4399)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.SINGLELINERetAddr4401
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4401)
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 6
@LCL
A=M
D=A
@6
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4404
D;JGT
@GT_NOTGREATER4404
D;JLE
(GT_GREATER4404)
@SP
A=M-1
M=-1
@GT_END4404
0;JMP
(GT_NOTGREATER4404)
@SP
A=M-1
M=0
@GT_END4404
0;JMP
(GT_END4404)
//IF-GOTO IF_TRUE3
@SP
AM=M-1
D=M
@DISPLAY.SINGLELINE$IF_TRUE3
D;JNE
//GOTO IF_FALSE3
@DISPLAY.SINGLELINE$IF_FALSE3
0;JMP
(DISPLAY.SINGLELINE$IF_TRUE3)
(DISPLAY.SINGLELINE$WHILE_EXP0)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4405
D;JGT
@GT_NOTGREATER4405
D;JLE
(GT_GREATER4405)
@SP
A=M-1
M=-1
@GT_END4405
0;JMP
(GT_NOTGREATER4405)
@SP
A=M-1
M=0
@GT_END4405
0;JMP
(GT_END4405)
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@DISPLAY.SINGLELINE$WHILE_END0
D;JNE
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 4
@ARG
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.COLORPIXEL 3
@DISPLAY.SINGLELINERetAddr4408
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.COLORPIXEL//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4408)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.SINGLELINERetAddr4410
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4410)
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.SINGLELINERetAddr4412
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4412)
//POP LOCAL 8
@LCL
A=M
D=A
@8
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4416
D;JGT
@GT_NOTGREATER4416
D;JLE
(GT_GREATER4416)
@SP
A=M-1
M=-1
@GT_END4416
0;JMP
(GT_NOTGREATER4416)
@SP
A=M-1
M=0
@GT_END4416
0;JMP
(GT_END4416)
//IF-GOTO IF_TRUE4
@SP
AM=M-1
D=M
@DISPLAY.SINGLELINE$IF_TRUE4
D;JNE
//GOTO IF_FALSE4
@DISPLAY.SINGLELINE$IF_FALSE4
0;JMP
(DISPLAY.SINGLELINE$IF_TRUE4)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 6
@LCL
A=M
D=A
@6
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.SINGLELINE$IF_FALSE4)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@DISPLAY.SINGLELINE$WHILE_EXP0
0;JMP
(DISPLAY.SINGLELINE$WHILE_END0)
//GOTO IF_END3
@DISPLAY.SINGLELINE$IF_END3
0;JMP
(DISPLAY.SINGLELINE$IF_FALSE3)
(DISPLAY.SINGLELINE$WHILE_EXP1)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4419
D;JGT
@GT_NOTGREATER4419
D;JLE
(GT_GREATER4419)
@SP
A=M-1
M=-1
@GT_END4419
0;JMP
(GT_NOTGREATER4419)
@SP
A=M-1
M=0
@GT_END4419
0;JMP
(GT_END4419)
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END1
@SP
AM=M-1
D=M
@DISPLAY.SINGLELINE$WHILE_END1
D;JNE
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 4
@ARG
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.COLORPIXEL 3
@DISPLAY.SINGLELINERetAddr4422
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.COLORPIXEL//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4422)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.SINGLELINERetAddr4424
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4424)
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.SINGLELINERetAddr4426
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4426)
//POP LOCAL 8
@LCL
A=M
D=A
@8
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS4430
D;JLT
@LT_NOTLESS4430
D;JGE
(LT_LESS4430)
@SP
A=M-1
M=-1
@LT_END4430
0;JMP
(LT_NOTLESS4430)
@SP
A=M-1
M=0
@LT_END4430
0;JMP
(LT_END4430)
//IF-GOTO IF_TRUE5
@SP
AM=M-1
D=M
@DISPLAY.SINGLELINE$IF_TRUE5
D;JNE
//GOTO IF_FALSE5
@DISPLAY.SINGLELINE$IF_FALSE5
0;JMP
(DISPLAY.SINGLELINE$IF_TRUE5)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 6
@LCL
A=M
D=A
@6
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.SINGLELINE$IF_FALSE5)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP1
@DISPLAY.SINGLELINE$WHILE_EXP1
0;JMP
(DISPLAY.SINGLELINE$WHILE_END1)
(DISPLAY.SINGLELINE$IF_END3)
//GOTO IF_END1
@DISPLAY.SINGLELINE$IF_END1
0;JMP
(DISPLAY.SINGLELINE$IF_FALSE1)
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS4433
D;JLT
@LT_NOTLESS4433
D;JGE
(LT_LESS4433)
@SP
A=M-1
M=-1
@LT_END4433
0;JMP
(LT_NOTLESS4433)
@SP
A=M-1
M=0
@LT_END4433
0;JMP
(LT_END4433)
//IF-GOTO IF_TRUE6
@SP
AM=M-1
D=M
@DISPLAY.SINGLELINE$IF_TRUE6
D;JNE
//GOTO IF_FALSE6
@DISPLAY.SINGLELINE$IF_FALSE6
0;JMP
(DISPLAY.SINGLELINE$IF_TRUE6)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP ARGUMENT 2
@ARG
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP ARGUMENT 3
@ARG
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP ARGUMENT 1
@ARG
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.SINGLELINE$IF_FALSE6)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.SINGLELINERetAddr4436
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4436)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.SINGLELINERetAddr4438
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4438)
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 6
@LCL
A=M
D=A
@6
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4440
D;JGT
@GT_NOTGREATER4440
D;JLE
(GT_GREATER4440)
@SP
A=M-1
M=-1
@GT_END4440
0;JMP
(GT_NOTGREATER4440)
@SP
A=M-1
M=0
@GT_END4440
0;JMP
(GT_END4440)
//IF-GOTO IF_TRUE7
@SP
AM=M-1
D=M
@DISPLAY.SINGLELINE$IF_TRUE7
D;JNE
//GOTO IF_FALSE7
@DISPLAY.SINGLELINE$IF_FALSE7
0;JMP
(DISPLAY.SINGLELINE$IF_TRUE7)
(DISPLAY.SINGLELINE$WHILE_EXP2)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4441
D;JGT
@GT_NOTGREATER4441
D;JLE
(GT_GREATER4441)
@SP
A=M-1
M=-1
@GT_END4441
0;JMP
(GT_NOTGREATER4441)
@SP
A=M-1
M=0
@GT_END4441
0;JMP
(GT_END4441)
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END2
@SP
AM=M-1
D=M
@DISPLAY.SINGLELINE$WHILE_END2
D;JNE
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 4
@ARG
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.COLORPIXEL 3
@DISPLAY.SINGLELINERetAddr4444
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.COLORPIXEL//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4444)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.SINGLELINERetAddr4446
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4446)
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.SINGLELINERetAddr4448
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4448)
//POP LOCAL 8
@LCL
A=M
D=A
@8
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS4452
D;JLT
@LT_NOTLESS4452
D;JGE
(LT_LESS4452)
@SP
A=M-1
M=-1
@LT_END4452
0;JMP
(LT_NOTLESS4452)
@SP
A=M-1
M=0
@LT_END4452
0;JMP
(LT_END4452)
//IF-GOTO IF_TRUE8
@SP
AM=M-1
D=M
@DISPLAY.SINGLELINE$IF_TRUE8
D;JNE
//GOTO IF_FALSE8
@DISPLAY.SINGLELINE$IF_FALSE8
0;JMP
(DISPLAY.SINGLELINE$IF_TRUE8)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.SINGLELINE$IF_FALSE8)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 6
@LCL
A=M
D=A
@6
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP2
@DISPLAY.SINGLELINE$WHILE_EXP2
0;JMP
(DISPLAY.SINGLELINE$WHILE_END2)
//GOTO IF_END7
@DISPLAY.SINGLELINE$IF_END7
0;JMP
(DISPLAY.SINGLELINE$IF_FALSE7)
(DISPLAY.SINGLELINE$WHILE_EXP3)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4455
D;JGT
@GT_NOTGREATER4455
D;JLE
(GT_GREATER4455)
@SP
A=M-1
M=-1
@GT_END4455
0;JMP
(GT_NOTGREATER4455)
@SP
A=M-1
M=0
@GT_END4455
0;JMP
(GT_END4455)
//NOT
@SP
A=M-1
M=!M
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END3
@SP
AM=M-1
D=M
@DISPLAY.SINGLELINE$WHILE_END3
D;JNE
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 4
@ARG
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.COLORPIXEL 3
@DISPLAY.SINGLELINERetAddr4458
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.COLORPIXEL//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4458)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.SINGLELINERetAddr4460
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4460)
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@DISPLAY.SINGLELINERetAddr4462
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(DISPLAY.SINGLELINERetAddr4462)
//POP LOCAL 8
@LCL
A=M
D=A
@8
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 8
@LCL
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 7
@LCL
A=M
D=A
@7
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 7
@LCL
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//GT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@GT_GREATER4466
D;JGT
@GT_NOTGREATER4466
D;JLE
(GT_GREATER4466)
@SP
A=M-1
M=-1
@GT_END4466
0;JMP
(GT_NOTGREATER4466)
@SP
A=M-1
M=0
@GT_END4466
0;JMP
(GT_END4466)
//IF-GOTO IF_TRUE9
@SP
AM=M-1
D=M
@DISPLAY.SINGLELINE$IF_TRUE9
D;JNE
//GOTO IF_FALSE9
@DISPLAY.SINGLELINE$IF_FALSE9
0;JMP
(DISPLAY.SINGLELINE$IF_TRUE9)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(DISPLAY.SINGLELINE$IF_FALSE9)
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 6
@LCL
A=M
D=A
@6
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP3
@DISPLAY.SINGLELINE$WHILE_EXP3
0;JMP
(DISPLAY.SINGLELINE$WHILE_END3)
(DISPLAY.SINGLELINE$IF_END7)
(DISPLAY.SINGLELINE$IF_END1)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function POINT.NEW
(POINT.NEW)
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.ALLOC 1
@POINT.NEWRetAddr4475
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.ALLOC//call goto
0;JMP
(POINT.NEWRetAddr4475)
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 1
@THIS
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function POINT.SET
(POINT.SET)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 1
@THIS
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function POINT.GETX
(POINT.GETX)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function POINT.GETY
(POINT.GETY)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function POINT.SETX
(POINT.SETX)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function POINT.SETY
(POINT.SETY)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 1
@THIS
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function POINT.DISPOSE
(POINT.DISPOSE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.DEALLOC 1
@POINT.DISPOSERetAddr4513
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.DEALLOC//call goto
0;JMP
(POINT.DISPOSERetAddr4513)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function POINT.INIT
(POINT.INIT)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.NEW
(M4D.NEW)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.ALLOC 1
@M4D.NEWRetAddr4527
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.ALLOC//call goto
0;JMP
(M4D.NEWRetAddr4527)
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH STATIC 0
@M4D.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call ARRAY.NEW 1
@M4D.NEWRetAddr4529
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@ARRAY.NEW//call goto
0;JMP
(M4D.NEWRetAddr4529)
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(M4D.NEW$WHILE_EXP0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 0
@M4D.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS4531
D;JLT
@LT_NOTLESS4531
D;JGE
(LT_LESS4531)
@SP
A=M-1
M=-1
@LT_END4531
0;JMP
(LT_NOTLESS4531)
@SP
A=M-1
M=0
@LT_END4531
0;JMP
(LT_END4531)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@M4D.NEW$WHILE_END0
D;JNE
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@M4D.NEWRetAddr4534
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(M4D.NEWRetAddr4534)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@M4D.NEW$WHILE_EXP0
0;JMP
(M4D.NEW$WHILE_END0)
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.IDENTITY 1
@M4D.NEWRetAddr4537
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.IDENTITY//call goto
0;JMP
(M4D.NEWRetAddr4537)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.SET
(M4D.SET)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.SETRetAddr4545
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.SETRetAddr4545)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.SETRetAddr4547
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.SETRetAddr4547)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.SETRetAddr4549
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.SETRetAddr4549)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 4
@ARG
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.SETRetAddr4551
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.SETRetAddr4551)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 5
@ARG
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.SETRetAddr4553
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.SETRetAddr4553)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 6
@ARG
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.SETRetAddr4555
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.SETRetAddr4555)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 7
@ARG
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.SETRetAddr4557
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.SETRetAddr4557)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 8
@ARG
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.SETRetAddr4559
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.SETRetAddr4559)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 9
@ARG
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.SETRetAddr4561
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.SETRetAddr4561)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 10
@ARG
D=M
@10
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.SETRetAddr4563
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.SETRetAddr4563)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 11
@ARG
D=M
@11
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.SETRetAddr4565
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.SETRetAddr4565)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 12
@ARG
D=M
@12
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.SETRetAddr4567
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.SETRetAddr4567)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.SETI
(M4D.SETI)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@M4D.SETIRetAddr4576
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(M4D.SETIRetAddr4576)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.GETI
(M4D.GETI)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.PRINT
(M4D.PRINT)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.PRINTM4D 1
@M4D.PRINTRetAddr4591
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.PRINTM4D//call goto
0;JMP
(M4D.PRINTRetAddr4591)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.DISPOSE
(M4D.DISPOSE)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
(M4D.DISPOSE$WHILE_EXP0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 0
@M4D.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS4599
D;JLT
@LT_NOTLESS4599
D;JGE
(LT_LESS4599)
@SP
A=M-1
M=-1
@LT_END4599
0;JMP
(LT_NOTLESS4599)
@SP
A=M-1
M=0
@LT_END4599
0;JMP
(LT_END4599)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@M4D.DISPOSE$WHILE_END0
D;JNE
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@M4D.DISPOSERetAddr4602
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(M4D.DISPOSERetAddr4602)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@M4D.DISPOSE$WHILE_EXP0
0;JMP
(M4D.DISPOSE$WHILE_END0)
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call ARRAY.DISPOSE 1
@M4D.DISPOSERetAddr4605
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@ARRAY.DISPOSE//call goto
0;JMP
(M4D.DISPOSERetAddr4605)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.DEALLOC 1
@M4D.DISPOSERetAddr4607
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.DEALLOC//call goto
0;JMP
(M4D.DISPOSERetAddr4607)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.INIT
(M4D.INIT)
//PUSH CONSTANT 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 0
@SP
AM=M-1
D=M
@M4D.0
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.IDENTITY
(M4D.IDENTITY)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GETPOS 0
@M4D.IDENTITYRetAddr4621
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(M4D.IDENTITYRetAddr4621)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@M4D.IDENTITYRetAddr4623
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(M4D.IDENTITYRetAddr4623)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call FLOAT.GETPOS 0
@M4D.IDENTITYRetAddr4625
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(M4D.IDENTITYRetAddr4625)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@M4D.IDENTITYRetAddr4627
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(M4D.IDENTITYRetAddr4627)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.IDENTITYRetAddr4629
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.IDENTITYRetAddr4629)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.IDENTITYRetAddr4631
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.IDENTITYRetAddr4631)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.IDENTITYRetAddr4633
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.IDENTITYRetAddr4633)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.IDENTITYRetAddr4635
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.IDENTITYRetAddr4635)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.IDENTITYRetAddr4637
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.IDENTITYRetAddr4637)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.IDENTITYRetAddr4639
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.IDENTITYRetAddr4639)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.IDENTITYRetAddr4641
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.IDENTITYRetAddr4641)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.IDENTITYRetAddr4643
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.IDENTITYRetAddr4643)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.IDENTITYRetAddr4645
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.IDENTITYRetAddr4645)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.IDENTITYRetAddr4647
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.IDENTITYRetAddr4647)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.IDENTITYRetAddr4649
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.IDENTITYRetAddr4649)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.IDENTITYRetAddr4651
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.IDENTITYRetAddr4651)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@M4D.IDENTITYRetAddr4653
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(M4D.IDENTITYRetAddr4653)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@M4D.IDENTITYRetAddr4655
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(M4D.IDENTITYRetAddr4655)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.COPY
(M4D.COPY)
(M4D.COPY$WHILE_EXP0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 0
@M4D.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS4663
D;JLT
@LT_NOTLESS4663
D;JGE
(LT_LESS4663)
@SP
A=M-1
M=-1
@LT_END4663
0;JMP
(LT_NOTLESS4663)
@SP
A=M-1
M=0
@LT_END4663
0;JMP
(LT_END4663)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@M4D.COPY$WHILE_END0
D;JNE
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.COPYRetAddr4665
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.COPYRetAddr4665)
//Call M4D.SETI 3
@M4D.COPYRetAddr4667
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.COPYRetAddr4667)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@M4D.COPY$WHILE_EXP0
0;JMP
(M4D.COPY$WHILE_END0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.MUL
(M4D.MUL)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.NEW 0
@M4D.MULRetAddr4676
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.NEW//call goto
0;JMP
(M4D.MULRetAddr4676)
//POP LOCAL 6
@LCL
A=M
D=A
@6
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call FLOAT.GETPOS 0
@M4D.MULRetAddr4678
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(M4D.MULRetAddr4678)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@M4D.MULRetAddr4680
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(M4D.MULRetAddr4680)
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call FLOAT.GETPOS 0
@M4D.MULRetAddr4682
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(M4D.MULRetAddr4682)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@M4D.MULRetAddr4684
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(M4D.MULRetAddr4684)
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@M4D.MULRetAddr4686
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(M4D.MULRetAddr4686)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@M4D.MULRetAddr4688
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(M4D.MULRetAddr4688)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@M4D.MULRetAddr4690
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(M4D.MULRetAddr4690)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@M4D.MULRetAddr4692
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(M4D.MULRetAddr4692)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4694
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4694)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4696
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4696)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4698
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4698)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4700
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4700)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4702
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4702)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4704
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4704)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4706
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4706)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4708
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4708)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4710
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4710)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4712
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4712)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@M4D.MULRetAddr4714
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4714)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4716
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4716)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4718
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4718)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4720
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4720)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.MULRetAddr4722
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.MULRetAddr4722)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4724
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4724)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4726
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4726)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4728
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4728)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4730
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4730)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4732
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4732)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4734
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4734)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4736
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4736)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4738
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4738)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4740
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4740)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4742
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4742)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4744
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4744)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.MULRetAddr4746
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.MULRetAddr4746)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4748
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4748)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4750
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4750)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4752
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4752)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4754
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4754)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4756
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4756)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4758
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4758)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4760
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4760)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4762
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4762)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4764
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4764)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4766
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4766)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4768
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4768)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.MULRetAddr4770
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.MULRetAddr4770)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4772
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4772)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4774
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4774)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4776
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4776)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4778
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4778)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4780
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4780)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4782
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4782)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4784
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4784)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4786
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4786)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4788
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4788)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4790
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4790)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4792
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4792)
//Call FLOAT.ADD 3
@M4D.MULRetAddr4794
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4794)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4796
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4796)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.MULRetAddr4798
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.MULRetAddr4798)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4800
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4800)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4802
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4802)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4804
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4804)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4806
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4806)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4808
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4808)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4810
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4810)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4812
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4812)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4814
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4814)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4816
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4816)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4818
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4818)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4820
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4820)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.MULRetAddr4822
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.MULRetAddr4822)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4824
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4824)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4826
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4826)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4828
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4828)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4830
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4830)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4832
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4832)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4834
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4834)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4836
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4836)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4838
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4838)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4840
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4840)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4842
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4842)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4844
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4844)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.MULRetAddr4846
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.MULRetAddr4846)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4848
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4848)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4850
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4850)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4852
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4852)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4854
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4854)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4856
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4856)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4858
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4858)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4860
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4860)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4862
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4862)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4864
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4864)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4866
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4866)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4868
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4868)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.MULRetAddr4870
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.MULRetAddr4870)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4872
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4872)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4874
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4874)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4876
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4876)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4878
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4878)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4880
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4880)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4882
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4882)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4884
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4884)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4886
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4886)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4888
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4888)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4890
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4890)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4892
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4892)
//Call FLOAT.ADD 3
@M4D.MULRetAddr4894
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4894)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4896
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4896)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.MULRetAddr4898
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.MULRetAddr4898)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4900
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4900)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4902
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4902)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4904
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4904)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4906
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4906)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4908
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4908)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4910
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4910)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4912
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4912)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4914
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4914)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4916
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4916)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4918
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4918)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4920
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4920)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.MULRetAddr4922
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.MULRetAddr4922)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4924
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4924)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4926
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4926)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4928
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4928)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4930
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4930)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4932
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4932)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4934
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4934)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4936
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4936)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4938
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4938)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4940
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4940)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4942
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4942)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4944
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4944)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.MULRetAddr4946
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.MULRetAddr4946)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4948
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4948)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4950
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4950)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4952
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4952)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4954
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4954)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4956
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4956)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4958
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4958)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4960
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4960)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4962
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4962)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4964
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4964)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4966
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4966)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4968
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4968)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.MULRetAddr4970
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.MULRetAddr4970)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4972
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4972)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4974
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4974)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4976
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4976)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4978
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4978)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4980
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4980)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4982
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4982)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4984
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4984)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4986
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4986)
//Call FLOAT.MUL 3
@M4D.MULRetAddr4988
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULRetAddr4988)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4990
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4990)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULRetAddr4992
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULRetAddr4992)
//Call FLOAT.ADD 3
@M4D.MULRetAddr4994
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4994)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULRetAddr4996
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULRetAddr4996)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.MULRetAddr4998
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.MULRetAddr4998)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.COPY 2
@M4D.MULRetAddr5000
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.COPY//call goto
0;JMP
(M4D.MULRetAddr5000)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@M4D.MULRetAddr5002
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(M4D.MULRetAddr5002)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@M4D.MULRetAddr5004
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(M4D.MULRetAddr5004)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@M4D.MULRetAddr5006
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(M4D.MULRetAddr5006)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@M4D.MULRetAddr5008
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(M4D.MULRetAddr5008)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@M4D.MULRetAddr5010
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(M4D.MULRetAddr5010)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@M4D.MULRetAddr5012
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(M4D.MULRetAddr5012)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 6
@LCL
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.DISPOSE 1
@M4D.MULRetAddr5014
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.DISPOSE//call goto
0;JMP
(M4D.MULRetAddr5014)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.MULV3D
(M4D.MULV3D)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@M4D.MULV3DRetAddr5022
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(M4D.MULV3DRetAddr5022)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@M4D.MULV3DRetAddr5024
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(M4D.MULV3DRetAddr5024)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@M4D.MULV3DRetAddr5026
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(M4D.MULV3DRetAddr5026)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.NEW 3
@M4D.MULV3DRetAddr5028
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.NEW//call goto
0;JMP
(M4D.MULV3DRetAddr5028)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@M4D.MULV3DRetAddr5030
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(M4D.MULV3DRetAddr5030)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULV3DRetAddr5032
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULV3DRetAddr5032)
//Call FLOAT.MUL 3
@M4D.MULV3DRetAddr5034
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULV3DRetAddr5034)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@M4D.MULV3DRetAddr5036
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(M4D.MULV3DRetAddr5036)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULV3DRetAddr5038
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULV3DRetAddr5038)
//Call FLOAT.MUL 3
@M4D.MULV3DRetAddr5040
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULV3DRetAddr5040)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@M4D.MULV3DRetAddr5042
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(M4D.MULV3DRetAddr5042)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULV3DRetAddr5044
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULV3DRetAddr5044)
//Call FLOAT.MUL 3
@M4D.MULV3DRetAddr5046
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULV3DRetAddr5046)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULV3DRetAddr5048
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULV3DRetAddr5048)
//Call FLOAT.ADD 3
@M4D.MULV3DRetAddr5050
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULV3DRetAddr5050)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULV3DRetAddr5052
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULV3DRetAddr5052)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULV3DRetAddr5054
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULV3DRetAddr5054)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.SETX 2
@M4D.MULV3DRetAddr5056
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.SETX//call goto
0;JMP
(M4D.MULV3DRetAddr5056)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@M4D.MULV3DRetAddr5058
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(M4D.MULV3DRetAddr5058)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULV3DRetAddr5060
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULV3DRetAddr5060)
//Call FLOAT.MUL 3
@M4D.MULV3DRetAddr5062
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULV3DRetAddr5062)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@M4D.MULV3DRetAddr5064
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(M4D.MULV3DRetAddr5064)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULV3DRetAddr5066
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULV3DRetAddr5066)
//Call FLOAT.MUL 3
@M4D.MULV3DRetAddr5068
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULV3DRetAddr5068)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@M4D.MULV3DRetAddr5070
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(M4D.MULV3DRetAddr5070)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULV3DRetAddr5072
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULV3DRetAddr5072)
//Call FLOAT.MUL 3
@M4D.MULV3DRetAddr5074
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULV3DRetAddr5074)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULV3DRetAddr5076
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULV3DRetAddr5076)
//Call FLOAT.ADD 3
@M4D.MULV3DRetAddr5078
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULV3DRetAddr5078)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULV3DRetAddr5080
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULV3DRetAddr5080)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULV3DRetAddr5082
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULV3DRetAddr5082)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.SETY 2
@M4D.MULV3DRetAddr5084
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.SETY//call goto
0;JMP
(M4D.MULV3DRetAddr5084)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@M4D.MULV3DRetAddr5086
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(M4D.MULV3DRetAddr5086)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULV3DRetAddr5088
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULV3DRetAddr5088)
//Call FLOAT.MUL 3
@M4D.MULV3DRetAddr5090
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULV3DRetAddr5090)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@M4D.MULV3DRetAddr5092
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(M4D.MULV3DRetAddr5092)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULV3DRetAddr5094
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULV3DRetAddr5094)
//Call FLOAT.MUL 3
@M4D.MULV3DRetAddr5096
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULV3DRetAddr5096)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@M4D.MULV3DRetAddr5098
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(M4D.MULV3DRetAddr5098)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULV3DRetAddr5100
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULV3DRetAddr5100)
//Call FLOAT.MUL 3
@M4D.MULV3DRetAddr5102
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(M4D.MULV3DRetAddr5102)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.MULV3DRetAddr5104
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.MULV3DRetAddr5104)
//Call FLOAT.ADD 3
@M4D.MULV3DRetAddr5106
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULV3DRetAddr5106)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULV3DRetAddr5108
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULV3DRetAddr5108)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@M4D.MULV3DRetAddr5110
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(M4D.MULV3DRetAddr5110)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.SETZ 2
@M4D.MULV3DRetAddr5112
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.SETZ//call goto
0;JMP
(M4D.MULV3DRetAddr5112)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.COPY 2
@M4D.MULV3DRetAddr5114
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.COPY//call goto
0;JMP
(M4D.MULV3DRetAddr5114)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@M4D.MULV3DRetAddr5116
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(M4D.MULV3DRetAddr5116)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@M4D.MULV3DRetAddr5118
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(M4D.MULV3DRetAddr5118)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@M4D.MULV3DRetAddr5120
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(M4D.MULV3DRetAddr5120)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.DISPOSE 1
@M4D.MULV3DRetAddr5122
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.DISPOSE//call goto
0;JMP
(M4D.MULV3DRetAddr5122)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.TRANSLATE
(M4D.TRANSLATE)
//Call M4D.NEW 0
@M4D.TRANSLATERetAddr5130
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.NEW//call goto
0;JMP
(M4D.TRANSLATERetAddr5130)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.TRANSLATERetAddr5132
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.TRANSLATERetAddr5132)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.TRANSLATERetAddr5134
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.TRANSLATERetAddr5134)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 4
@ARG
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.TRANSLATERetAddr5136
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.TRANSLATERetAddr5136)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.MUL 3
@M4D.TRANSLATERetAddr5138
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.MUL//call goto
0;JMP
(M4D.TRANSLATERetAddr5138)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.DISPOSE 1
@M4D.TRANSLATERetAddr5140
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.DISPOSE//call goto
0;JMP
(M4D.TRANSLATERetAddr5140)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.SCALE
(M4D.SCALE)
//Call M4D.NEW 0
@M4D.SCALERetAddr5148
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.NEW//call goto
0;JMP
(M4D.SCALERetAddr5148)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.SCALERetAddr5150
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.SCALERetAddr5150)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.SCALERetAddr5152
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.SCALERetAddr5152)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 4
@ARG
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.SCALERetAddr5154
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.SCALERetAddr5154)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.MUL 3
@M4D.SCALERetAddr5156
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.MUL//call goto
0;JMP
(M4D.SCALERetAddr5156)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.DISPOSE 1
@M4D.SCALERetAddr5158
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.DISPOSE//call goto
0;JMP
(M4D.SCALERetAddr5158)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.ROTATEX
(M4D.ROTATEX)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@M4D.ROTATEXRetAddr5166
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(M4D.ROTATEXRetAddr5166)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call M4D.NEW 0
@M4D.ROTATEXRetAddr5168
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.NEW//call goto
0;JMP
(M4D.ROTATEXRetAddr5168)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COS 2
@M4D.ROTATEXRetAddr5170
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COS//call goto
0;JMP
(M4D.ROTATEXRetAddr5170)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.ROTATEXRetAddr5172
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.ROTATEXRetAddr5172)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.ROTATEXRetAddr5174
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.ROTATEXRetAddr5174)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SIN 2
@M4D.ROTATEXRetAddr5176
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SIN//call goto
0;JMP
(M4D.ROTATEXRetAddr5176)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.ROTATEXRetAddr5178
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.ROTATEXRetAddr5178)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEGATE 2
@M4D.ROTATEXRetAddr5180
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEGATE//call goto
0;JMP
(M4D.ROTATEXRetAddr5180)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.ROTATEXRetAddr5182
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.ROTATEXRetAddr5182)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.MUL 3
@M4D.ROTATEXRetAddr5184
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.MUL//call goto
0;JMP
(M4D.ROTATEXRetAddr5184)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@M4D.ROTATEXRetAddr5186
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(M4D.ROTATEXRetAddr5186)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.DISPOSE 1
@M4D.ROTATEXRetAddr5188
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.DISPOSE//call goto
0;JMP
(M4D.ROTATEXRetAddr5188)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.ROTATEY
(M4D.ROTATEY)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@M4D.ROTATEYRetAddr5196
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(M4D.ROTATEYRetAddr5196)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call M4D.NEW 0
@M4D.ROTATEYRetAddr5198
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.NEW//call goto
0;JMP
(M4D.ROTATEYRetAddr5198)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COS 2
@M4D.ROTATEYRetAddr5200
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COS//call goto
0;JMP
(M4D.ROTATEYRetAddr5200)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.ROTATEYRetAddr5202
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.ROTATEYRetAddr5202)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.ROTATEYRetAddr5204
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.ROTATEYRetAddr5204)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SIN 2
@M4D.ROTATEYRetAddr5206
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SIN//call goto
0;JMP
(M4D.ROTATEYRetAddr5206)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.ROTATEYRetAddr5208
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.ROTATEYRetAddr5208)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEGATE 2
@M4D.ROTATEYRetAddr5210
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEGATE//call goto
0;JMP
(M4D.ROTATEYRetAddr5210)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.ROTATEYRetAddr5212
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.ROTATEYRetAddr5212)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.MUL 3
@M4D.ROTATEYRetAddr5214
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.MUL//call goto
0;JMP
(M4D.ROTATEYRetAddr5214)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@M4D.ROTATEYRetAddr5216
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(M4D.ROTATEYRetAddr5216)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.DISPOSE 1
@M4D.ROTATEYRetAddr5218
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.DISPOSE//call goto
0;JMP
(M4D.ROTATEYRetAddr5218)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.ROTATEZ
(M4D.ROTATEZ)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@M4D.ROTATEZRetAddr5226
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(M4D.ROTATEZRetAddr5226)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call M4D.NEW 0
@M4D.ROTATEZRetAddr5228
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.NEW//call goto
0;JMP
(M4D.ROTATEZRetAddr5228)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COS 2
@M4D.ROTATEZRetAddr5230
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COS//call goto
0;JMP
(M4D.ROTATEZRetAddr5230)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.ROTATEZRetAddr5232
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.ROTATEZRetAddr5232)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.ROTATEZRetAddr5234
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.ROTATEZRetAddr5234)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SIN 2
@M4D.ROTATEZRetAddr5236
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SIN//call goto
0;JMP
(M4D.ROTATEZRetAddr5236)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.ROTATEZRetAddr5238
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.ROTATEZRetAddr5238)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEGATE 2
@M4D.ROTATEZRetAddr5240
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEGATE//call goto
0;JMP
(M4D.ROTATEZRetAddr5240)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.SETI 3
@M4D.ROTATEZRetAddr5242
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.SETI//call goto
0;JMP
(M4D.ROTATEZRetAddr5242)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.MUL 3
@M4D.ROTATEZRetAddr5244
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.MUL//call goto
0;JMP
(M4D.ROTATEZRetAddr5244)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@M4D.ROTATEZRetAddr5246
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(M4D.ROTATEZRetAddr5246)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.DISPOSE 1
@M4D.ROTATEZRetAddr5248
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.DISPOSE//call goto
0;JMP
(M4D.ROTATEZRetAddr5248)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function M4D.PRINTM4D
(M4D.PRINTM4D)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(M4D.PRINTM4D$WHILE_EXP0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 0
@M4D.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS5256
D;JLT
@LT_NOTLESS5256
D;JGE
(LT_LESS5256)
@SP
A=M-1
M=-1
@LT_END5256
0;JMP
(LT_NOTLESS5256)
@SP
A=M-1
M=0
@LT_END5256
0;JMP
(LT_END5256)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@M4D.PRINTM4D$WHILE_END0
D;JNE
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS5258
D;JEQ
@EQ_NOTEQUALS5258
D;JNE
(EQ_EQUALS5258)
@SP
A=M-1
M=-1
@EQ_END5258
0;JMP
(EQ_NOTEQUALS5258)
@SP
A=M-1
M=0
@EQ_END5258
0;JMP
(EQ_END5258)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@M4D.PRINTM4D$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@M4D.PRINTM4D$IF_FALSE0
0;JMP
(M4D.PRINTM4D$IF_TRUE0)
//Call OUTPUT.PRINTLN 0
@M4D.PRINTM4DRetAddr5259
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(M4D.PRINTM4DRetAddr5259)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(M4D.PRINTM4D$IF_FALSE0)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call M4D.GETI 2
@M4D.PRINTM4DRetAddr5262
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@M4D.GETI//call goto
0;JMP
(M4D.PRINTM4DRetAddr5262)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.PRINT 1
@M4D.PRINTM4DRetAddr5264
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.PRINT//call goto
0;JMP
(M4D.PRINTM4DRetAddr5264)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@M4D.PRINTM4DRetAddr5266
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(M4D.PRINTM4DRetAddr5266)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5268
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5268)
//Call OUTPUT.PRINTSTRING 1
@M4D.PRINTM4DRetAddr5270
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(M4D.PRINTM4DRetAddr5270)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@M4D.PRINTM4D$WHILE_EXP0
0;JMP
(M4D.PRINTM4D$WHILE_END0)
//Call OUTPUT.PRINTLN 0
@M4D.PRINTM4DRetAddr5273
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTLN//call goto
0;JMP
(M4D.PRINTM4DRetAddr5273)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 36
@36
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@M4D.PRINTM4DRetAddr5275
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(M4D.PRINTM4DRetAddr5275)
//PUSH CONSTANT 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5277
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5277)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5279
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5279)
//PUSH CONSTANT 46
@46
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5281
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5281)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5283
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5283)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5285
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5285)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5287
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5287)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5289
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5289)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5291
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5291)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5293
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5293)
//PUSH CONSTANT 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5295
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5295)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5297
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5297)
//PUSH CONSTANT 46
@46
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5299
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5299)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5301
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5301)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5303
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5303)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5305
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5305)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5307
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5307)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5309
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5309)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5311
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5311)
//PUSH CONSTANT 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5313
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5313)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5315
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5315)
//PUSH CONSTANT 46
@46
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5317
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5317)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5319
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5319)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5321
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5321)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5323
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5323)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5325
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5325)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5327
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5327)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5329
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5329)
//PUSH CONSTANT 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5331
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5331)
//PUSH CONSTANT 49
@49
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5333
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5333)
//PUSH CONSTANT 46
@46
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5335
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5335)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5337
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5337)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5339
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5339)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5341
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5341)
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5343
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5343)
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5345
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5345)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@M4D.PRINTM4DRetAddr5347
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(M4D.PRINTM4DRetAddr5347)
//Call OUTPUT.PRINTSTRING 1
@M4D.PRINTM4DRetAddr5349
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(M4D.PRINTM4DRetAddr5349)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function TILE.NEW
(TILE.NEW)
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.ALLOC 1
@TILE.NEWRetAddr5357
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.ALLOC//call goto
0;JMP
(TILE.NEWRetAddr5357)
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 1
@THIS
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function TILE.ISNORTHWALL
(TILE.ISNORTHWALL)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function TILE.ISWESTWALL
(TILE.ISWESTWALL)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function TILE.DISPOSE
(TILE.DISPOSE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.DEALLOC 1
@TILE.DISPOSERetAddr5377
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.DEALLOC//call goto
0;JMP
(TILE.DISPOSERetAddr5377)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function LINEBUFFER.NEW
(LINEBUFFER.NEW)
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.ALLOC 1
@LINEBUFFER.NEWRetAddr5385
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.ALLOC//call goto
0;JMP
(LINEBUFFER.NEWRetAddr5385)
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@LINEBUFFER.NEWRetAddr5387
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(LINEBUFFER.NEWRetAddr5387)
//POP THIS 1
@THIS
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call ARRAY.NEW 1
@LINEBUFFER.NEWRetAddr5389
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@ARRAY.NEW//call goto
0;JMP
(LINEBUFFER.NEWRetAddr5389)
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call LINEBUFFER.BEGIN 1
@LINEBUFFER.NEWRetAddr5391
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@LINEBUFFER.BEGIN//call goto
0;JMP
(LINEBUFFER.NEWRetAddr5391)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function LINEBUFFER.BEGIN
(LINEBUFFER.BEGIN)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 2
@THIS
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//POP THIS 3
@THIS
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function LINEBUFFER.ADDLINE
(LINEBUFFER.ADDLINE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS5406
D;JLT
@LT_NOTLESS5406
D;JGE
(LT_LESS5406)
@SP
A=M-1
M=-1
@LT_END5406
0;JMP
(LT_NOTLESS5406)
@SP
A=M-1
M=0
@LT_END5406
0;JMP
(LT_END5406)
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@LINEBUFFER.ADDLINE$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@LINEBUFFER.ADDLINE$IF_FALSE0
0;JMP
(LINEBUFFER.ADDLINE$IF_TRUE0)
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH ARGUMENT 4
@ARG
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP THIS 2
@THIS
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(LINEBUFFER.ADDLINE$IF_FALSE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function LINEBUFFER.DRAWLINES
(LINEBUFFER.DRAWLINES)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS5422
D;JEQ
@EQ_NOTEQUALS5422
D;JNE
(EQ_EQUALS5422)
@SP
A=M-1
M=-1
@EQ_END5422
0;JMP
(EQ_NOTEQUALS5422)
@SP
A=M-1
M=0
@EQ_END5422
0;JMP
(EQ_END5422)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@LINEBUFFER.DRAWLINES$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@LINEBUFFER.DRAWLINES$IF_FALSE0
0;JMP
(LINEBUFFER.DRAWLINES$IF_TRUE0)
(LINEBUFFER.DRAWLINES$WHILE_EXP0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS5423
D;JLT
@LT_NOTLESS5423
D;JGE
(LT_LESS5423)
@SP
A=M-1
M=-1
@LT_END5423
0;JMP
(LT_NOTLESS5423)
@SP
A=M-1
M=0
@LT_END5423
0;JMP
(LT_END5423)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@LINEBUFFER.DRAWLINES$WHILE_END0
D;JNE
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call SCREEN.DRAWLINE 4
@LINEBUFFER.DRAWLINESRetAddr5432
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@SCREEN.DRAWLINE//call goto
0;JMP
(LINEBUFFER.DRAWLINESRetAddr5432)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@LINEBUFFER.DRAWLINES$WHILE_EXP0
0;JMP
(LINEBUFFER.DRAWLINES$WHILE_END0)
//GOTO IF_END0
@LINEBUFFER.DRAWLINES$IF_END0
0;JMP
(LINEBUFFER.DRAWLINES$IF_FALSE0)
(LINEBUFFER.DRAWLINES$WHILE_EXP1)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS5435
D;JLT
@LT_NOTLESS5435
D;JGE
(LT_LESS5435)
@SP
A=M-1
M=-1
@LT_END5435
0;JMP
(LT_NOTLESS5435)
@SP
A=M-1
M=0
@LT_END5435
0;JMP
(LT_END5435)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END1
@SP
AM=M-1
D=M
@LINEBUFFER.DRAWLINES$WHILE_END1
D;JNE
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call DISPLAY.SINGLELINE 5
@LINEBUFFER.DRAWLINESRetAddr5444
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@DISPLAY.SINGLELINE//call goto
0;JMP
(LINEBUFFER.DRAWLINESRetAddr5444)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP1
@LINEBUFFER.DRAWLINES$WHILE_EXP1
0;JMP
(LINEBUFFER.DRAWLINES$WHILE_END1)
(LINEBUFFER.DRAWLINES$IF_END0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function LINEBUFFER.END
(LINEBUFFER.END)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS5453
D;JLT
@LT_NOTLESS5453
D;JGE
(LT_LESS5453)
@SP
A=M-1
M=-1
@LT_END5453
0;JMP
(LT_NOTLESS5453)
@SP
A=M-1
M=0
@LT_END5453
0;JMP
(LT_END5453)
//PUSH THIS 3
@THIS
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@LINEBUFFER.END$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@LINEBUFFER.END$IF_FALSE0
0;JMP
(LINEBUFFER.END$IF_TRUE0)
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(LINEBUFFER.END$IF_FALSE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 3
@THIS
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function LINEBUFFER.DISPOSE
(LINEBUFFER.DISPOSE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call ARRAY.DISPOSE 1
@LINEBUFFER.DISPOSERetAddr5463
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@ARRAY.DISPOSE//call goto
0;JMP
(LINEBUFFER.DISPOSERetAddr5463)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.DEALLOC 1
@LINEBUFFER.DISPOSERetAddr5465
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.DEALLOC//call goto
0;JMP
(LINEBUFFER.DISPOSERetAddr5465)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function LINEBUFFER.INIT
(LINEBUFFER.INIT)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.NEW
(GRID.NEW)
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.ALLOC 1
@GRID.NEWRetAddr5479
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.ALLOC//call goto
0;JMP
(GRID.NEWRetAddr5479)
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 0
@SP
AM=M-1
D=M
@Grid.0
M=D
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@GRID.NEWRetAddr5481
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(GRID.NEWRetAddr5481)
//Call ARRAY.NEW 1
@GRID.NEWRetAddr5483
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@ARRAY.NEW//call goto
0;JMP
(GRID.NEWRetAddr5483)
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 100
@100
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 1
@SP
AM=M-1
D=M
@Grid.1
M=D
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP STATIC 2
@SP
AM=M-1
D=M
@Grid.2
M=D
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS5485
D;JEQ
@EQ_NOTEQUALS5485
D;JNE
(EQ_EQUALS5485)
@SP
A=M-1
M=-1
@EQ_END5485
0;JMP
(EQ_NOTEQUALS5485)
@SP
A=M-1
M=0
@EQ_END5485
0;JMP
(EQ_END5485)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@GRID.NEW$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@GRID.NEW$IF_FALSE0
0;JMP
(GRID.NEW$IF_TRUE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5489
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5489)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5493
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5493)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5497
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5497)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5501
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5501)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5505
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5505)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5510
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5510)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5514
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5514)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5518
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5518)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5522
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5522)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5526
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5526)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 10
@10
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5531
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5531)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 11
@11
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5535
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5535)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5540
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5540)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 13
@13
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5544
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5544)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 14
@14
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5548
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5548)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5552
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5552)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5556
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5556)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5561
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5561)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 18
@18
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5565
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5565)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 19
@19
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5569
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5569)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 20
@20
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5573
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5573)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 21
@21
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5576
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5576)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 22
@22
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5580
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5580)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5584
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5584)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 24
@24
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5588
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5588)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 25
@25
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5592
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5592)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 26
@26
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5596
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5596)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 27
@27
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5599
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5599)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 28
@28
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5603
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5603)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 29
@29
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5607
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5607)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5611
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5611)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5615
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5615)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5620
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5620)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 33
@33
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5623
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5623)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 34
@34
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5627
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5627)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 35
@35
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5631
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5631)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 36
@36
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5635
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5635)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 37
@37
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5639
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5639)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 38
@38
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5643
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5643)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 39
@39
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5647
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5647)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 40
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5651
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5651)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 41
@41
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5655
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5655)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 42
@42
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5659
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5659)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 43
@43
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5662
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5662)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 44
@44
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5666
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5666)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 45
@45
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5670
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5670)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 46
@46
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5674
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5674)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 47
@47
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5678
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5678)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 48
@48
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5682
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5682)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 49
@49
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5685
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5685)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 50
@50
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5690
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5690)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 51
@51
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5694
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5694)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 52
@52
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5698
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5698)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5702
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5702)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 54
@54
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5707
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5707)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 55
@55
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5711
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5711)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 56
@56
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5715
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5715)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5719
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5719)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 58
@58
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5722
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5722)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 59
@59
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5726
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5726)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 60
@60
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5730
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5730)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 61
@61
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5734
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5734)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 62
@62
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5738
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5738)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 63
@63
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5741
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5741)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 64
@64
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5745
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5745)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 65
@65
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5748
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5748)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 66
@66
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5753
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5753)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 67
@67
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5757
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5757)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 68
@68
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5761
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5761)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 69
@69
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5765
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5765)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 70
@70
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5770
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5770)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 71
@71
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5774
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5774)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 72
@72
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5779
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5779)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 73
@73
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5783
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5783)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 74
@74
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5788
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5788)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 75
@75
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5792
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5792)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 76
@76
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5796
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5796)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 77
@77
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5800
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5800)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 78
@78
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5804
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5804)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 79
@79
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5808
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5808)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 80
@80
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5812
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5812)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 81
@81
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5816
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5816)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5820
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5820)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 83
@83
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5823
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5823)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 84
@84
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5827
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5827)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 85
@85
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5830
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5830)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 86
@86
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5834
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5834)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 87
@87
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5839
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5839)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 88
@88
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5842
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5842)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 89
@89
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5845
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5845)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5849
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5849)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 91
@91
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5852
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5852)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 92
@92
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5855
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5855)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 93
@93
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5859
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5859)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 94
@94
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5864
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5864)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 95
@95
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5867
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5867)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 96
@96
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//Call TILE.NEW 2
@GRID.NEWRetAddr5871
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5871)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 97
@97
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5875
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5875)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 98
@98
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5879
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5879)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 99
@99
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.NEW 2
@GRID.NEWRetAddr5883
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.NEW//call goto
0;JMP
(GRID.NEWRetAddr5883)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.NEW$IF_FALSE0)
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.GETWALLS
(GRID.GETWALLS)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.HASNORTHWALL 3
@GRID.GETWALLSRetAddr5892
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.HASNORTHWALL//call goto
0;JMP
(GRID.GETWALLSRetAddr5892)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.HASEASTWALL 3
@GRID.GETWALLSRetAddr5895
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.HASEASTWALL//call goto
0;JMP
(GRID.GETWALLSRetAddr5895)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.HASSOUTHWALL 3
@GRID.GETWALLSRetAddr5898
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.HASSOUTHWALL//call goto
0;JMP
(GRID.GETWALLSRetAddr5898)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.HASWESTWALL 3
@GRID.GETWALLSRetAddr5901
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.HASWESTWALL//call goto
0;JMP
(GRID.GETWALLSRetAddr5901)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.HASNORTHWALL
(GRID.HASNORTHWALL)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@GRID.HASNORTHWALLRetAddr5909
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(GRID.HASNORTHWALLRetAddr5909)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.ISNORTHWALL 1
@GRID.HASNORTHWALLRetAddr5913
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.ISNORTHWALL//call goto
0;JMP
(GRID.HASNORTHWALLRetAddr5913)
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.HASWESTWALL
(GRID.HASWESTWALL)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@GRID.HASWESTWALLRetAddr5921
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(GRID.HASWESTWALLRetAddr5921)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.ISWESTWALL 1
@GRID.HASWESTWALLRetAddr5925
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.ISWESTWALL//call goto
0;JMP
(GRID.HASWESTWALLRetAddr5925)
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.HASSOUTHWALL
(GRID.HASSOUTHWALL)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS5934
D;JEQ
@EQ_NOTEQUALS5934
D;JNE
(EQ_EQUALS5934)
@SP
A=M-1
M=-1
@EQ_END5934
0;JMP
(EQ_NOTEQUALS5934)
@SP
A=M-1
M=0
@EQ_END5934
0;JMP
(EQ_END5934)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@GRID.HASSOUTHWALL$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@GRID.HASSOUTHWALL$IF_FALSE0
0;JMP
(GRID.HASSOUTHWALL$IF_TRUE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
(GRID.HASSOUTHWALL$IF_FALSE0)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@GRID.HASSOUTHWALLRetAddr5943
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(GRID.HASSOUTHWALLRetAddr5943)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.ISNORTHWALL 1
@GRID.HASSOUTHWALLRetAddr5947
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.ISNORTHWALL//call goto
0;JMP
(GRID.HASSOUTHWALLRetAddr5947)
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.HASEASTWALL
(GRID.HASEASTWALL)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS5956
D;JEQ
@EQ_NOTEQUALS5956
D;JNE
(EQ_EQUALS5956)
@SP
A=M-1
M=-1
@EQ_END5956
0;JMP
(EQ_NOTEQUALS5956)
@SP
A=M-1
M=0
@EQ_END5956
0;JMP
(EQ_END5956)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@GRID.HASEASTWALL$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@GRID.HASEASTWALL$IF_FALSE0
0;JMP
(GRID.HASEASTWALL$IF_TRUE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
(GRID.HASEASTWALL$IF_FALSE0)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@GRID.HASEASTWALLRetAddr5964
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(GRID.HASEASTWALLRetAddr5964)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.ISWESTWALL 1
@GRID.HASEASTWALLRetAddr5969
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.ISWESTWALL//call goto
0;JMP
(GRID.HASEASTWALLRetAddr5969)
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.CANSEEFROM
(GRID.CANSEEFROM)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 2
@Grid.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@GRID.CANSEEFROMRetAddr5977
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(GRID.CANSEEFROMRetAddr5977)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call ARRAY.NEW 1
@GRID.CANSEEFROMRetAddr5980
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@ARRAY.NEW//call goto
0;JMP
(GRID.CANSEEFROMRetAddr5980)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call V2D.EMPTY 0
@GRID.CANSEEFROMRetAddr5984
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.EMPTY//call goto
0;JMP
(GRID.CANSEEFROMRetAddr5984)
//POP LOCAL 5
@LCL
A=M
D=A
@5
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.SET 3
@GRID.CANSEEFROMRetAddr5986
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.SET//call goto
0;JMP
(GRID.CANSEEFROMRetAddr5986)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.COPY 1
@GRID.CANSEEFROMRetAddr5989
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.COPY//call goto
0;JMP
(GRID.CANSEEFROMRetAddr5989)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANSEEFROM$WHILE_EXP0)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@GRID.CANSEEFROM$WHILE_END0
D;JNE
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//Call GRID.HASNORTHWALL 3
@GRID.CANSEEFROMRetAddr5994
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.HASNORTHWALL//call goto
0;JMP
(GRID.CANSEEFROMRetAddr5994)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@GRID.CANSEEFROM$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@GRID.CANSEEFROM$IF_FALSE0
0;JMP
(GRID.CANSEEFROM$IF_TRUE0)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//Call V2D.SET 3
@GRID.CANSEEFROMRetAddr5999
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.SET//call goto
0;JMP
(GRID.CANSEEFROMRetAddr5999)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.COPY 1
@GRID.CANSEEFROMRetAddr6002
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.COPY//call goto
0;JMP
(GRID.CANSEEFROMRetAddr6002)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 2
@Grid.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS6006
D;JLT
@LT_NOTLESS6006
D;JGE
(LT_LESS6006)
@SP
A=M-1
M=-1
@LT_END6006
0;JMP
(LT_NOTLESS6006)
@SP
A=M-1
M=0
@LT_END6006
0;JMP
(LT_END6006)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO IF_TRUE1
@SP
AM=M-1
D=M
@GRID.CANSEEFROM$IF_TRUE1
D;JNE
//GOTO IF_FALSE1
@GRID.CANSEEFROM$IF_FALSE1
0;JMP
(GRID.CANSEEFROM$IF_TRUE1)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANSEEFROM$IF_FALSE1)
//GOTO IF_END0
@GRID.CANSEEFROM$IF_END0
0;JMP
(GRID.CANSEEFROM$IF_FALSE0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANSEEFROM$IF_END0)
//GOTO WHILE_EXP0
@GRID.CANSEEFROM$WHILE_EXP0
0;JMP
(GRID.CANSEEFROM$WHILE_END0)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANSEEFROM$WHILE_EXP1)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END1
@SP
AM=M-1
D=M
@GRID.CANSEEFROM$WHILE_END1
D;JNE
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//Call GRID.HASSOUTHWALL 3
@GRID.CANSEEFROMRetAddr6011
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.HASSOUTHWALL//call goto
0;JMP
(GRID.CANSEEFROMRetAddr6011)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO IF_TRUE2
@SP
AM=M-1
D=M
@GRID.CANSEEFROM$IF_TRUE2
D;JNE
//GOTO IF_FALSE2
@GRID.CANSEEFROM$IF_FALSE2
0;JMP
(GRID.CANSEEFROM$IF_TRUE2)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//Call V2D.SET 3
@GRID.CANSEEFROMRetAddr6016
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.SET//call goto
0;JMP
(GRID.CANSEEFROMRetAddr6016)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.COPY 1
@GRID.CANSEEFROMRetAddr6019
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.COPY//call goto
0;JMP
(GRID.CANSEEFROMRetAddr6019)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 2
@Grid.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS6023
D;JLT
@LT_NOTLESS6023
D;JGE
(LT_LESS6023)
@SP
A=M-1
M=-1
@LT_END6023
0;JMP
(LT_NOTLESS6023)
@SP
A=M-1
M=0
@LT_END6023
0;JMP
(LT_END6023)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO IF_TRUE3
@SP
AM=M-1
D=M
@GRID.CANSEEFROM$IF_TRUE3
D;JNE
//GOTO IF_FALSE3
@GRID.CANSEEFROM$IF_FALSE3
0;JMP
(GRID.CANSEEFROM$IF_TRUE3)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANSEEFROM$IF_FALSE3)
//GOTO IF_END2
@GRID.CANSEEFROM$IF_END2
0;JMP
(GRID.CANSEEFROM$IF_FALSE2)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANSEEFROM$IF_END2)
//GOTO WHILE_EXP1
@GRID.CANSEEFROM$WHILE_EXP1
0;JMP
(GRID.CANSEEFROM$WHILE_END1)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANSEEFROM$WHILE_EXP2)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END2
@SP
AM=M-1
D=M
@GRID.CANSEEFROM$WHILE_END2
D;JNE
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.HASEASTWALL 3
@GRID.CANSEEFROMRetAddr6028
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.HASEASTWALL//call goto
0;JMP
(GRID.CANSEEFROMRetAddr6028)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO IF_TRUE4
@SP
AM=M-1
D=M
@GRID.CANSEEFROM$IF_TRUE4
D;JNE
//GOTO IF_FALSE4
@GRID.CANSEEFROM$IF_FALSE4
0;JMP
(GRID.CANSEEFROM$IF_TRUE4)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.SET 3
@GRID.CANSEEFROMRetAddr6033
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.SET//call goto
0;JMP
(GRID.CANSEEFROMRetAddr6033)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.COPY 1
@GRID.CANSEEFROMRetAddr6036
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.COPY//call goto
0;JMP
(GRID.CANSEEFROMRetAddr6036)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 2
@Grid.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS6040
D;JLT
@LT_NOTLESS6040
D;JGE
(LT_LESS6040)
@SP
A=M-1
M=-1
@LT_END6040
0;JMP
(LT_NOTLESS6040)
@SP
A=M-1
M=0
@LT_END6040
0;JMP
(LT_END6040)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO IF_TRUE5
@SP
AM=M-1
D=M
@GRID.CANSEEFROM$IF_TRUE5
D;JNE
//GOTO IF_FALSE5
@GRID.CANSEEFROM$IF_FALSE5
0;JMP
(GRID.CANSEEFROM$IF_TRUE5)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANSEEFROM$IF_FALSE5)
//GOTO IF_END4
@GRID.CANSEEFROM$IF_END4
0;JMP
(GRID.CANSEEFROM$IF_FALSE4)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANSEEFROM$IF_END4)
//GOTO WHILE_EXP2
@GRID.CANSEEFROM$WHILE_EXP2
0;JMP
(GRID.CANSEEFROM$WHILE_END2)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANSEEFROM$WHILE_EXP3)
//PUSH LOCAL 4
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END3
@SP
AM=M-1
D=M
@GRID.CANSEEFROM$WHILE_END3
D;JNE
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.HASWESTWALL 3
@GRID.CANSEEFROMRetAddr6045
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.HASWESTWALL//call goto
0;JMP
(GRID.CANSEEFROMRetAddr6045)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO IF_TRUE6
@SP
AM=M-1
D=M
@GRID.CANSEEFROM$IF_TRUE6
D;JNE
//GOTO IF_FALSE6
@GRID.CANSEEFROM$IF_FALSE6
0;JMP
(GRID.CANSEEFROM$IF_TRUE6)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.SET 3
@GRID.CANSEEFROMRetAddr6050
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.SET//call goto
0;JMP
(GRID.CANSEEFROMRetAddr6050)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.COPY 1
@GRID.CANSEEFROMRetAddr6053
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.COPY//call goto
0;JMP
(GRID.CANSEEFROMRetAddr6053)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 2
@Grid.2
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS6057
D;JLT
@LT_NOTLESS6057
D;JGE
(LT_LESS6057)
@SP
A=M-1
M=-1
@LT_END6057
0;JMP
(LT_NOTLESS6057)
@SP
A=M-1
M=0
@LT_END6057
0;JMP
(LT_END6057)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO IF_TRUE7
@SP
AM=M-1
D=M
@GRID.CANSEEFROM$IF_TRUE7
D;JNE
//GOTO IF_FALSE7
@GRID.CANSEEFROM$IF_FALSE7
0;JMP
(GRID.CANSEEFROM$IF_TRUE7)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANSEEFROM$IF_FALSE7)
//GOTO IF_END6
@GRID.CANSEEFROM$IF_END6
0;JMP
(GRID.CANSEEFROM$IF_FALSE6)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 4
@LCL
A=M
D=A
@4
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANSEEFROM$IF_END6)
//GOTO WHILE_EXP3
@GRID.CANSEEFROM$WHILE_EXP3
0;JMP
(GRID.CANSEEFROM$WHILE_END3)
(GRID.CANSEEFROM$WHILE_EXP4)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS6059
D;JLT
@LT_NOTLESS6059
D;JGE
(LT_LESS6059)
@SP
A=M-1
M=-1
@LT_END6059
0;JMP
(LT_NOTLESS6059)
@SP
A=M-1
M=0
@LT_END6059
0;JMP
(LT_END6059)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END4
@SP
AM=M-1
D=M
@GRID.CANSEEFROM$WHILE_END4
D;JNE
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//Call V2D.NEW 2
@GRID.CANSEEFROMRetAddr6064
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.NEW//call goto
0;JMP
(GRID.CANSEEFROMRetAddr6064)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH TEMP 0
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THAT 0
@THAT
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP4
@GRID.CANSEEFROM$WHILE_EXP4
0;JMP
(GRID.CANSEEFROM$WHILE_END4)
//PUSH LOCAL 5
@LCL
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.DISPOSE 1
@GRID.CANSEEFROMRetAddr6067
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.DISPOSE//call goto
0;JMP
(GRID.CANSEEFROMRetAddr6067)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.CANMOVE
(GRID.CANMOVE)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 4
@ARG
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//NOT
@SP
A=M-1
M=!M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS6079
D;JEQ
@EQ_NOTEQUALS6079
D;JNE
(EQ_EQUALS6079)
@SP
A=M-1
M=-1
@EQ_END6079
0;JMP
(EQ_NOTEQUALS6079)
@SP
A=M-1
M=0
@EQ_END6079
0;JMP
(EQ_END6079)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@GRID.CANMOVE$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@GRID.CANMOVE$IF_FALSE0
0;JMP
(GRID.CANMOVE$IF_TRUE0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.HASNORTHWALL 3
@GRID.CANMOVERetAddr6080
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.HASNORTHWALL//call goto
0;JMP
(GRID.CANMOVERetAddr6080)
//NOT
@SP
A=M-1
M=!M
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANMOVE$IF_FALSE0)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS6084
D;JEQ
@EQ_NOTEQUALS6084
D;JNE
(EQ_EQUALS6084)
@SP
A=M-1
M=-1
@EQ_END6084
0;JMP
(EQ_NOTEQUALS6084)
@SP
A=M-1
M=0
@EQ_END6084
0;JMP
(EQ_END6084)
//IF-GOTO IF_TRUE1
@SP
AM=M-1
D=M
@GRID.CANMOVE$IF_TRUE1
D;JNE
//GOTO IF_FALSE1
@GRID.CANMOVE$IF_FALSE1
0;JMP
(GRID.CANMOVE$IF_TRUE1)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.HASSOUTHWALL 3
@GRID.CANMOVERetAddr6085
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.HASSOUTHWALL//call goto
0;JMP
(GRID.CANMOVERetAddr6085)
//NOT
@SP
A=M-1
M=!M
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANMOVE$IF_FALSE1)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS6089
D;JEQ
@EQ_NOTEQUALS6089
D;JNE
(EQ_EQUALS6089)
@SP
A=M-1
M=-1
@EQ_END6089
0;JMP
(EQ_NOTEQUALS6089)
@SP
A=M-1
M=0
@EQ_END6089
0;JMP
(EQ_END6089)
//IF-GOTO IF_TRUE2
@SP
AM=M-1
D=M
@GRID.CANMOVE$IF_TRUE2
D;JNE
//GOTO IF_FALSE2
@GRID.CANMOVE$IF_FALSE2
0;JMP
(GRID.CANMOVE$IF_TRUE2)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.HASEASTWALL 3
@GRID.CANMOVERetAddr6090
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.HASEASTWALL//call goto
0;JMP
(GRID.CANMOVERetAddr6090)
//NOT
@SP
A=M-1
M=!M
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANMOVE$IF_FALSE2)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//NEG
@SP
A=M-1
M=-M
//EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@EQ_EQUALS6095
D;JEQ
@EQ_NOTEQUALS6095
D;JNE
(EQ_EQUALS6095)
@SP
A=M-1
M=-1
@EQ_END6095
0;JMP
(EQ_NOTEQUALS6095)
@SP
A=M-1
M=0
@EQ_END6095
0;JMP
(EQ_END6095)
//IF-GOTO IF_TRUE3
@SP
AM=M-1
D=M
@GRID.CANMOVE$IF_TRUE3
D;JNE
//GOTO IF_FALSE3
@GRID.CANMOVE$IF_FALSE3
0;JMP
(GRID.CANMOVE$IF_TRUE3)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call GRID.HASWESTWALL 3
@GRID.CANMOVERetAddr6096
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@GRID.HASWESTWALL//call goto
0;JMP
(GRID.CANMOVERetAddr6096)
//NOT
@SP
A=M-1
M=!M
//AND
@SP
AM=M-1
D=M
A=A-1
M=D&M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.CANMOVE$IF_FALSE3)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.COORDTRANSFORM
(GRID.COORDTRANSFORM)
//Call V2D.EMPTY 0
@GRID.COORDTRANSFORMRetAddr6106
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.EMPTY//call goto
0;JMP
(GRID.COORDTRANSFORMRetAddr6106)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.GETX 1
@GRID.COORDTRANSFORMRetAddr6108
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.GETX//call goto
0;JMP
(GRID.COORDTRANSFORMRetAddr6108)
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@GRID.COORDTRANSFORMRetAddr6110
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(GRID.COORDTRANSFORMRetAddr6110)
//Call V2D.SETX 2
@GRID.COORDTRANSFORMRetAddr6112
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.SETX//call goto
0;JMP
(GRID.COORDTRANSFORMRetAddr6112)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V2D.GETY 1
@GRID.COORDTRANSFORMRetAddr6114
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.GETY//call goto
0;JMP
(GRID.COORDTRANSFORMRetAddr6114)
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.DIVIDE 2
@GRID.COORDTRANSFORMRetAddr6116
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.DIVIDE//call goto
0;JMP
(GRID.COORDTRANSFORMRetAddr6116)
//Call V2D.SETY 2
@GRID.COORDTRANSFORMRetAddr6118
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V2D.SETY//call goto
0;JMP
(GRID.COORDTRANSFORMRetAddr6118)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.GETSIZEX
(GRID.GETSIZEX)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.GETSIZEY
(GRID.GETSIZEY)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.GETGOALX
(GRID.GETGOALX)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.GETGOALY
(GRID.GETGOALY)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.GETGRIDSIZE
(GRID.GETGRIDSIZE)
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.SETGOAL
(GRID.SETGOAL)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 1
@THIS
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP THIS 2
@THIS
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function GRID.DISPOSE
(GRID.DISPOSE)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
(GRID.DISPOSE$WHILE_EXP0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//LT
@SP
AM=M-1
D=M
A=A-1
D=M-D
@LT_LESS6162
D;JLT
@LT_NOTLESS6162
D;JGE
(LT_LESS6162)
@SP
A=M-1
M=-1
@LT_END6162
0;JMP
(LT_NOTLESS6162)
@SP
A=M-1
M=0
@LT_END6162
0;JMP
(LT_END6162)
//PUSH STATIC 0
@Grid.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MATH.MULTIPLY 2
@GRID.DISPOSERetAddr6163
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MATH.MULTIPLY//call goto
0;JMP
(GRID.DISPOSERetAddr6163)
//NOT
@SP
A=M-1
M=!M
//IF-GOTO WHILE_END0
@SP
AM=M-1
D=M
@GRID.DISPOSE$WHILE_END0
D;JNE
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP POINTER 1
@SP
AM=M-1
D=M
@4
M=D
//PUSH THAT 0
@THAT
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call TILE.DISPOSE 1
@GRID.DISPOSERetAddr6167
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@TILE.DISPOSE//call goto
0;JMP
(GRID.DISPOSERetAddr6167)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//GOTO WHILE_EXP0
@GRID.DISPOSE$WHILE_EXP0
0;JMP
(GRID.DISPOSE$WHILE_END0)
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call ARRAY.DISPOSE 1
@GRID.DISPOSERetAddr6170
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@ARRAY.DISPOSE//call goto
0;JMP
(GRID.DISPOSERetAddr6170)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.DEALLOC 1
@GRID.DISPOSERetAddr6172
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.DEALLOC//call goto
0;JMP
(GRID.DISPOSERetAddr6172)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.NEW
(V3D.NEW)
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.ALLOC 1
@V3D.NEWRetAddr6180
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.ALLOC//call goto
0;JMP
(V3D.NEWRetAddr6180)
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.NEWRetAddr6182
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.NEWRetAddr6182)
//POP THIS 0
@THIS
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.NEWRetAddr6184
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.NEWRetAddr6184)
//POP THIS 1
@THIS
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.NEWRetAddr6186
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.NEWRetAddr6186)
//POP THIS 2
@THIS
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@V3D.NEWRetAddr6188
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(V3D.NEWRetAddr6188)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@V3D.NEWRetAddr6190
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(V3D.NEWRetAddr6190)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@V3D.NEWRetAddr6192
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(V3D.NEWRetAddr6192)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.SET
(V3D.SET)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@V3D.SETRetAddr6200
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(V3D.SETRetAddr6200)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@V3D.SETRetAddr6202
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(V3D.SETRetAddr6202)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 3
@ARG
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@V3D.SETRetAddr6204
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(V3D.SETRetAddr6204)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.GETX
(V3D.GETX)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.GETY
(V3D.GETY)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.GETZ
(V3D.GETZ)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.SETX
(V3D.SETX)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@V3D.SETXRetAddr6230
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(V3D.SETXRetAddr6230)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.SETY
(V3D.SETY)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@V3D.SETYRetAddr6238
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(V3D.SETYRetAddr6238)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.SETZ
(V3D.SETZ)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@V3D.SETZRetAddr6246
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(V3D.SETZRetAddr6246)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.PRINT
(V3D.PRINT)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.PRINTV3D 1
@V3D.PRINTRetAddr6254
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.PRINTV3D//call goto
0;JMP
(V3D.PRINTRetAddr6254)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.DISPOSE
(V3D.DISPOSE)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP POINTER 0
@SP
AM=M-1
D=M
@3
M=D
//PUSH THIS 0
@THIS
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.DISPOSERetAddr6262
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.DISPOSERetAddr6262)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 1
@THIS
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.DISPOSERetAddr6264
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.DISPOSERetAddr6264)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH THIS 2
@THIS
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.DISPOSERetAddr6266
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.DISPOSERetAddr6266)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH POINTER 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call MEMORY.DEALLOC 1
@V3D.DISPOSERetAddr6268
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@MEMORY.DEALLOC//call goto
0;JMP
(V3D.DISPOSERetAddr6268)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.INIT
(V3D.INIT)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.COPY
(V3D.COPY)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@V3D.COPYRetAddr6282
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(V3D.COPYRetAddr6282)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@V3D.COPYRetAddr6284
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(V3D.COPYRetAddr6284)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@V3D.COPYRetAddr6286
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(V3D.COPYRetAddr6286)
//Call V3D.SET 4
@V3D.COPYRetAddr6288
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.SET//call goto
0;JMP
(V3D.COPYRetAddr6288)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.DOT
(V3D.DOT)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.DOTRetAddr6296
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.DOTRetAddr6296)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.DOTRetAddr6298
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.DOTRetAddr6298)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@V3D.DOTRetAddr6300
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(V3D.DOTRetAddr6300)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@V3D.DOTRetAddr6302
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(V3D.DOTRetAddr6302)
//Call FLOAT.MUL 3
@V3D.DOTRetAddr6304
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.DOTRetAddr6304)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@V3D.DOTRetAddr6306
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(V3D.DOTRetAddr6306)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@V3D.DOTRetAddr6308
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(V3D.DOTRetAddr6308)
//Call FLOAT.MUL 3
@V3D.DOTRetAddr6310
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.DOTRetAddr6310)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@V3D.DOTRetAddr6312
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(V3D.DOTRetAddr6312)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@V3D.DOTRetAddr6314
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(V3D.DOTRetAddr6314)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@V3D.DOTRetAddr6316
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(V3D.DOTRetAddr6316)
//Call FLOAT.MUL 3
@V3D.DOTRetAddr6318
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.DOTRetAddr6318)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@V3D.DOTRetAddr6320
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(V3D.DOTRetAddr6320)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@V3D.DOTRetAddr6322
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(V3D.DOTRetAddr6322)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.DOTRetAddr6324
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.DOTRetAddr6324)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.DOTRetAddr6326
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.DOTRetAddr6326)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.CROSS
(V3D.CROSS)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.CROSSRetAddr6334
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.CROSSRetAddr6334)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.CROSSRetAddr6336
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.CROSSRetAddr6336)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.CROSSRetAddr6338
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.CROSSRetAddr6338)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.CROSSRetAddr6340
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.CROSSRetAddr6340)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@V3D.CROSSRetAddr6342
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(V3D.CROSSRetAddr6342)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@V3D.CROSSRetAddr6344
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(V3D.CROSSRetAddr6344)
//Call FLOAT.MUL 3
@V3D.CROSSRetAddr6346
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.CROSSRetAddr6346)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@V3D.CROSSRetAddr6348
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(V3D.CROSSRetAddr6348)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@V3D.CROSSRetAddr6350
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(V3D.CROSSRetAddr6350)
//Call FLOAT.MUL 3
@V3D.CROSSRetAddr6352
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.CROSSRetAddr6352)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@V3D.CROSSRetAddr6354
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(V3D.CROSSRetAddr6354)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@V3D.CROSSRetAddr6356
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(V3D.CROSSRetAddr6356)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@V3D.CROSSRetAddr6358
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(V3D.CROSSRetAddr6358)
//Call FLOAT.MUL 3
@V3D.CROSSRetAddr6360
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.CROSSRetAddr6360)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@V3D.CROSSRetAddr6362
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(V3D.CROSSRetAddr6362)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@V3D.CROSSRetAddr6364
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(V3D.CROSSRetAddr6364)
//Call FLOAT.MUL 3
@V3D.CROSSRetAddr6366
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.CROSSRetAddr6366)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@V3D.CROSSRetAddr6368
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(V3D.CROSSRetAddr6368)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@V3D.CROSSRetAddr6370
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(V3D.CROSSRetAddr6370)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@V3D.CROSSRetAddr6372
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(V3D.CROSSRetAddr6372)
//Call FLOAT.MUL 3
@V3D.CROSSRetAddr6374
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.CROSSRetAddr6374)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@V3D.CROSSRetAddr6376
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(V3D.CROSSRetAddr6376)
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@V3D.CROSSRetAddr6378
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(V3D.CROSSRetAddr6378)
//Call FLOAT.MUL 3
@V3D.CROSSRetAddr6380
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.CROSSRetAddr6380)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SUB 3
@V3D.CROSSRetAddr6382
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SUB//call goto
0;JMP
(V3D.CROSSRetAddr6382)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.SET 4
@V3D.CROSSRetAddr6384
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.SET//call goto
0;JMP
(V3D.CROSSRetAddr6384)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.CROSSRetAddr6386
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.CROSSRetAddr6386)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.CROSSRetAddr6388
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.CROSSRetAddr6388)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.CROSSRetAddr6390
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.CROSSRetAddr6390)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.CROSSRetAddr6392
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.CROSSRetAddr6392)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.LEN
(V3D.LEN)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.LENRetAddr6400
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.LENRetAddr6400)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.LENRetAddr6402
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.LENRetAddr6402)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.LENRetAddr6404
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.LENRetAddr6404)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@V3D.LENRetAddr6406
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(V3D.LENRetAddr6406)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@V3D.LENRetAddr6408
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(V3D.LENRetAddr6408)
//Call FLOAT.MUL 3
@V3D.LENRetAddr6410
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.LENRetAddr6410)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@V3D.LENRetAddr6412
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(V3D.LENRetAddr6412)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@V3D.LENRetAddr6414
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(V3D.LENRetAddr6414)
//Call FLOAT.MUL 3
@V3D.LENRetAddr6416
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.LENRetAddr6416)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@V3D.LENRetAddr6418
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(V3D.LENRetAddr6418)
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@V3D.LENRetAddr6420
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(V3D.LENRetAddr6420)
//Call FLOAT.MUL 3
@V3D.LENRetAddr6422
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.LENRetAddr6422)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@V3D.LENRetAddr6424
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(V3D.LENRetAddr6424)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@V3D.LENRetAddr6426
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(V3D.LENRetAddr6426)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.SQRT 2
@V3D.LENRetAddr6428
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.SQRT//call goto
0;JMP
(V3D.LENRetAddr6428)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.COPY 2
@V3D.LENRetAddr6430
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.COPY//call goto
0;JMP
(V3D.LENRetAddr6430)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.LENRetAddr6432
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.LENRetAddr6432)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.LENRetAddr6434
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.LENRetAddr6434)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.LENRetAddr6436
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.LENRetAddr6436)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.NORM
(V3D.NORM)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.NORMRetAddr6444
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.NORMRetAddr6444)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call FLOAT.GETPOS 0
@V3D.NORMRetAddr6446
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(V3D.NORMRetAddr6446)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.NORMRetAddr6448
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.NORMRetAddr6448)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.NORMRetAddr6450
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.NORMRetAddr6450)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.NORMRetAddr6452
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.NORMRetAddr6452)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.LEN 2
@V3D.NORMRetAddr6454
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.LEN//call goto
0;JMP
(V3D.NORMRetAddr6454)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.GT 2
@V3D.NORMRetAddr6456
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GT//call goto
0;JMP
(V3D.NORMRetAddr6456)
//IF-GOTO IF_TRUE0
@SP
AM=M-1
D=M
@V3D.NORM$IF_TRUE0
D;JNE
//GOTO IF_FALSE0
@V3D.NORM$IF_FALSE0
0;JMP
(V3D.NORM$IF_TRUE0)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@V3D.NORMRetAddr6458
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(V3D.NORMRetAddr6458)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@V3D.NORMRetAddr6460
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(V3D.NORMRetAddr6460)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@V3D.NORMRetAddr6462
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(V3D.NORMRetAddr6462)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@V3D.NORMRetAddr6464
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(V3D.NORMRetAddr6464)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@V3D.NORMRetAddr6466
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(V3D.NORMRetAddr6466)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DIV 3
@V3D.NORMRetAddr6468
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DIV//call goto
0;JMP
(V3D.NORMRetAddr6468)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.SET 4
@V3D.NORMRetAddr6470
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.SET//call goto
0;JMP
(V3D.NORMRetAddr6470)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//GOTO IF_END0
@V3D.NORM$IF_END0
0;JMP
(V3D.NORM$IF_FALSE0)
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.SET 4
@V3D.NORMRetAddr6472
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.SET//call goto
0;JMP
(V3D.NORMRetAddr6472)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
(V3D.NORM$IF_END0)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.NORMRetAddr6474
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.NORMRetAddr6474)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.NORMRetAddr6476
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.NORMRetAddr6476)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.NORMRetAddr6478
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.NORMRetAddr6478)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.NORMRetAddr6480
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.NORMRetAddr6480)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.REFLECT
(V3D.REFLECT)
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.REFLECTRetAddr6488
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.REFLECTRetAddr6488)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//Call FLOAT.GETPOS 0
@V3D.REFLECTRetAddr6490
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.GETPOS//call goto
0;JMP
(V3D.REFLECTRetAddr6490)
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.REFLECTRetAddr6492
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.REFLECTRetAddr6492)
//POP LOCAL 1
@LCL
A=M
D=A
@1
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.REFLECTRetAddr6494
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.REFLECTRetAddr6494)
//POP LOCAL 2
@LCL
A=M
D=A
@2
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.NEW 3
@V3D.REFLECTRetAddr6496
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.NEW//call goto
0;JMP
(V3D.REFLECTRetAddr6496)
//POP LOCAL 3
@LCL
A=M
D=A
@3
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.DOT 3
@V3D.REFLECTRetAddr6498
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.DOT//call goto
0;JMP
(V3D.REFLECTRetAddr6498)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@V3D.REFLECTRetAddr6500
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.REFLECTRetAddr6500)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ABS 2
@V3D.REFLECTRetAddr6502
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ABS//call goto
0;JMP
(V3D.REFLECTRetAddr6502)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@V3D.REFLECTRetAddr6504
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(V3D.REFLECTRetAddr6504)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@V3D.REFLECTRetAddr6506
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.REFLECTRetAddr6506)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@V3D.REFLECTRetAddr6508
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(V3D.REFLECTRetAddr6508)
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@V3D.REFLECTRetAddr6510
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(V3D.REFLECTRetAddr6510)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@V3D.REFLECTRetAddr6512
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(V3D.REFLECTRetAddr6512)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@V3D.REFLECTRetAddr6514
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.REFLECTRetAddr6514)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@V3D.REFLECTRetAddr6516
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(V3D.REFLECTRetAddr6516)
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@V3D.REFLECTRetAddr6518
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(V3D.REFLECTRetAddr6518)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 2
@ARG
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@V3D.REFLECTRetAddr6520
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(V3D.REFLECTRetAddr6520)
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.MUL 3
@V3D.REFLECTRetAddr6522
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.MUL//call goto
0;JMP
(V3D.REFLECTRetAddr6522)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH ARGUMENT 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@V3D.REFLECTRetAddr6524
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(V3D.REFLECTRetAddr6524)
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.ADD 3
@V3D.REFLECTRetAddr6526
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.ADD//call goto
0;JMP
(V3D.REFLECTRetAddr6526)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.SET 4
@V3D.REFLECTRetAddr6528
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 9
@9
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.SET//call goto
0;JMP
(V3D.REFLECTRetAddr6528)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.REFLECTRetAddr6530
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.REFLECTRetAddr6530)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.REFLECTRetAddr6532
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.REFLECTRetAddr6532)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 2
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.REFLECTRetAddr6534
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.REFLECTRetAddr6534)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH LOCAL 3
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.DISPOSE 1
@V3D.REFLECTRetAddr6536
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.DISPOSE//call goto
0;JMP
(V3D.REFLECTRetAddr6536)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
//Function V3D.PRINTV3D
(V3D.PRINTV3D)
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@V3D.PRINTV3DRetAddr6544
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(V3D.PRINTV3DRetAddr6544)
//PUSH CONSTANT 60
@60
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@V3D.PRINTV3DRetAddr6546
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(V3D.PRINTV3DRetAddr6546)
//Call OUTPUT.PRINTSTRING 1
@V3D.PRINTV3DRetAddr6548
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(V3D.PRINTV3DRetAddr6548)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETX 1
@V3D.PRINTV3DRetAddr6550
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETX//call goto
0;JMP
(V3D.PRINTV3DRetAddr6550)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.PRINT 1
@V3D.PRINTV3DRetAddr6552
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.PRINT//call goto
0;JMP
(V3D.PRINTV3DRetAddr6552)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@V3D.PRINTV3DRetAddr6554
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(V3D.PRINTV3DRetAddr6554)
//PUSH CONSTANT 44
@44
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@V3D.PRINTV3DRetAddr6556
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(V3D.PRINTV3DRetAddr6556)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@V3D.PRINTV3DRetAddr6558
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(V3D.PRINTV3DRetAddr6558)
//Call OUTPUT.PRINTSTRING 1
@V3D.PRINTV3DRetAddr6560
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(V3D.PRINTV3DRetAddr6560)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETY 1
@V3D.PRINTV3DRetAddr6562
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETY//call goto
0;JMP
(V3D.PRINTV3DRetAddr6562)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.PRINT 1
@V3D.PRINTV3DRetAddr6564
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.PRINT//call goto
0;JMP
(V3D.PRINTV3DRetAddr6564)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@V3D.PRINTV3DRetAddr6566
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(V3D.PRINTV3DRetAddr6566)
//PUSH CONSTANT 44
@44
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@V3D.PRINTV3DRetAddr6568
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(V3D.PRINTV3DRetAddr6568)
//PUSH CONSTANT 32
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@V3D.PRINTV3DRetAddr6570
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(V3D.PRINTV3DRetAddr6570)
//Call OUTPUT.PRINTSTRING 1
@V3D.PRINTV3DRetAddr6572
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(V3D.PRINTV3DRetAddr6572)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH ARGUMENT 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call V3D.GETZ 1
@V3D.PRINTV3DRetAddr6574
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@V3D.GETZ//call goto
0;JMP
(V3D.PRINTV3DRetAddr6574)
//POP LOCAL 0
@LCL
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH LOCAL 0
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Call FLOAT.PRINT 1
@V3D.PRINTV3DRetAddr6576
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@FLOAT.PRINT//call goto
0;JMP
(V3D.PRINTV3DRetAddr6576)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.NEW 1
@V3D.PRINTV3DRetAddr6578
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.NEW//call goto
0;JMP
(V3D.PRINTV3DRetAddr6578)
//PUSH CONSTANT 62
@62
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call STRING.APPENDCHAR 2
@V3D.PRINTV3DRetAddr6580
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 7
@7
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@STRING.APPENDCHAR//call goto
0;JMP
(V3D.PRINTV3DRetAddr6580)
//Call OUTPUT.PRINTSTRING 1
@V3D.PRINTV3DRetAddr6582
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THIS
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE THAT
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP STATE ARG
@SP
AM=M-1
D=M
@ARG
M=D
//PUSH STATE SP
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP STATE LCL
@SP
AM=M-1
D=M
@LCL
M=D
@OUTPUT.PRINTSTRING//call goto
0;JMP
(V3D.PRINTV3DRetAddr6582)
//POP TEMP 0
@SP
AM=M-1
D=M
@5
M=D
//PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
//PUSH STATE LCL
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//POP TEMP 1
@SP
AM=M-1
D=M
@6
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 2
@SP
AM=M-1
D=M
@7
M=D
 
@7
A=M
D=M
@7
M=D
//POP ARGUMENT 0
@ARG
A=M
D=A
@0
D=D+A
@5
M=D
@SP
AM=M-1
D=M
@5
A=M
M=D
//PUSH STATE ARG
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//ADD
@SP
AM=M-1
D=M
A=A-1
M=D+M
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THAT
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@THIS
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@ARG
M=D
//PUSH TEMP 1
@6
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSH CONSTANT 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//SUB
@SP
AM=M-1
D=M
A=A-1
M=M-D
//POP TEMP 3
@SP
AM=M-1
D=M
@8
M=D
@8
A=M
D=M
@LCL
M=D
//POP STATE SP
@SP
AM=M-1
D=M
@SP
M=D
@7
A=M
0;JMP
