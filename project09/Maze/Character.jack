/*
 * This class maintains the character's position and facing direction.  This 
 * class also handles the movement of the character (forwards, backwards, 
 * rotate clockwise, and rotate counter-clockwise)
 */
class Character {

	/* ---------- Variables ---------- */
	field Grid world;
	
	// Character information
	field V2D pos;		//world coords of character
	field V2D gridNum;	//which grid you are in
	field V2D direction;	//(0,1) would be north, (1,0) would be east...

	

	constructor Character new(Grid w) {
		let world = w;
		let pos = V2D.new(Grid.getGridSize()/2, Grid.getGridSize()/2);
		let gridNum = V2D.new(w.getSizeX(), w.getSizeY());
		let direction = V2D.new(0,1);
		return this;
	}

	method void dispose() {
		do world.dispose();
		do Memory.deAlloc(this);
		return;
	}

	method boolean verifyMove(int x, int y) {
		var boolean canMove;
		let canMove = false;
		if (y = 1) {
			// move forwards (North)
			let canMove = ~world.hasNorthWall(gridNum.getX(), gridNum.getY());
		}
		if (y = -1) {
			// move backwards (South)
			let canMove = ~world.hasSouthWall(gridNum.getX(), gridNum.getY());
		}
		if (x = -1) {
			// move counter-clockwise (West)
			let canMove = ~world.hasWestWall(gridNum.getX(), gridNum.getY());
		}
		if (x = 1) {
			// move clockwise (East)
			let canMove = ~world.hasEastWall(gridNum.getX(), gridNum.getY());
		}
		return canMove;
	}
	
	/**
	Checks if the character is about to switch tiles.
	*/
	method boolean switchingTiles()
	{
		var V2D soonToBePos;
		var V2D soonToBeGridNum;
		var boolean switching;
		var int xmove;
		var int ymove;
		
		let switching = false;
		
		let soonToBePos = V2D.empty();
		
		let gridNum = Grid.coordTransform(pos);
		
		do V2D.add(pos, direction, soonToBePos);
		
		let soonToBeGridNum = Grid.coordTransform(soonToBePos);
		
		if(~(V2D.equals(gridNum, soonToBeGridNum)))
		{
			let switching = true;
			let xmove = soonToBeGridNum.getX() - gridNum.getX();
			let ymove = soonToBeGridNum.getY() - gridNum.getY();
		}
		
		return switching;
	}

	method void move(int movement) {
		if (movement = 1) {
		}
		if (movement = 2) {
		}
		if (movement = 3) {
		}
		if (movement = 4) {
		}
		do Sys.wait(5);
		return;
	}
}
