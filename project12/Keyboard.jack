// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
	/** Initializes the keyboard. */
	static int keyAddress;
	function void init() {
		let keyAddress = 24576;
		return;
	}
	/**
	* Returns the ASCII code (as char) of the currently pressed key,
	* or 0 if no key is currently pressed.
	* Recognizes all ASCII characters, and the following extension
	* of action keys:
	* New line = 128 = String.newline()
	* Backspace = 129 = String.backspace()
	* Left Arrow = 130
	* Up Arrow = 131
	* Right Arrow = 132
	* Down Arrow = 133
	* Home = 134
	* End = 135
	* Page Up = 136
	* Page Down = 137
	* Insert = 138
	* Delete = 139
	* ESC = 140
	* F1 - F12 = 141 - 152
	*/
	function char keyPressed() {
		return Memory.peek(keyAddress);
	}
	/**								
	* Reads the next character from the keyboard.
	* waits until a key is pressed and then released, then echoes
	* the key to the screen, and returns the value of the pressed key.
	*/
	function char readChar() {
		var char val, temp;
		let val = Keyboard.keyPressed();
		while(val=0){//wait till read in nonzero
			let val = Keyboard.keyPressed();
		}
		let temp = Keyboard.keyPressed();
		while(~(temp=0)){//wait till read in zero
			let temp = Keyboard.keyPressed();
		}
		do Output.println();
		do Output.printString("ECHO: ");
		do Output.printInt(val-48);
		do Output.println();
		return val;
	}
	/**								
	* prints the message on the screen and then reads the next line
	* (until a newline character) from the keyboard and returns its value.
	*/
	function String readLine(String message) {
		var String s;
		var char ch;
		do Output.printString(message);
		let s = String.new(100);
		let ch = Keyboard.readChar();
		while(~(ch=128)){
			if(ch=129){
				do s.eraseLastChar();
			}else{
				do s.appendChar(ch);
			}
			let ch = Keyboard.readChar();
		}
		return s;
	}
	/**								
	* prints the message on the screen and then reads the next line
	* (until a newline character) from the keyboard and returns its
	* integer value (until the first non numeric character).
	*/
	function int readInt(String message) {
		var int i;
		var String s;
		let s = Keyboard.readLine(message);
		let i = s.intValue();
		return i;
	}
}

