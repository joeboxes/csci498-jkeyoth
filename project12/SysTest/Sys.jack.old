/*
Sys.jack
*/
class Sys{
	/** Makes all required initializations. */
	function void init(){
		do Memory.init();
		do Math.init();//for SOME REASON math uses memory
		do Output.init();
		do Screen.init();
		do Keyboard.init();
		do Main.main();
		do Sys.halt();
		return;
	}
	/** Halts the execution. */
	function void halt(){
		var int i;
		let i = 0;
		while(i=0){}//infinite
		return;
	}
	/** Waits approximately duration milliseconds before it returns. */
	function void wait(int duration){// BUSY WAIT
		var int i, j, minOut, minInt;
		let minOut = 10*duration;
		let minInt = 25;
		let i = 0;
		while(i<minOut){
			let j = 0;
			while(j<minInt){
				let j = j + 1;
			}
			let i = i + 1;
		}
		return;
	}
	/** prints the given error code in the form "ERR<errorCode>",
	*  and halts. */
	function void error(int errorCode){
		do Output.printString("ERR");
		do Output.printInt(errorCode);
		do Sys.halt();
		return;
	}
}

